{"version":3,"sources":["src/shared/canvas.js","src/KeyboardHandler.js","src/input.js","src/AudioPlayer.js","src/classes/loaders.js","src/classes/character.js","src/classes/scene.js","src/shared/helpers.js","src/classes/spider.js","src/shared/UI.js","src/classes/plant.js","src/classes/light.js","src/classes/timer.js","src/classes/index.js","src/clickHandler.js","src/gameLoop.js","static/manifests/gameConfig.json","src/main.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["canvas","document","querySelector","ctx","getContext","font","width","innerWidth","height","innerHeight","mask","createElement","maskCtx","groundPositionX","groundHeight","groundY","resizeCanvas","canvasCenter","x","y","window","addEventListener","KeyboardHandler","constructor","keyStates","Map","keyMap","addMapping","code","callback","set","handleEvent","event","has","preventDefault","keyState","type","get","listenTo","forEach","eventName","setUpKeyboard","character","keyboard","direction","right","left","jumping","setUpMouse","clientX","clientY","rotate","e","onClick","AudioPlayer","audioContext","AudioContext","audioBuffers","muted","gainNode","createGain","loadAudio","src","fetch","then","response","arrayBuffer","decodeAudioData","addAudio","name","buffer","playAudio","source","createBufferSource","connect","destination","start","toggleMuteAudio","gain","value","loadAllSounds","Promise","all","audioPlayer","gunshotSrc","splashSrc","glassShatterSrc","musicSrc","gunshot","splash","glass","music","loadImage","url","resolve","image","Image","loadManifest","res","json","loadAnimations","animations","animationsMap","animation","spriteMap","frames","frame","rect","Character","manifest","isOnGround","deltaX","deltaY","angle","velocityX","velocityY","gravity","flip","shot","distance","ready","streak","highestStreak","lowerBody","runningAnimation","jumpingAnimation","upperBody","flashAnimation","active","duration","flashImage","shootingAnimation","size","setUp","draw","rotationPoint","strokeStyle","getFrame","Math","floor","translate","runShootingAnimation","drawImage","imageFlipped","setTransform","fillStyle","move","spriteSheet","drawFlash","fillRect","atan2","PI","epicEntrance","reject","entering","setInterval","clearInterval","loadCharacter","spriteSheetURL","imageURL","flippedImageURL","flashImageURL","animationsToBeLoaded","Scene","loadScene","mainImageURL","getRandomInt","max","random","randomIntFromRange","min","checkCollision","obj1","obj2","Spider","position","isShot","hasKilledAPlant","killer","splashAngle","cos","sin","points","shown","speed","multiplier","splashImage","drawPoints","plants","plant","plantBoundingRect","shrink","game","state","spidersKilled","config","levels","level","numberOfSpiders","textAlign","fillText","spidersKilledTotal","score","biggestStreak","SpiderFactory","createSpiders","spiders","i","length","push","loadSpiderFactory","splashImageURL","addEventListeners","querySelectorAll","el","target","dataset","id","plantSeed","classList","toggle","showGameOver","remove","innerHTML","reduce","acc","updateLevel","innerText","updateScore","updateStreak","streakCont","offsetWidth","add","hideLoadingScreen","PlantFactory","createPlants","numberOfPlants","loadedPlantImages","potMargin","plantSizes","widthSum","offset","Plant","positionX","positionY","plantImages","planted","showSeed","potCenter","timeToShowSeedButton","activePlant","activePlantImage","createSeedButton","grow","seedsPlanted","outerHTML","showSeedButton","overlay","loadPlantFactory","Light","color","lightWidth","turnOn","numberOfLights","lampCenter","turnedOn","perspective","drawLight","beginPath","moveTo","lineTo","closePath","fill","drawBody","LightFactory","createLights","delay","lightMargin","lights","light","loadLightFactory","Timer","startTime","timeElapsed","Date","logTimeElapsed","timeDiff","seconds","round","getTimeElapsed","checkTarget","targets","find","GameLoop","seedsShown","currentLevel","gameOver","levelUpdated","console","log","timer","scene","plantFactory","lightFactory","spiderFactory","settings","numberOfPots","lamps","timing","startLights","entity","nextLevel","gameLoop","globalCompositeOperation","spider","showSeeds","lamp","requestAnimationFrame","module","exports","titleScreen","tutorialScreen","startGame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links"],"mappings":"AkBAA,ACAA,AHAA8T,IEAIK,ACAAU,EHAE,CAACd,GGAG,GDAG,ACAAe,CHAb,EEAgB,CFAC,GEAjB,ACAoB,CAAC,cAAD,CAApB;AHCI,UAAQ,oBADK;AECjB,ACCA,AFFA,ADEI,SEDKV,ACCAW,KHAQ,KGAjB,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,AHAM,MEDF,ACCAC,CDDCd,MCCM,CHAK,EEDhB,ACCca,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEf,ADFJ,ADGY,IEDRA,SAAS,GAAGE,MFCY,MEDA,EAAxB;AACD,ACADY,AHDgB,EGChBA,GHFe,IGER,CAACE,MAAR,GAAiB,YAAY;AAC3BH,ANLJ,AIEA,AjBFO,AgBMC,IGDJA,EnBLShV,EmBKL,CAAC8N,GnBLU,EgBMD,CGDd,AnBLkB7N,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AkBML,ACAC,AhBNH,AFAe,AIAf,AMAA,ADAA,AJAA,AEAA,AIAO,AEAA,ACAP,AbAA,AOAA,AOOY,GGHV,GlBJmBoB,AWARmQ,AEAAS,GIMJiC,ENNF,CAAY,KEAK,CIMtB,EJNyB,CbAZ,AaAa,CbAS,EeOP;AEA7B,AjBNG5S,AYDJ,ADCIA,AED0B0B,AdCvB,AgBKW,EfLd1B,AWAAA,AED0B0B,IdCjB9C,GcDe,AdCZ,GAAGH,CCAJ,AWAA,GXAG,AWAA,EZAO,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AmBML6U,AhBNF,AFCQ,AIAR,AQFA,AFCA,APDO,AMEP,AJDA,AEAA,AICQ,AEF+B/R,ACCvC,AbAA,AOCA,AFFO,ASEU,EGKf+R,ALPqC/R,CEAtB,MGOR,AfPO0C,AQEH8L,ALFGpH,CYON8K,IAAR,GAAeJ,CfPV,AQEC,CRFkBnP,EeOL,APLI,ALFlB,CYOeuP,AfPf,AQEC,ALFqB7K,EHAE,CGAxB,CYOU,CAAU8K,AZPO,KYOjB,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCzD,IAAI,CAAC0D,GAAL,EAA/C;ADEF,ACDEN,AlBLM,AYHR,ATCI,AQEI,AEHoB,AGI5B,ARDO,ATDP7U,AODI,ASSA,CFVuB,CKQzB6U,CLRgD7C,AdE/C,CAAC9R,EmBME,AFJA2T,ARDO5G,CUKNmI,CnBNP,CkBOSlB,AjBNI7S,AGFF,AQEEmQ,ALFFjJ,CODgB,CdEhB,CcFgD7G,AEU7C,CZTCoD,AGAA,CAAC0D,GYOd,AFJe,CEIC6M,AlBLV,CMFG,CHAA,AQEH,AEHmB,AGIPvV,AVHEyI,CWQtB,AjBNyB,AGFF5C,EQEI,AHAG,ATD9B,CkBOwB,ANNhB,ALFkB,CNEGrE,AaH2C,APC7C+I,CEEMoB,ERAR,AGFK,AaGF,CAAC1L,CEI3B,AlBLM,CkBKuB+U,AlBPb,AMAI,CNId,AGJ0B,AKEK,IAAI,AFFLvM,EYOpC,EAAsCsM,AZPE,CAACrM,CUGvB,CAAuB,CEIC,CAAC8M,CZPP,CAAWlL,GAAX,CAA3B,CAAP,IYOF,CFJkB,CAApB;ACME,ACDD,AhBPD,AECA,AQHA,AFEA,APAQ,AMCR,AJAO,AEDP,AIEK,AEHD1I,ACCJ,AEGA,ARDI5B,ATDJD,AODC,ASSO,EFVJ6B,ALGA5B,IHDSkK,AWEP8J,AjBFA,CAAC3T,GIDOyF,AUDF,ALGA,CHDL,AQDCoM,ALEK9E,CHDM,ANAnB,GIDmB,AJCJ9M,EgBQM,CZTC,AUAP,AEQD,CFRE6R,CGGI,EbHMpM,CUAlB,AGGe/F,CHFXsN,CdAZ,EIDsB,AKElB,CAA0B,CLFtB,CUCU,CGEa,CAACrN,EHDhB,CAACqN,MAAM,ALAnB,CKAoBvC,CLAqBzI,EQCtB,CAAuB,EHD9B,ELAZ,CAAiD+K,CKCrCrK,CLDuC,IAAI,EKCpC,GAAGsK,CGAH,CAAvB,IHAgC,CAACrM,CADjB,IAEA+B,OAAO,GAAGsK,MAAM,CAACrM,CAAP,GAAWqM,MAAM,CAACjN,KAF5B,IAGA4C,OAAO,GAAGqK,MAAM,CAACpM,CAHjB,IAIA+B,OAAO,GAAGqK,MAAM,CAACpM,CAAP,GAAWoM,MAAM,CAAC/M,MANpC,CADI,CAAR;AIUF,AjBLM,AYNR,ATGQuF,AECJxE,AQOH,AGLDyS,ARDQ1G,ATDRtN,AgBQQ,CFZD,CRIHuB,EFDIwE,AKEAuH,ESMF,ATNI,ATDJ,CSCKjM,ATDJb,ECEMkB,AGHA,CAACL,CaGH,CAACA,CXFG,ANAf,CMAgBwF,CLER,CDFQpG,ECEM,CeMC,CAFT,EfJYgB,AKFX,CGCP,CHDkB,AGCE,CRCN,CGHd,CHGA,AGHuB,AJC/B,CiBEA,CAA6B,ERDrB,ELFA,AKE6B,CAAC,CLFC,CaGvC,EAAsC,GbHO,GaGD;ACMxC,ACDJ,AhBRA,AFIK,AIHL,AQJA,AFIO,APAKqE,AMCL,AJAC,AEFR,AIEIlB,AGFJ,AbAO,AeIHoP,ARFoCzG,ATCjC,AOFA,ASSC,EJRJ3I,AKEAoP,EEIA0B,ERPSvF,APADrK,AMCC4I,ARFAjM,AOE2B8K,ATC3B7M,CYDJ,ENAImG,ACDG4D,CWQN,ANPE,AZCK,CWFV,CAAY,CPAA,AaGJ,AjBDKxK,CkBMNqU,ACDA,AfPMvO,AaGJ4H,GEIC,AbNT,CIAD,CQOG,AdRS,AMCO,ARFA,CECd,AECY9G,CYOpB,ACDJ,AnBL4B,CEHCnE,AFGA/B,CiBCzB,CAAsB6N,EDMI,CCN1B,AVHG,CDCC,AWEsB,AVHK9D,GLDG,AKC/B,EAAiCH,ELDE,AFGtB,CiBChB,AjBDuC,AOFpC,EAAsC,MPEzB,CAAb;AkBOJ,ALbH,AFKIhJ,APAK,AMCLA,AJAC,AMAG,AVFJ,AeKA0S,ARJkC,AFAlC,ASKU,ELLV1S,ADCAA,AOGA0S,CCEF,AFXe,CEab,CdVI,AKE6B,GPD3BtR,CUEG+O,ALDFhJ,CEA0C,CSQ1C6L,EPRI,ADCA,AHDA,CWQX,APRY9G,ADCA5G,AHDA8B,EWQA,APRD,ATDG,AeKA,CAACtH,CNJC8N,ACCZ,CVFa,AKCV,CAAWzG,CKCG,CFAV,CRFUpH,CQEC,AHDA,CKCGsQ,ALDFpH,EIAZ,EAAgB4E,ACCN,EAAjB,ALDc,EUIlB,CAAgC,GVJG7E,CIAxB,EAA2BjK,AJAA,CUItC,EAAyC,AVJAoK,EIA9B,CJAwB,CIAUlK,ATD5B,EAAjB,AeK+C,AVJA,CAA7B,GIAP,CJAyCkK,CIAC3E,EJA9C,CAAP,EIAW,EAAiDqK,KAAjD,EAAwDC,UAAxD,EAAoEC,MAApE,EAA4EC,cAA5E,EAA4F;AOSvG,ACFJ,AlBHI5O,AIFG,AQPP,AFMQ,APAAoE,AMCA,AFFD,AIEF,AGHL,AbEIpD,AeIIsR,ARJIrI,ATCL,AODN,ASSG,EfNAjK,ACHAgB,EEAIoD,AaIAkO,EZHKrN,AGFAkE,ACCDc,ATCChL,EkBOL4T,CCFCmB,ARNIlI,APAA,AMCA5G,CNDC/C,AFAF,CSAJ,ATAKnC,CDGC,AOJP,ACCW,AOSJ,CfNCC,AGHP,AIDY,ACCD2L,ATCC,AgBSZ,CLVUE,COQH,AbPR,CAAgB,AMDf,APAY5H,AJCGnF,CCET,ASFN,CQOU,ACFlB,AFFsB,CCIH,AjBLEmB,AGHb,AaIe8L,ARJE,CCCD9G,ADDE2G,ATCC,CmBKN,AjBNjB,AFCwBpN,CEDJ,EgBQAmU,GAAG,AjBLb,AQHK,CSQSE,ARPpB,ARDJ,AeII,ARJ0BhH,CRGH,AgBCEe,CfJDrM,AOAd,CAAN,ATCW,CiBGf,ARJ8BuL,ATCC,CkBOrB,ADJmB,ECIFgH,ClBPZ,CAAhB,CEDiC,EgBQtB,CAAuB,ADJjC,ARJI,CPAgC,8DgBQ1B,CAAd;ACDF,AlBHM,AIFJnT,AQRJ,AFOQ,APAH,AMCA,AJDD+G,AEDA/G,ANCImB,AeKA,ARLC,AOUG,EXTRnB,ACDA+G,AEDA/G,CJLO,CAAP,AFMImB,COFA,CUQFgT,AbNE,CAACvV,ELGIuB,AUHApB,CLAL,AUUU,CADV,CVTM,CDCC,AGFA,ANCE,CGCDuG,AMDR,AHDQA,ANCEjE,CDGV,CkBGN,AlBHkBd,CUHCxB,CQMH,ClBHV,CAAgBsB,EIFT,AMDP,AHDO,CNCP,CDGA,AIFkB,AGFA,ANCEiB,EDGEhB,EgBEbsK,CfLT,GAA4BhK,EDG5B,MCHA,OeKA,EAAiB6B,IAAjB,CAAsBkQ,SAAS,IAAI;ACGvC,ACDA,AhBTG,AFMF,AIFG,AMDA,APAP,AEAO/T,AEDA,AICJ0R,AGFJ,AbEK,AeKOa,ARLP,ATALhS,AOAO,ASUK,EJVRmR,CVFA,AOFA,CHII1R,ANAJ,CAACG,CGHQgD,AcQDoP,CXLD,CYOH8B,AZPI1L,CDCCjC,AMDArG,AJAGmK,CCDF,ARCd,GiBKmB,AjBLNpK,CiBKOoS,CCEhB,APPI,CCAU,CMOD,AfVV,AEIC,ACDA,AWKI,CdRa,AQGHnS,ALAA,AWKE,CLLH,CPCGqG,GCDGA,ANA3B,AOAO,ASUwB,CLVvB,AJAuB+D,IFCvB,AEDD,EAA8BC,CDAf,CAAc9E,ECA7B,EAAoC,CDAnC,EAAmC,AWK/B,CXLJ,EAAsC,CAAtC,EAAyC/F,eAAOM,KAAhD,EAAuDN,eAAOQ,MAA9D;AYQF,ACDH,AhBTCe,AEII,AQTR,AFQQ,ADAJoN,AJAC,AEFWhK,AIER,AVCJhC,AeIQuR,ARLRjU,ATAJS,AOAI,ASOI,EbVJa,AOGAoN,ARCAhM,AODA1C,COMU,ChBNV,CAACO,AgBWG,CRbQmE,ASOJuP,AVJJtJ,EKDIkH,CPCClP,AMDA1B,CAAL,ATCI,AODA,AFCA,CLACS,AODAzB,ATAb,AOCagB,CAAL,CWMKyT,AfVE,AQGExF,CDAD,AVAF1O,CUAGmO,AOKI,AVJJ/D,CJJC,ASGE,CJFN,CHGN,CODe,ALCF,CKDG,ALCF3J,CFAG,AHArB,AKAa,CIDT,ATCgB,CgBMD,CAACsT,ANPI5C,AHAxB,AFCsB/G,CEDC,ATA3B,GYAwB,AVCpB,AKA0B,CGDd,AHCevK,CLAC6B,CgBMD,ARPE,CQOD,CAAD,ANPM,CMOd,AXNf,CWMF,GNPoCuP,AVCF,AKChC9G,CEFJ,EAAuCvJ,CPCC,AKChC,CAACH,CAAL,GKFe,ALEN0J,IKFsC,ALElC,CAACtK,GKFd,EHAJ,AFEI,CEFoD,EFE9BuK,IAAI,CEF9B,AFE+B3J,CAD3B,CED6D,GFG7D0J,IAAI,CAACzJ,CAAL,GEHyE,AFGhE0J,IAAI,CAAC1J,CAAL,GAAS0J,IAAI,CAACrK,MAFvB,IAGAoK,IAAI,CAACzJ,CAAL,GAASyJ,IAAI,CAACpK,MAAd,GAAuBqK,IAAI,CAAC1J,CAJhC,EAKE;AWGD,AfVG,AFMJY,AIFQe,AMDJ,APAD,AMAC,AFHqBiI,AIGrB,AGDD,AbECrI,AeIC,ARLD,ATCD,AOIC,ASMI,EfRRX,ECFIW,CeCA,CZDII,AGJiBiI,AOEhBsH,AfEAxR,EYDDkR,CTHCxO,AQGApC,APAG8E,AKAH0H,CJCG,AMDR,ADAM,AMWI,CTNH,ASKP,CXTU,CJEH,AUHEyB,ATCA,CDEDpN,AONF,AOEO,AbEHY,CUDC,ALKX,EFLiB,AUDD,CHCF8F,AHAd,CRGO,AQHQkF,ENHf,AFMe,AGHhB,AJCqB,CWDpB,APAqBvJ,AQAH,CAAC2N,AGDG7F,AbEtB,CCJoB,ADIArJ,AFAG,CSDvB,ATCD,CIDA,AKAuB,ENHEU,ACGG,AQAb,AVCd,CUDyBsO,AGDT,EbEW3P,COD3B,CMDgC,IHClB,CAAd,CVCA,CCJoB,EAApB;AeWL,ACDDuT,AhBTM,AFMA,AIFI7S,AQXZ,AFUQ,APAJ,AMDYvC,AJPG,AEIoBA,AOGnCc,AbEC,AeIA,AVAA,ASMO,EGLVsU,AJPEtU,CbAA,AeDA,AVAA,GFGQyB,AKFIvC,AFHuBA,EOG7B,CZFGmD,AQGA+M,APAFzM,AWDAiI,ARMA,CNFG,CIFG,AKFH,AFHA,CWUF,CdLO,AUFf,CXCY,CeMD4J,AfNG,CWDA,EVAO,CMCjB,ERHA,CQGkB,CKWK,CbdH,CgBSH,CAAC,EhBTMnU,CCGD4C,EDHH,EAApB,ACG4B,KeME,EfNtB,CAAL,CAAiCL,IAAjC,CAAsCkC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA7C,CAAP;AeOA,AhBTI,AFKQvE,AIDJmB,AQZZ,AFWY7B,APAX,AMFsBV,AFHuBA,AIItC,AGAA2L,AbGJxJ,AeGH,ARNOwC,ATED,AOIC,ASGA,CCdR,CfQIxC,CcCU,CDJNwJ,CCaA,CfVQvK,AIDJmB,AMDA7B,ADFWV,AFHuBA,ARMjCM,CWDA,CQML+U,APPI,CTFCnS,AQGE,CIDD,AbGF,CAAC/B,AKGE,CGPD,AKCEwK,CIOH,AdLM,AOFFwF,CTFT,AQGYzQ,CNCC,AMDN,CQMCjB,AZDR,CJRa,CQGG,AIFN,AfGO,GECrB,AFDwB,CGJpB,ADKgB,CSFKK,AXCtB,CmBKiB,APPZ,COOa+M,GRND,ACDQ0E,CVG5B,AOHgBlN,EECiB,ATEJ1C,CSHP,GCAlB,EAAiC,EVGA,EiBIzB,CAA0B,CjBJG,COHrC,sBUOQ,CAAZ;ADEF,AfVM,AFIM,AIJW,AQTzB,AFYYhB,ADHmB4E,AFHjB,AIKF,AGAJkG,AbGAvJ,AeIR,ARPK,AFMA,ASOO,GPhBR,CMGIuJ,AbGAvJ,CGLA,CMGIvB,ADHmB4E,CCGlB,CVCY/D,AOPgC6E,CUahD,AfVIlD,AQGE,AIDF,CCaK,CNfJ,AEEGgO,AGAF,ACYP,CEJN,CjBNM,ACCS,CSFGxQ,ATEFyB,CSFH,CHNP,CLGA,CQGgB,ERHA,ESEZ,CDCiBpC,ATErB,CAAoBuC,CCLCQ,ASEEwO,IDCP,ETEhB,CSF8B,ACD1B,CAD6B,CAE7B,AVE0B5P,GCLd,CAAkByB,IDKlC,MCLgB,EAAhB;AeWP,ACFG,AhBRC,AEIG,AQdR,AFU0B,APGnB,AMJ+BiL,AFF9B,AIMC,AGDGiB,AbGP,AOHJ,ATEM,AOIN,ASOW,CPvBL,EPWH,CFCO/O,CWJH,CDD8B8N,AKG1BiB,GIMH,AdJIhJ,ADDGV,AINHS,EROK,EmBILkG,CAAC,AnBJO/M,GmBIJ,AXXT,CWWJ,AJNoB,CVEhB,CcIY+M,AXXIlG,AOKE,AfEC,CmBIN,AJPN,AfGarG,CKAF,CDDnB,AMJO,AMgBiB,CGPPqV,AfLOxP,ECCvB,CLAa,CQPb,CWWqB,CAAC2G,AnBJOlM,IID9B,EeKH,AfLuC,EeKLiM,CAAC,EAAnC,CnBJG,CmBIoC;AACrC,AlBJE,AIAA,AQfR,AFcQ,APAJ,AMLqD+B,AJElD,AEHC,AIMH,AGDOwD,AbIR3P,AcMI,EdNJA,CcHU,EAaN,CNlBiDmM,AJE5C1E,ASEDkI,EdEA,AGDFhM,CHCG,AIAAS,AMDA0J,AHNAjQ,CWWHqU,AjBFE,CAACvS,GDFKZ,CIAV,AKNM,AJEQ,AEHd,CWWQ,AJNM,CIMLiT,ARLT,CNCc,ACJG,AEHHrU,AOKE,CVEhB,AHEJ,CDFS,AUDW,ATGFc,CDFGa,AGDF,EINf,AOGO,CdIF,AGDa,CHCGL,AUDrB,CTGJ,CiBEM,CAAkBiU,AfLEpU,CHCjB,CAAL,AKJ6B,CFGX,CHCU,CkBIH,AfL7B,CeK8BsL,CAAD,CAAL,CAASqI,IAA3B,MAAqCP,MAAM,CAACR,YAAP,EAAzC,EAAgE;ADGtE,ACFQU,AhBTJlR,AFKQ,AIAJ,AQhBR,AFeQ,APAJwC,AMNgE0I,AJGhE,AEHI,AOKI7C,AbIX,AcUW,Cd1BL,CCSHrI,ACIAwC,IMNgE0I,AKKxD7C,EIMJ6I,AbRElO,CYUD8N,AbNI3N,AMDAoJ,AHNA9P,CQmBK,CbjBL,AagBL,CbhBMwD,ACIA,CAACvB,COAP,AHNA,CLEK,AEKL,CCJU,CHDC,AQIE6N,AHNA5P,CWWH,AdJI,CaMtB,ACFmBqV,AdJX,ACJa,ASEI,CGQLhQ,AdPhB,CAAmBU,AWDI,CJCnB,AIJO,CGWf,AVbQ,CWWgB,CDEC,ACFAwG,AbRE,CaQH,CAAN,CAAV,EfLwB,IAAI,kBEHI,OAAb,CAAvB;AYWF,ACFK,AhBTC,AFKC,AIAD,AQjBR,AFgBQ,APAA,AMPM,AJIVlG,AEHI,AIKJoL,AGAQxF,AfCZ,AgBaY,EVhBR5F,AMEAoL,IGAQxF,AfCNzL,EUP6E,CQc1E,AbNIiG,AMDAoJ,AHNAnP,CUaH,AdPIsF,AEHF,AEHJ,CLEOzC,AGCFgC,EIJ2Ec,AFCvEkE,CHOT,CaMOlF,CfXK,AGChB,AMEc,CTHG/B,AEKA,CaMZ,AbND,ALDU,CWAV,APAe,AEHF,AMEA,CMQD8Q,AfXA,CAAL,AOHP,AFCiB,ARMJ,CGHR5Q,AQGaqM,APAA,AINAnP,CAAlB,AQmBuB,CDdD,CTFH,CHDZ,ACIeO,AWDE,CGQvB,AfVSwC,AYFH,AfKY,CkBOC,CdPF,EAAlB,COAA,GRHkB,IAAIA,QAAQ,CAACC,CGAF2C,QAAQ,CAACwD,CHAhB,EADf,EAEFrG,IAFE,CAEGE,EGDS,CAAvB,QHCyB,IAAI,KAAKX,UeS7B,EAA2F,AfTnE,CAAkBY,GeS1C,IAAmG,GAA1G,KfT+B,CAAkCD,WAAlC,CAFlB,CAAP;AeYP,ACFI,AhBPA,AEGG,AQlBR,AFiBQ,APAAqC,AMPA,AJIJ,AEHI,AIKA,AGAI8F,ANFL,ATGHrM,AgBUI,EhBVJA,CgBHU,CZGNuG,EWDI8F,ANFCwB,ETGH,CKCG3G,AMDAnB,ALHF,AEHE5E,ARMFb,CUPGsL,AFCN,CIKO,AGAE,EXCA,AEHFzB,AEHEY,AOKE,CJCX,APAUtE,AWDE,AfChB,CeNW,CLDK,AEMAkL,CDCC5L,AXAFxF,CKCX,ACJG,AGAc,CCJF,AJIFsG,CFGb,CCCiB,ADDAtE,AMPjB,AFCiB,ACGG,CJIpB,AMDA,AHNkBpB,CAAlB,IFGG,AMEH,AHF0B,ATG9B,CIAI,AEHJ,CFG6BuF,KAAK,IAAI;AHElC1E,AIAA,AQnBR,AFkBQ,APAIwE,AMPJ,AJIP,AEHO,AIKH,AGAO+L,AEOZ,ARTItS,ATGAD,AgBnBa,CVYV,AUZP,CPgBIC,ATGAD,ECCIgC,EGDIwE,AWDA+L,EfCF,CCCG,AIAApL,AMDA8H,AHNAjE,ARMFxK,CCCG0B,ASRA8M,ADIF,CAAC9O,IEGL,APAa,AINb,ARMJ,CIAkB4B,ECCd,AMDc,ADPA,AFCA,AOKE,AfCJrB,CIAR,COAJ,APAkBiG,AWDA,CVED,AKRApG,AKME,CVEnB,AURO,CPCP,CPOA,AQJJ,CLG2B,AKHJ,CLGK+D,AMPF,GAAGuK,AVO7B,CIAQ,EAA0BlI,KAAK,CAACC,IAAhC,AKHR,CCJqB,CDIqBgH,ECJImB,ODI9C,CAAoDhB,CCJG,IAAIc,CDI3D,CAA2D,QAA3D,ICJyE,GAAG,CAArB,CAAnD;AQeRmF,ACFI2B,AhBRAtR,AFKI,AIDA,AMDA,APAC,AMPD,AFCA,AOKIoO,AbEL,AOJHvS,ATGAS,EGHA0D,AMAAnE,ATGAS,EmBKAgV,CfPI,CWCIlD,AbECxP,AFDL,CkBOD,AlBPE1C,CkBOD+T,CbNKjN,AMDA4D,AHNAC,CLGD,AFKE9I,ASTA8M,ADIF,CNAC5K,AMAAnE,CTGT,EmBKU,AJNM,CZFR,AQGJ,AXASK,CKCT,AKRY,AKME,AbEC,CiBIN,AhBRE+D,CFKG,AUFA,CNCC,AKRA,ARQG5B,CgBM1B,ARdwB1C,CSYpB,AlBHqBgC,AcVV,CVSP,CaMeoS,AfVX,AQGJ,CHNA,ACGJ,CNAuB,AMAA,ATGvB,CCE0B,CAAChS,AORA,CNOI,GDCV,CORjB,ANO+B,GQRR9B,CTSS,ISThB,CQcxB,CTVI,CCJmC0O,CDIOjB,CRKrB,GAA2B,GST7B,CTSE,CQLrB,ERKuD,ASTR,CAA3C,CAJyB,ADQ2B,CCHpD,ETQA;AiBMRgG,ACFG,AhBRK,AEIA,AQpBR,AFmBQ,APAAzN,AINA,AIfW,AGoBPmM,AbERzS,AFDAU,EAAAA,CmBJqB,CfIjB4F,CeKH,CJNOmM,AfCJ,CkBOD,ACXkB,AnBIhBjS,CkBODmU,ACXN,ChBCWlR,AEIA4D,AMDAqJ,AHNAxF,IHOL,ALDJ,EQNI,CHOY,ALDFzK,CIAG,AFCVY,CgBMX,AdPsBS,AINA,AOKE,EJChB,AHNA,AOKkB,CGQL6S,AfVb,AEIA,ADDA,CDHkB7S,ACGAyE,COAC,ERHnB,AQGA,AITO,CZMelC,CHG1B,GGHI,CeUR,AdPmC,CDHCC,ACGAD,CFChC,CAAwB,EEDpB,EDHA,ACGkCmC,OFCtC,EEDI,AFCiC,CAAC;AiBKzC,AhBRI,AFKG,AIDA,AMDA,APAH,AMNG,AFAA,AOKIkG,AbCgCzJ,AFAxC,GINA,CFMwCA,EaDhCyJ,EdGA,CIDCpF,AMDAgJ,ADNA,AFAAvJ,EOKI,AbCyB,EDEzBvF,AIDT,AKPSuL,AKKE,CLLD,AKJH,CJUP,AHNA,CHOY,CKPC,CCMCuD,ADNd,AFAc3L,EEAEoI,AVMpBhM,CKCI,AKPiB,CTQb,CAAesB,CUFnB,ADNoBuM,ETQhB,CAAmBhN,ADFpB,EQNsB,CAACV,ARMpBlB,CCEF,AORU,GAAgB,ACGJoB,ETGd,CCEqBe,ADFpB3B,CUNb,CFAmCU,CEAC6L,AFApC,ACGgC,CCHK,ADGJf,ECHjC,AVMM,ECEN,ASRyC,ADGf,CAAYC,ATGhBnL,CCEqB,IQLjB,CAAkB2L,MTGhD,YSHmE;ARM3D,AIDJ,AQtBR,AFqBQ,APAJ,AMNQb,AFAJ,AOKInE,AbAyCvE,AFCpD,CAND,GEKqDA,EQLzC0I,AKKAnE,GVECF,AMDAgJ,APAFjK,AINEU,GEAK,AKKA,CLLCiG,CKKC,CPLZ,AOLO,EVYP,AKPI,CACI,AFDMtI,EHOE,CAAhB,CDDJ,AMLgBuK,CCKZ,GAAsBqB,CDLd,CACItB,CFFa,CAAC9N,CAAZ,GEEI,AFFY,GEET,CAACb,CFFaa,ACGJC,CEG/B,AHNA,GEE2B,EDCU,CAAC4K,CCDPe,CAAC,EDCD,CAAYd,ECDN2C,GDCN,CAAkBlC,KAAM,KCDxB,GAAuB,CAAvB,GAA2BoC,SAA/B,CAAN,IAAmD/B,CADhE,EAEIhM,kBAAUP,MAFd,EAGIuO,UAHJ,EAIIhJ,KAJJ,EAKI8I,iBALJ,EAMI9B,CANJ,CADJ;ASYZ+G,AhBTIvP,AFMK,AIDD,AQvBR,AFsBK,APAJ,AMGQ,AFTD,AOKIoI,AbD8B,ECFtCpI,CDEqC,GiBOnC,AJNMoI,CIMLoH,CjBP4D,CGGtDvM,AGPAP,ELEA,CAAC5C,EgBSd,AdJQ,AGPA,ELEK,CgBSIsR,AdJI,AGPAjN,CLED,CYGK,EVEjB,AGPiB,AOKE,CPLDY,IWW1B,CXXqB,CAAW,KAAKtC,KCGC5F,CDHjB,EAAwB,GCGD,CAAC4K,CDHKjF,GCGZ,CAAYkF,EDH7B,CAAb,ECG8B,CAAkBU,aAAc;ANA9D,AEKA,AQxBR,ALiBQ,AOPO,AbWPjK,AFED,IEFCA,EFEKzB,GKCAwG,AGPA0D,CLEC3G,GDEG,CAACrB,CGGV,CFLY,EEKE,ALDG,CGJF,AEKf,CGPA,ANIA,CAAiBF,AFEG,EQND,CLECM,AKFpB,INIA,EAA0BL,MCFX,CAAkBuB,ADEjC,COD8BrD,MAAM,CAAC4K,IAAP,CAAYJ,KND3B,CMCe,CND9B,AMCiDoC,MAAnB,CAA0B,CAACC,GAAD,EAAMpC,KAAN,KAAgB;ANAxErH,AFMA,AIDA,AQzBR,AFuBImM,ADGI,AFRA,AOVU,Abcb,AODW,ATEczP,EWA1ByP,AXA0BzP,Cef1B,AbYA,AFG2B,CGHvBsD,CHGyBxE,ICGpBwB,AIDAkG,AGPAR,CLEC,CAACxC,AQGF,AFFUuJ,ATEgB,CWAzB9N,AXA0BG,ESFd,CEEb,EAAM,AFFUuL,ATEI,CGHzB,AFMA,AORA,CLEe,AFMA/J,CDHyB,CQLvB4G,ARKG,CCGpB,AIDA,AIJ0B,CRKP9G,AQLQwG,CNDPzE,CEKC,AGPA,CHOrB,AGPsByH,CPQtB,AQLqB,ERKIjJ,AORR,CAAS,ACGQ,CCKhByJ,CPNlB,EMCQ,CDHuB3E,EPQ/B,ASAA,GFRiB,IAAuB,GAAxC;ALGA,AFOA,AIFA,AQ1BR,AFwBQ,ADGA,AFRA,AOKJyL,ANFS,ATCsCvR,EeC/CuR,AfD+CvR,CSHb,ATGc,ESDrC,ATCuCnB,CSHhB,CAEpB,CEEN,CRHC2D,AFOAjC,AIFAiG,AGPAR,AOKF,CAACwL,CLGG/G,AVJ6C,CAACpL,CWC5CiQ,AIAb,CAAY,CdIR,CAAYpO,CEPZ,AOMA,AKHJ,CZHkBqC,AEKd,AGPA,ARI8C,CCK9C,CAAgB9C,CIFC,AMFjB,AHLiB8G,ARI6C,EKI1D,AMHe,CVInB,CEPA,AKFqB,CLEC,AFOAvG,AIDf,AGRekJ,GAAL,CAAS,CLEC9H,AEMfsD,GJCZ,COT+BI,IHQxB,CAAcU,AGRJ,GLEK,CAAkBhD,AKFA,GAAxC,EHOiB,MFLjB;AACAH,AFOH,AIDOoD,AQ5BZ,AFyBYzH,ADGP,AFRG,AOMJ,AbHAH,AFAwB,CAArB,GGDCwE,EEMIoD,AMHAzH,EICFyS,CJDK,AHLFhQ,CLEC,AQGEgO,CRHDtM,EYIA,GAAG,CZJV,ADCGjD,CMHH,CGKI,CRHY,AYIFoQ,CPNG,CHQG,AMJD,CAEf,CNEkB,CFNDhO,CKFCwD,GHQKJ,EGRV,ENGrB,CMHkC6B,AOMpB,AbHU,EaGxB,CZJoB,AEMM,CFNYrG,AEMEgE,AGRF,CAACkD,ELEnB,AKFc,ANGlC,CCD0ClF,CDCTjB,CMHW,ANGV,CMH9B,CLEgB,CAAhB,CEMsB,AHLY,CGKaf,GAAzB,CAA6B,SAA7B,CAFL;AFHjBmC,AEMIqD,AQ7BZ,ALqBQ,AOMJ,AbHInF,ICDA8B,ADCA9B,COTJ,CJcQmF,EUFFnF,CPNG6E,CLEC,CAAC3C,EDCE,CAACvB,ECDV,CAAa,AKFb,AOMW,CZJX,EKFgB,AOMF,CPNd,ANGA,CGKoB,EAAE,EUFF,GVEOwD,QAAL,CAAcR,UAAd,CAAyBhE,GAAzB,CAA6B,EUFvD,OVE0B;AFLzB,AFODC,AILqB,AQ1BzB,AF2BYnC,ADxBc,AFmBlB,AOMJ,AbHC,AOAJ,ATADiB,CSZO,CRkBHkB,CCRA,EGGI,CMCInC,AXFN,CAACkB,CeGGwR,CJDK,AHLFvH,CPSD,AUJIuF,CVIHzP,EcHE,EPNP,CGKI,AICM,CdGN,AUJW,CHLD,CPSD,GUJOF,AICJ,CJDD,AXFvB,CAAwB,EWEQ,KAAK+N,CXFrC,EAAkCjO,GWEtB,EAAiC,KAAKG,CAAL,CXF7C,CeGI,CJDkD,KAAKX,MAA/C,EAHe,CAIf;AVIJ,AIDA,AQ/BR,ALuBY+K,AOMR,AbHH,CAPM,KMIKA,EOMFuH,CVEGhL,EGRI,EAAE,KHQX,AGTc,EOOA,CVEG,EACb,AUHa,GVGV,GUHgB,EVGXjB,QAAL,CAAciB,SADJ,YUFrB;AZJAjD,AFOK,AICG3D,AMJA,AHLA6D,AOMR,EZLAF,GFOM,CICE3D,AGTA6D,CHSC,CUHHgO,CVGK,CMJC,CHLC,EAAErK,CPQV,AICWxH,CAAL,AMJMuM,CVGA,CEPF,AQIH,AHLO,CHSC,AGTA9E,ELCF,AEMG,AUDH,CJDK,CAAf,CVGH,AORU,AOMM,CJDK,AHLA,CPQApG,IcFC,EPNM,CPQ5B,CAA6BC,GORIlC,KAAvB,CPQ4B,AOVzB,IPU6B,ecF/C;AZJI,AFOIc,AICAD,AQjCZ,AF6BgBhB,AHLJgB,AOMR,MdEQC,AICAD,AGTAA,CHSC,AGTA,CLCD,AQIIhB,AICN6S,CZLG,AEQE,AGTA,EGKI,CVGD,AUHElC,CVGDzP,CEPDqC,AEQEvC,AGTAA,CHSL,AGZO,GHYE,AMJR,CRJR,AQImB,ERJF,AYKF,EVGMwG,CMJGzG,AICN,CJDC,GAAS,CVGxB,CAAwBsB,AcFJ,EVGR,CAAehC,AMJE6P,MVG7B,AICG,EJDgCrO,CICC,CMJhC,EAAqChC,CVGD,IAAI,UUHIQ,GICxD,GJDiD,GAAgB,EAArD;ARHJ,AFOI,AIHS,AMATL,ADAT,AFLKqL,AOMR,ANLG,KJIC,CKAK0D,AFLD1D,ACCC0C,EEIG/N,AICNgF,GZLOzB,AQIE,ADAZ,AFLU,CGKGoN,ADAD,CTGE/O,AORF,CAJG,ELKV,CMAY,CEIR,CRJS,AQIE,CFJA,GNAf,CFOI,AUHgBb,CVGCc,AUHN,CFJM,EEIG,EVGpB,GUHyBqO,AICnBrL,UJDK,GAA2B,AIC5C,EAAN,GJDuD0L,WAA3C,EAAwD1Q,eAAOQ,MAA/D;ARHJ,AFOC,AICL,AQnCR,AF+Ba,ADATe,AFLQkK,ACCR,ECIAlK,IFLQkK,ACCJrK,CRKI,AUJA,ENOCF,CAAL,CFRSyC,CMAH,CJQG,AMJE,ADAJ,ADJAqI,CJQP,AKJQmD,EFLM,CCCd,CDDgB,ACCJlD,CNAR,CAAcnH,GOIX,ADJP,CNAI,AMAcuH,CNAKtH,AOIJqK,IDJnB,CNAI,GAA2B,AMAJ,CNAvB,AOIG,ADJX,ECIkCL,ADJA,UCIvB,EAAmChJ,KAAnC,EAA0CsJ,WAA1C,EAAuD5B,EAAvD,EAA2D;APHjE,AFOA,AICD,AQpCR,AFgCgBtN,ADAR,AFXc,AOYlBgF,ANLIlF,IAAAA,CNHA,AFMC,AOVD,GGWQE,CNIHgB,AKJAsM,CLIL,CFRO,AQII,ADAX,CCAYqD,AFJJ,CJQC9Q,AIRAE,CCICuN,EAAV,ECAQ,CAAW,KAAKvM,CAAL,CFJnB,CMKQqD,ANLe,CJQP/D,AMJY,KAAK6P,CNIxB,CIRT,CMKJ,CVG6BvP,AUHP,ANLeqN,MEIzB,CICZ,CJDiDnO,CFJ7C,GAA6CoB,MAAM,CAAC4K,CJQ3C,GAA+B,AMJYxL,AFJP,CAAYyL,IJQZtE,CMJrC,AFJqC,CAAkB0E,KAAlB,EJQL,CAAe7L,AIRgB,CAAvE,KJQS,GAAuD,CAAhE;AFPI,AFOP,AICG,AQrCR,AFiCa,ADAL,AFLH,ACCGP,IAAAA,GENmB,CAWf,CNGC8H,AKJA7G,CAAL,CPJSwC,CMAD,CCICyL,ADJAjP,GNAL,GAAa,GOIjB,CLIA,CFRI,EEQkB,AIRtB,CAAuB,QAAvB,EAAiCyN,SAAjC,CAA2CG,MAA3C,CAAkD,QAAlD;ANCI,AEQA9F,AQtCZ,AHkCQ,AKCJ,ANLC,MJQOA,EUHF4D,CLDGzK,CAAL,CPJSwC,CEQC,CKJDyL,CLIG,AUHJ,GAAG0D,EZLP,AEOkB,CFPJhO,EOIA,EPJd,CAAmBC,AOIF,EAArB,EKCuB,CZLnB,AYKoB4J,GZLO,CAA3B,QYKO,CAA0BxC,MAAM,CAAC8G,QAAP,CAAgBrH,MAAhB,CAAuBsH,YAAjD,CAAf;AZJK,AFlC4B,AI0CzBjL,AQvCZ,AHmCQ,AFNJK,AOOA,ANLH,CALM,CDGHA,IHUQL,AGVJ,CAAC9H,COOCgT,CLDG/K,CFNL,EAAM,CEMN,AKCO,CVGK,EAAE,AKJF,AKCF2K,CVCY,AKFtB,WKCsB,CAAC5B,YAAb,CAA0BhF,MAAM,CAAC8G,QAAP,CAAgB3B,MAAhB,CAAuBf,cAAjD,EAAiEpE,MAAM,CAACiH,MAAP,CAAcC,WAA/E,CAAd;AZJC,AEQO3M,AQxCZ,AFmCY,ADCJ,AFNA,AOOJ,MVGQA,AUHJoG,EPPI,CEMCiC,AFNA,CGKG,CNKC,EAAE,AUHJ,CVAe,AGPZ/D,CGKGyC,CIEH,CJFF,CIEZ,CLDI,AK9BgC,CPwB5B,AOSR,CJJuB,CDCDsB,EFNE,CAAC,CGKGwB,IHLEtF,EEM1B,QCDmB,GAAsB,CAArC,CHLJ,CGK4C,CHLD;AHWvClF,AQzCZ,AFoCgB5F,ADCR,AFNI,MHUA4F,EMLI5F,CDCHmP,ELII,AMLE,AHLF/H,CGKGuJ,CNKD,GKJX,ELIgBjK,AMLR,CAAW,ADCJ,AFNX,IAAiB,CGKG3F,ADCxB,AFNI,CGKe,CNKR,CAAcgH,CMLG,CAAC,KAAK5H,KAAf,GAAuB,KAAK+P,UAA5B,GAAyC,KAAKK,WAAzD,EAAsE1Q,eAAOQ,MAA7E;ARHZ,AEI0B,AQrC9B,AFqCgBL,ADCR,AFNIA,AOSRH,KVJI,CGLIG,ELCF6E,AQIM7E,CDCHoP,AFNE,CAAC3G,CGKG,CAACkI,KDCZ,AKGGzP,CJJK,CAAW,AHLf,CEMY,AFNE,CLCtB,GAAsB,AQIMH,ADCxB,CCDmB,AHLIA,CAAL,EGKU,CHLD,IGKMZ,AIIrC,CPToCA,AOSZ,IJJD,CHLQ,EGKc,CHLD,CAApC,EAAuC,AOS/C,CJJkD+P,CIIbjN,CAAC,EPTcjC,CAAL,COSL,EPTc,EGK5C,EAAkDnB,CHLDQ,MAAL,GAAc,CAA9D,IGK6DA,MAAP,GAAgB,EAAlE;ARHR,AESA,AQ3CR,AFsCa,ADCL,AFNIL,AOSJ,ANTD,MDAKA,ACACiO,CEED,ENQCjG,AKJAkH,AFNE,CLCDpK,AKDE9B,GGKG,GHLP,CLCS,AKDE,ACAC,CNCF+B,EOKd,ADNmB,CNCb,CAAY,AKDEtC,CLEhBuC,AOIekK,GLInB,AIVyB,GJUA,EGVrB,GLEW,AOIf,CPJgBxL,AYOJT,CAAZ,EAAe,CAAC,GAAG0J,EZPf,CAAsB1H,IYOX,CAAf,EAA6BkO,MAAM,IAAI,MZPnC,CADc,EAEdnO,WAAW,CAACtB,SAAZ,CAAsBwB,eAAtB,CAFc,EAGdF,WAAW,CAACtB,SAAZ,CAAsByB,qBAAtB,CAHc,EAIdH,WAAW,CAACtB,SAAZ,CAAsB0B,eAAtB,CAJc,CAAZ,EAKHvB,IALG,CAKE,CAAC,CAACwB,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,CAAD,KAAqC;AACzCR,AEIA6C,AMLI7H,ADCR,AFNIA,AOSA,ANTRF,EAAAA,INMQkF,AEIA6C,AGVA7H,EGKIA,CDCHG,AFNE,CAACsI,AOSA0K,ANTJ,CEKO,AFLNpT,CJUK,AMLE4Q,ENKA,AKJZ,EKGI,CZHW,AOAF,CPAG1M,AQDR,AIIQkP,CVAS,AMJN,AHLf,CEMJ,AFNkB,CAAC,GGKKpS,AIIF,ANT1B,CEKuB,AIIImC,ANTJ,CNMf,AKNoBnC,CLMC,AKNP,CGKU,EHLA,EOSZ,CJJiBZ,AFLrC,EDAqCA,AOS7B,ANTyB6N,CNMzB,EAAgC3I,AQDjB,EHLS,AOUnB,CJLgC,EHLA,CAArC,ACAR,CNMQ,CQD0C6K,AHLF,CAAC,ACAJjP,KDASD,CAAN,ACAG,CAAC6K,EEKxC,AHL8C,EGKIhM,AFLjB,CAAYiM,EDAMzL,GCAlB,CAAkBkM,EDAL,GAAc,ACAxE,CDAQ,EGK6DlM,MAAzD;AREJ2E,AEIA8C,AQ5CZ,AFuCa,ADCL,AFNI,AOUI7G,ANVf,CAFM,KNQK+D,AEIA8C,CMtBe,CAkBf,AIII7G,CLJHZ,EFNIiI,GHUG,AUAE,CLJd,AKIeuD,CVAD,CFJC,AEEU,CFFT5H,AOAF,CFNV,AOUI,CPVUjE,AOUE8L,CLJpB,EFNI,EAAoB,AOUhB,CZJJ,AYIsBxE,CZJD,KYIjB,GZJJ,AKN6BiB,AOUE,CAA3B,CZJ2BjD,EKNE,CAACkD,GLMlC,EKN6B,CAAW,KAAKpB,QAAL,GAAgB,EAA3B,IAAiC,KAAKV,QAAL,CAAcL,SAAd,CAAwB4B,IAAK,EAA3F;ALOAjD,AEIAuB,AKJJ,AFNIvG,AOUC,MZJDgF,AEIAuB,AGVAvG,GEMCqP,AFNE,CAACxG,CHUC,EAAE,CAHc,GFDV,CAAC5E,AOAhB,GAAiB,CFNb,CAAiB,CAAjB,ELMA,AKNoB,CLMC,AKNrB,EAAuB,CAAvB,EAA0B,CAA1B,CLMA,CKN6B,CLMCsB,AKN9B,EAAgC,CAAhC,ELMA;AACAP,AEIAiD,AQ9CZ,AH0CYlH,AFNA,AOUA,MZJAiE,AEIAiD,AKJAlH,CAAC,EAAE,CLIC,CGVCyJ,CHUC,EKJEzJ,CAAL,EPAQ,CAACkD,AOAA,KAAK9D,EFNjB,CLMA,CAAqB,COAT,GAAa,CADZ,EPCb,EAA8BqF,KAA9B;AACH,AEDwB,AQ1CjC,AFyCYxF,ADEAgB,AFNH,AOUG,KZdE,AESN,AGbA,CLIA,AQQIhB,ADEAgB,CAAC,ECFE,ADEA,CCFC2P,CHJD,GEMK3P,CAAL,AFNI,CGIP,CAAW,CDEC,EFNA8J,EGII/J,CAAL,ADEMV,GCFG,EIMPkC,CLJD,ECFapC,CDEC,GFNvB,CGIQ,CHJkB,AOUP,CPTzB,AOS0BmH,CJNU,AHJ9B,KGImCwH,AIMtC,CPTG,KGGH,EAA8C,KAAK9N,CAAL,GAAS,KAAKX,MAA5D;ARGP,AEIG,AQhDR,AF0CYL,ADDa,AFFbA,AOSH,ANZF,KCKC,AKAA,CJCIA,AHHAA,ACHCkO,GJYAhG,AMNE,AHHA,CGGC0I,AHHAnI,IHSR,IIZiB,CEMb,AHHA,CAAc,CCHE,IDGG1H,CAAL,CCHQ,EDGC,KAAKZ,KAAL,GAAa,CAApC,EAAuC,KAAKa,CAAL,GAAS,KAAKX,MAAL,GAAc,CAA9D;AHUP,AQjDL,AF2CYL,ADEJ,AFLIA,AOSJ,ANZJ,MEMQA,AHHAA,ECHFsH,CEMK,ADEF1B,AFLE,CGGCkD,AHHA9F,IEKR,ADRQ,EDGJ,CEKS4C,AFLE,ACHJ9F,CDGK,CGGZ,GAAgB,ADEpB,CFLqBkL,ECHF,CAACjL,CEMKkQ,KAArB,EHHW,COSHhN,CAAZ,CPTmCsF,COSpB,CAAC,ANZL,CAAuB,CDGK,CAACa,AOSrB4J,EPTf,GOSW,EAAW,ANZf,CAAf,EMYiCvH,MAAd,CAAf,EAAsC0H,MAAM,IAAI;AZhD/B,AUDzB,AF4CYnT,ADEJ,AFLIA,AOSA,ANZR,MEMQA,AHHAA,ECHFmO,CEMK,ADEFmB,AFLE,CGGCuB,AHHApI,AOSA0K,IJNJ,EIMA,EAAYA,ANZJ,CDGR,CAAc,CAAC,ACHJrT,GMYO,CAACoD,CPTCnC,CAAN,EEKlB,ADRuB,CDGK,ACHJhB,ECQI,AKIZ,CLJhB,EFLiCI,KAAL,GAAa,ACH1B,CDGX,ACHkC,EDGM,CAAC,KAAKa,CAAN,GAAU,KAAKX,ECH5C,CAAnB,GDG0D,GAAc,CAAhE;AHSR8H,AQlDJ,AF6CS,ADED,AFLInI,AOSH,ANZLsH,EJWAa,AIXAb,GMUI,CVCA,AGRItH,CHQHA,CIXC,CCQGuP,AFLE,ACHJvB,CJWH,AGRQrF,EHQF,MIXV,CDGQ,CEKJ,AFJQ,CCJOJ,ECQIqG,EFJNlI,ACJM,CAAC8B,KAAL,CAAW,CCQG,AFJrB,ACJmB,CCQG,AFJR+C,GCJStK,ECQIgH,IAAN,ADRQ,CCQrC,ADRsC4D,CDGlC,EAEI,CCLuB,CAAYC,GDK9B/K,CAAL,CCLuB,CAAkBuG,CDKhC,EAFb,EAGI,CCNuB,GAA2B,CDM7CtG,CAAL,CCNkB,EDMT,ECNgD,EAAlD,CDMOX,GCNiD,EAA3E,CDGQ,EAII,KAAKF,KAAL,GAAa,EAJjB,EAKI,KAAKE,MAAL,GAAc,CALlB;AHSJ,AQnDR,AF8CK,ADEG,AFCIL,AOGP,GAZD,GPSQA,GHEC2H,AKHA6H,AFCE,CAAC3G,QHER,GAAiB,CGFb,CHGA,AGHiB,CAAjB,CEDJ,CLIO,AGHiB,CAApB,CEDoBqG,CFCG,CAAvB,CHGQvH,CGHkB,CAA1B,EAA6B,CAA7B,EAAgC,CEDD,AFC/B,CHEa,AKHmB,KAAKM,IAAN,CAAnC;APDD,AEMKG,AQrDZ,AHiDQ,ADTJ,MNOSpD,AEMDoD,AIbJnH,GCSK0K,GDTC,CAACE,INOS,AMPhB,CAAYC,CJaK,CFNE,CEMA,EIbnB,CNOuB3I,AMPLmE,ECSlB,GAAyB,CDTzB,KNOmB,AMPU,CAAjC,CNOG,CMPiC;AJcxBvG,AQtDhB,AF+CI+P,ADGQ/P,AFAA,AOIR,ANbIoN,EEMJ2C,EFNI3C,ECSIpN,CAAC,CLIGA,AUANqS,CVAO,AKJF,CCHH,AHGI,CHIG,AMPNpT,GAAD,ADGQqP,ADTF,CDSGlE,ACTFqC,CJaKzM,AMPN,CNOC,AUAA,GVAS,AUAN,CPJN,CAAYqK,CEAb,CAAerK,ADTtB,CJayByG,AKJlB,ADTcmG,CMaD,CPJhB,CEAsB,CFAC,ECT3B,CAA4B,CCSG4B,CLIX,CAAepP,KAAf,AIbpB,GJa2C,CADxB,AKHO,CAAiBA,KAAjB,GAAyB,CAD1B;APDjC6E,AEOgBhE,AMPRhB,ADGIgB,AFAI,AOIRC,ANbAqG,IEMAtH,AIOAiB,ANbAqG,ECSItG,CCHD,ADGE,CLIGA,AMPJ2H,CNOK,AKJF,CKID,ANbA,CNMH,AEOQ,AUAJkD,ANbA2B,CNMH9I,CKGS8G,CEADxK,CAAL,AKIP,CVAgBA,AUAJ8K,CVAD,AMPX,CAAc,ADGE,ELII,AIbpB,CMaA,ANbiB6B,CMaCyE,CJPCxM,ADGE2J,AFAb,CAAgBvP,GLHhC,AKGgB,ACTR,CEMA,AFNwB,EEME,IDGV,AKIhB,CJP+Be,ADGEV,CCHjC,CIOiCY,CJPC,GDCT,ECDcD,AIOA,CJPvC,AIOwC6K,EJPE,AFN1C,EMaiC,CAAYC,EJPE3L,GIOd,CAAkB+L,CJPnD,EAAsD,EIOtD,GJP2D7L,MAA3D;ANKmB,AQpD3B,AFgDK,ADGOF,AFAC,AOILc,ANbAqG,IMaArG,ANbAqG,ECSInH,CLDa,GUKX,ANbA,CCSG,AKIF0L,ANbAuC,ECSI,EKIX,CAAYtC,ELJIyD,GKIhB,CAAkB+C,ANblB,OCSW,CAAiBnS,IKI5B,CLPyB,EKOQ,KAAjC;AVCIY,AKJAV,AFAH,AOIDY,ANbAqG,IMaArG,ANbAqG,EJaIvG,AKJAV,CLIC,EAAE,CUAD,ANbA,CMaCwL,ANbA2B,CCSG,ELIEzM,AKJA,CLIL,AUAP,CAAY+K,EVAI,CKJCyD,CLFA,AIPjB,CMaA,ANbiBlB,CMaCtC,ENblB,CAAqB,KCST,CAAiB1L,IKI7B,GAAkC,CAAlC,INbA,EAJgC,CAKhC;AJaIW,AQzDZ,AFiDImH,ADD6B,AFK5B,AOIGwE,ANZH,EEIDxE,CFVA,CMkBIwE,CLTA,CLSI3L,AMRJ,CNQK,AMRJhB,ENQM,AIZJ,CEIH,CIQO,CJRD,ENQMgB,AUAF,CVAH,CUAP,EVAgB,KAAKwG,SAAL,CAAenH,MAAxB,IAAkC,KAAK6G,IAAL,GAAY,GAAZ,GAAkB,GAApD;AAPU,AQlDzB,AFkDQ,ADIA,AKIH,ANZGiH,GMOJ,CNPIA,CJIA,IMAK2C,ADIArB,KDRK,CAACjC,EEIX,CAAcxN,GAAd,GFJA,CCQA,ADRqBqO,GAArB,CAAyB,QAAzB;AJaArO,AQ3DR,AFmDQ,ADIH,AFDDwK,ACPC,EDODA,EHKIxK,GAAG,CAACqI,CMRCmI,OHGK,EGHV,CNQA,AMRe/P,AHGF,GHKK,KAAlB,CAVM,CAWN,KMTA;AEnDR,AFoDK,AHGG,AOKJgS,ANZH,CAbM,CMyBHA,KAAK,CAAChO,CPLGiC,IOKT,IPLI,CAAc+E,MAAd,CAAqBrJ,OAArB,CAA6BsJ,KAAK,IAAI;AHMtC,AQ7DR,AHwDIvD,AFAQ,AOKRoK,ELLApK,AKKAoK,ILLI,CAACvS,ELKIsI,AUAF,CLLH,AFCQoD,AOIJ8G,ELLE,CKKV,CAAY,CPJK,CAAC7G,CHId,AUAJ,CVAkB3L,CUzDkB,CA2DpC,CVFI,EAAoB,QAAOuI,EGJnB,CAAwBxH,CHID,AGJvB,CHIwByH,EGJI,GHIT,CAAW,CGJGzH,CAAL,GHIOqG,AGJE,KAAKjH,GHIZ,EGJ9B,CHI8C,EAA3B,CGHnBuL,GHGoD,EGH/C,CAACC,EHGmDnE,SAAL,CAAeC,KGHnE,CAAwB1G,CAAxB,GAA4B2K,KAAK,CHGmB,AGHlBC,CHGkD1D,IAAK,EAAjG,EAZM,CAaN,OGJoC,CAAwB9H,KAApD,GAA4D,KAAKY,CADjE,IAEA2K,KAAK,CAACC,iBAAN,CAAwB3K,CAAxB,GAA4B,KAAKA,CAAL,GAAS,KAAKX,MAF1C,IAGAqL,KAAK,CAACC,iBAAN,CAAwB3K,CAAxB,GAA4B0K,KAAK,CAACC,iBAAN,CAAwBtL,MAApD,GAA6D,KAAKW,CAJtE,EAKE;AK7Dd,AFqDIkC,ADIIlD,AFKQ0L,AOEZ,EJXAxI,EDIIlD,GAAG,CAAC2I,AFKI+C,CGTL,GAAG,CHSO,CAACE,GELd,CAAc,EFKN,GELWhG,KAAnB,EAA0B,KAAK7E,CAA/B,EAAkC,KAAKC,CAAvC,EAA0C,KAAKb,KAA/C,EAAsD,KAAKE,MAA3D;ALMAL,AQ/DR,AFsDQ,AHSQ,IHARA,GAAG,CAACyI,AMTA,CAAC,IHSQqC,CGTHD,GNSV,CAAc,EMTd,EAAkB,CNSClD,KGAX,GAAuB,CHAjB,CAAeS,EGArB,WHAM,CAA6BrH,CAA3C,EAA8C,KAAK4G,SAAL,CAAeS,aAAf,CAA6BpH,CAA3E;AACAhB,AQhER,AFuDYgF,ADGJ,AFMQ/D,AOCZ,ANfG,IJcCjB,EIdKsO,CJcF,CAACtL,AKNA,AFMI/B,KENCkO,CLMT,AGAc,CHAH,AGAItD,IAAP,CHAQ/E,AKNhB,AFMoBgF,EENF,CDRI,EJctB,AGAQ,CAAkBC,ACdD,KEKT3H,CFLe,ODcvB,CGTJ,CAAsB,EHSiB,CAAnC,IGTJ;ANUJpE,AQjER,AFwDS,ADGGA,ADRRF,EAAAA,EJcIE,EKNIA,CLMD,CAACyI,CKNG,CAACE,ADRJ,CAAC5I,MJcL,CAAc,CAAC,AKNX,CACI,ILKY4H,AIdxB,CCSiB6H,ADTM,QJcJ,CAAepH,OKN1B,ADRR,ECUY,ADV6BoF,IJctB,CAA6BzM,AKJ/B4K,CLIb,EAA+C,CAAC,AIdpD,CAAmD0C,GAAnD,CJcyD1G,AIdF,QCU3C,ADVZ,CJcoD,AKJjB5G,CLIgCqH,AKN3D,EAGI,KAAKuD,MLGmC,CAA6B3K,CAA7E,SKHQ,CAAuBA,CAH3B,EAII,KAAK2K,iBAAL,CAAuBxL,KAJ3B,EAKI,KAAKwL,iBAAL,CAAuBtL,MAL3B;ALOJL,AKAC,AFDO,AOEZ,ANfH,CAFM,GJgBCA,GAAG,CAACqI,AUCFgL,IPDUpS,IOCF,EPDQ,CHAlB,AGAmB4K,AOCN,GVDK,CGAN,CAAYC,COCL,IPDP,CAAkBC,GHA9B,UGAY,KACA9K,MAAM,CAAC4K,IAAP,CAAYG,MAAZ,CAAmBC,MAAnB,CAA0BhL,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA5C,EAAmDC,eAFvD,EAGE;AHDV,AQlER,AFwDQ,ADUH,AFEelL,AODZjB,SVDK0I,AMVAmC,CHYO5J,KGZZ,CHYkB,AODdqS,CPCezH,CGZL,GHYF,CGZZ,AHYwBC,KAAZ,CAAkBI,CHF9B,IGEY,OODZ,GAA+B,QAA/B;AVAAlM,AMVH,AHYY,AOAT0S,IVFA1S,AUEA0S,GVFG,CAAC/J,CUEC,CAACR,IAAN,CAAWnI,EVFX,CACI,KAAKkH,GUCT,CVDI,GAAY,KAAKS,SAAL,CAAeiB,YAA3B,GAA0C,KAAKjB,SAAL,CAAe/B,KAD7D,EAEI,KAAK+B,SAAL,CAAe5G,CAFnB,EAGI,KAAK4G,SAAL,CAAe3G,CAHnB,EAII,KAAK2G,SAAL,CAAexH,KAJnB,EAKI,KAAKwH,SAAL,CAAetH,MALnB,EAnBM,CA0BN;AQ1ER,AHmEIqP,AFGS,AOCLnN,ELJJmN,EKIInN,ELJA,GAAG,IKIM,CAACwG,IAAV;AVIA/I,AQ3ER,AFFmB,ADsEX,AFGC,AOED2M,IVEA3M,AUFA2M,CPnBA,EHqBG,CAAC9D,AKPA,GKKG,CAACzG,CLLC6F,IAAL,EKKJ,CVEA,AKPgB,AKKAsL,CVEC,CAAjB,EAAoB,CAApB,AKPqBrE,CKKC,CVEC,CAAvB,EAA0B,AUFA,CVE1B,EAA6B,CAA7B,EAAgC,AKPhB,CLOhB,AKPiCrC,MAAjB,GAA0B,CAAtC,IAA2C,KAAKsC,OAApD,EAA6D;ALQ7DnP,AQ5ER,AHqEY,AFGP,AOEOuT,IVEJvT,EUFIuT,CVED,CAACzK,GKPKb,CKKC,CAACE,ELLP,ELOJ,AUFI,CAAYnI,EVEA,MAAhB,CA5BM,CA6BN,CUHI;AVIP,AQ9EL,AHsEY,AKKH,KAFD,MLHSuP,WAAL,GAAmB,KAAKX,UAAL,CAAgB,KAAK3G,IAArB,CAAnB;AGtEZ,AHuEY,AFERuD,EAAAA,SEFagE,CFEH,CAACxP,GAAD,EAAM,SEFR,GAAwB,KAAKkP,WAAL,CAAiB,KAAKjH,IAAtB,CAAxB;ALQRc,AQ/EJ,AF4DO,ADYK,AFEJ,AOGA,EVEJA,IAAI,AMnBKgI,EIiBD,CVED,AGLE5F,AOGAlK,ELLI0K,IFET,AOGW,CPHC3K,AOGA6K,CPHZ,CGdD,CAAmB,CIiBb,CPHY,AOGAC,KPHKX,AOGjB,CAAkBmH,CLLnB,GAAyB,CFEZ,CAAYjH,KAA7B,COGA,EAAqC;AVGrC,AQhFR,AF6DIjK,ADYYL,AFERf,AOGIiB,EJjBRG,EHcIpB,EOGIiB,CPHD,CEFKF,AFEJb,CHKC8G,AKPI,EAAE,CFEX,AOGU,CJjBH,AIiBI6E,CJjBHnF,CHcI,CEFI2I,CKKZ,CVEJ,AGLc,AOGEvD,IVEE,AMnBX,CHcY3L,AOGf,CJjBc,AIiBImS,CLLX,CAAevR,CLOHkG,AKPZ,CFEG,EEFgB,CFEH,EAAG,CHK9B,CKPmCsI,CKK/B,GAAiC,IPHrC,AOGI,GLL0B,CAAiBpP,KAAjB,GAAyB,CAD1B;ALS7B,AQjFR,AF8DQ,ADYQa,AFERhB,AOGI,IPHJA,GAAG,CEFKgB,AFEJ8H,CHKC9H,AMnBA0F,ADYI,CLOT,CKPW,GLOD,EKPM1F,CCZhB,ADYW,AFEX,EHKegG,CMnBCN,ADYI,AFEJ,KEFS6I,EFEzB,CHKA,AMnBA,QDYoB,CAAiBlP,MAFR;AGxErC,AF+DK,ADYWF,AFERH,AOGC,IPHDA,GAAG,CEFKG,AFEJiM,KEFS,EAAE,EFEf,GEFoBmD,AFEJ,QAAhB,GEFe,CAAiBpP,KAHH;ALW7B,AKPQE,AFERL,IAAAA,GAAG,CHKC,AKPIK,AFEJgM,KHKKrL,CAAL,AKPU,EAAE,AFEhB,CHKa,AGLAuH,IEFQgH,AFEJ,CHKC/H,AGLAgB,KAAL,CAAW,GHKX,CAAenI,AKPZ,CAAiBA,AFEJ8K,KHKzB,CGLoB,CAAYvG,EHKEhE,GGLd,GAAoB,KAAKuK,IHKjD,EAA+C,AGLH,CAAYG,UAA3C,CAAb,EAAqE,KAAKvK,CAAL,GAAS,KAAKZ,KAAL,GAAa,CAA3F,EAA8F,KAAKgL,MAAL,CAAYnK,CAA1G;AHMI,AMnBRgQ,ADOiC,AKU7B,EJjBJA,KDOQ,CKUAhF,GVEKhL,CAAL,EMnBI,AIiBE,CVEGJ,AMnBJwP,AIiBE6C,MAAP,CAAcO,OJjBV,EAAiBvC,AIiBrB,EVEmB,EUFQwB,CJjBvB,ENmBoBjL,AMnBI,EIiBI,CAACsK,MVEd,CAAezR,MAAlC,CUF2B,EAA/B,EAAuD;AVGnD,AMnBJ,ADYC,AFCD,AOIIY,MAAAA,EPJA,EGbE,CNmBG0F,CUFC,CPJDwE,AOIEU,IAAP,CAAYC,CPJZ,CAAY9K,CHMZ,AGNA,EOIA,CVEkB,AGNF,AOIEkL,CPJtB,EAAuB,CHMnB,CUFA,GAA0B,CAA1B;AVGA,AMpBI/L,ADaX,AFCO,AOIA,MJlBIA,KNoBC6G,AMpBH,AHcGmE,MAAL,CAAYC,EHMZ,GAAiB,AGNjB,GHMA,AGNoB,KAApB;AHOH,AMrBc/K,AHed,AOIA,MJnBcA,MAAT;AAAiBuF,ADc3BgG,AFEC,EEFDA,ICd2BhG,EDcrB,GCdI,ADcD;ALSL,AMvB8BqK,ADe9B,AKMA,MJrB8BA,ENuB1B,AKRA,AKMAhP,GJrBE,ENuBGwB,AKRAwF,CKMC,CAAC4D,ELNP,EKMA,CLNY,AKMAC,CLNZ,CLQA,CAAenJ,EKRE,AKMjB,CAAkBuJ,CVEtB,EAAyB,CKRCiD,CKMtB,KAA4B,CLNhC,AKMI,ELN+B,EKMElO,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBsG,YAAlB,KAAmCnR,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AVG7F,AMxBiCgE,ADgBjC,AFCR5H,AOKQ,EPLRA,IGjByC4H,INwB7B,AGPJ,AOKIjP,CLNCgH,AFCJjI,GAAD,CHOSe,AKRT,CLQI,AMxBF,AHiBImD,AOKI,CAAC2H,EVEE,CAAb,AGPA,COKI,CVEY,AGPJ,AOKIC,KAAZ,CAAkB6D,YAAlB,IAAkClE,MAAM,CAACoB,MAA7C,EAAqD;AVGjD,AMzByCqE,ADiB7C,AFCJ,AOKQ,MJvByCA,IHkB3C3K,CEDGgJ,CKMG5C,CVEC5L,CAAL,CGPG,GHOO,AGPJ,COKK,CAAC8L,ELNhB,CLQmB9F,AGPJL,EEDI,CKMX,ILNgBkI,AKME,CPLhB,AOKN,CVEA,AGPoBvI,COKK,OLNV,CAAgB,AFCzB,CAAwBnE,GAAxB,CED8B+F,AFCF/D,IEDnB,AFCT,CEDV,AFCJ;AHQQ,AM1BF,ADkBF,AKMQyI,QJxBqD,EIwBrDA,CLNH6C,ELQIpI,AM1ByDV,IIwBnD,GAAGmM,CVEd,AM1BR,IN0ByB,EKRrB,GLQ0B9L,AKRF,GKMO,CAAC2F,CLNHwC,ILQzB,OKRoB,CAAiB,AKMvB,CACNjO,ILPkCgH,EKO5B,CAAC4D,CLPK,CAAxB,EKOY,CAAYG,MAAZ,CAAmBC,MAAnB,CAA0B,CAA1B,EAA6BE,eADvB,EAEN5J,SAFM,EAGNkJ,MAHM,CAAV;AVGP,AM1BL,ADkBI,AFAJ,AOUS,QPVLlF,EGlBE4K,CDkBGxF,EFAT,EAAW,CGlBC,GAAG,EAAf,ODkBI,GAAyB;ALS5B,AM1BD,ADkBQ5K,AFAJf,AOUC,KVPL,CGHIA,EEAIe,CAAC,AFAF,CGlBD8N,AHkBElG,CHQD,AKRI,ILQA,CKRK0G,EClBF,CHkBV,CHQY5M,AGPR,CGnBStC,IDkBN,AFCEuG,CGnBS,ADkBI3F,CAAf,ELQA,AM1BcqP,CN0BC1N,AKRI,GFCtB,CAAckD,CHOf,AKR4B2J,ELQF,EGR7B,EAEIhJ,EGpBS,GAAyB2K,ADkBZ,AFEjB,CEFkC/Q,AFEjCY,CAFV,EAGIwF,EEHsB,GAAyB,AFG1C,CEJgB,AFIfvF,CGrBuC,AHkBjD,EAIIuF,EGtBiD6J,GHsB5C,CAACjQ,KAJV,EAKIoG,GGvB+D,EHuB1D,CGvB6D,AHuB5DlG,CGvBuC,CAArD,IHkBI,EAMK,KAAKU,CAAL,IAAU,KAAKgG,SAAL,GAAiB,CANhC,EAOK,KAAK/F,CAAL,IAAU,KAAKgG,SAAL,GAAiB,CAPhC,EAQI,KAAK7G,KART,EASI,KAAKE,MATT;AHSA,AM1BJ,ADkBQW,AFUP,QEVOA,CAAC,CLQD,AM1BF8N,CDkBK,ILQE/N,CAAL,AM1BI,ADkBIC,CAAL,ELQMnB,AM1BF,CAACA,ADkBI,KAAK0P,SLQDpP,CM1BDA,CDkBH,CAAiBE,ELQpB,CM1BD,EN0BgB,CM1BDwO,ADgBF,ILUQlH,IM1BtB,IAA4B,CN0BX,AM1BhC,CN0B+CxH,KAA3C,EAAkD;AAC9C,AKRAA,AFUX,AODO,QLTIA,EKSA,CAACc,EVDIF,AKRA,CLQL,CKRO,EKSA,CVDG,AUCF8K,ELTI0D,EKSX,CVDcxI,AUCF+E,KAAZ,CAAkBqG,ELTZ,CLQP,AKRwBhS,KAHH,EKYzB,EAAmC;AVA/B,AM1BR,ADkBQE,AKSAY,QLTAZ,AKSAY,CJ3BH,IN0BQmG,AM1BJwF,CAAC,ADkBI,AKSA,CAACf,CLTC,CClBH,CAAb,CI2BQ,CJ3BQe,AI2BId,CVDZ,AM1BS,ADkBIyD,GClBDa,CN0BK,AUCjB,CAAkB+B,IVDIpL,EKRd,CAAiB1G,GKSzB,EJ3BR,CN0BQ,AUC+B,CJ3BHuM,CAAC,EAArC,AI2BQ,EJ3BiC;AN2BpC,AM1BD,ADayB,AFcjC1J,AOAYuI,EPAZvI,KEdQ,CKcIuI,CPAL,GG3BO0E,AH2BJ,EOAQ,CAAC/N,GJ3BC,GAAGwK,CAAC,AI2BZ,CAAelB,EJ3BAuF,GI2BK,EJ3BxB,EI2B4B;AVA/B,AM1BG,ADkBH,AFSDhQ,AOAY,IPAZA,CHNO,AKbP,KFmBM,CHDC,AKRA,AFSA4K,CG3BGuF,EI2BM1F,CPAhB,CAAYI,CG3BG,EI2BM,CJ3BH,AI2BIsD,CPAtB,CAAkB9H,EG3BI0I,IH2BtB,AOAY,CJ3BM,CACVpD,AI0BwB,CJ3Bd,CH2BU,CGzBpBkC,AHyBR,MGzBc,GAAG,CAAC3O,KAAK,IAAIyM,CAAC,KAAKwD,cAAN,GAAuB,CAAvB,GAA2Bc,WAA/B,CAAN,IAAqDtE,CAFpD,EAGV,CAHU,EAIVzM,KAJU,EAKVE,MALU,EAMVuF,KANU,EAOVqK,KAPU,EAQVC,UARU,EASVC,MATU,EAUVC,cAVU,CAAd;AN2BA,AMfAe,ADOA,AFSJlQ,AOAgByK,IPAhBzK,EGhBIkQ,INeI,AGCF,CETGlJ,AFSF4D,CGhBG,AIgBMH,CJhBLoB,ENeEzF,AKRT,AFSJ,CAAYyE,CGhBR,AIgBiB,CJhBLsF,ADOA,AKSMvB,CLTL,CLQb,AKRA,CFSJ,CHDoB,AGCFvD,CGhBd,INeqBlF,KUCT,GVDI,GAAgB,CAAhB,CGCpB,IAAwC,CAAxC;AHAC,AMfA,ADOG,AFSJnG,AOAgByK,IPAhBzK,MAAM,CETGkO,AFSFtD,COASH,GPAhB,CAAYI,COAS,CLTjB,AKSkBsD,GLTH,AFSnB,CAAkBrD,IETd,AKSY,GAAiB,KAAjB,CPAhB,IAAmC,CAAnC;AERC,AFSD,AOAa,SPARZ,MAAL,CAAYG,UAAZ,GAAyB,IAAIrK,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBxE,MAAlB,GAA2B,GAAxD;AHDA,AMdA,ADOH,AFSGrG,AOAS,IPATA,IHFI,CUHI,CPKF,CGhBCkQ,AHgBAtF,EHFEpJ,EGET,CAAYqJ,CGhBZ,IHgBA,CHFI,AGEcS,CHFC3J,IGEnB,GHFA,CGE2B2F,CHFC,GGEG,CAACC,KAAL,CAAW,KAAK2C,MAAL,CAAYvG,KAAZ,GAAoB,KAAKuG,MAAL,CAAYG,UAA3C,CAA3B;AHDI,AMdP,AIgBQ,UVFG,KAAK3E,UAAT,EAAqB;AACjB,AKRZzD,AFSI,AOCC,ELVLA,GKTI,GPkBIjC,CETD,EKUI,CLVD,CLQO+F,CGCH,CAAC6E,AOCA5K,IPDP,CAAY6K,COCC,CVFT,AUEUD,GVFO,AGCrB,CHDsB,AGCJvE,AOCX,CAAYwE,GVFf,EGCJ,AOCO,CAAkBI,EPDEjL,GOCpB,GPD0B,CAAC4K,COCC,CAA5B,EPDoB,CAAYC,COCC7K,IPDb,CAAkBuL,COCC,CAACX,IAAP,CAAYC,KAAZ,CPD5C,AOC8DsG,EPDE,UOCpB,KAAmCnR,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AVDhG,AM7CU,ADqClB,AFSIjL,AOCAmS,MPDAnS,AOCAmS,GLVC1D,GFSK,CHDG/I,AKRb,AFSWkF,EOCE,EPDT,CAAYC,KHDR,AGCJ,CAAkBU,EHDI,KAAlB,MGCJ,GAAkCvL,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBxE,MAApD;AHAC,AKRR,AFSI,AOCGmE,MAAAA,MAAM,CAACrJ,OAAP,CAAesJ,KAAK,IAAI;AVD3B,AUEOA,QAAAA,KAAK,CAACgE,IAAN;AVDX,AKTDnC,AFSIvI,AOEK,ELXTuI,KKSQ,EAFoG,CAKpG,CLZC,GAAG,eFSInJ,SAAZ,CAAsB,QAAtB;AGhBD,ADQCnD,IAAAA,ECRKoQ,IDQC,CAACxF,IAAP,CAAYC,KAAZ,CCRqB,ADQH6D,GCRM,SDQxB,GCRoC,CDQF,CAAlC;ALSJrH,AMhBA,ADQI,AFQA,AOGIrH,EVHRqH,IUGQrH,EJnBFyF,CDQGyI,AFQAtE,CHAD,CAAC7K,CUGK,CAAC6L,CVHP,CGAJ,CHAU3H,AMhBA,ADQV,CKWI,CPHU,AOGEuH,CJnBH,ADQE,CLQX,EAAY,AGAhB,CERA,CKWI,CJnBe,EImBMA,MAArB,mBJnB4B,OAAb,CAAvB;ANiBI,AMhBJ/E,ADQI5G,AFQA,AOGI6M,EJnBRjG,EDQI5G,EKWI6M,EVHA,CGACxB,CGhBD,CAACvF,CDQG,CLQCe,AKRA5G,AKWE,EPHX,CGhBJ,AHgBgBqL,AOGEyH,GJnBD,EHgBb,EHAA,CGAoB,CHAC,AMhBF,CDQnB,CAAwB,CFQxB,COG2B,CAACnG,aAAd,CAA4BzL,KJnBbyF,CImBmB,CLXD,AKWEmF,IAAP,CLXUyB,AKWEtB,CJnBjB,CAAC9B,ADQiB,IAAvD,AKW0C,CAAmB+B,CLXD2D,KKWlB,CJnBvB,AImBiD,CJnBxE,AImB8C,ELX1C,AKWuEzD,GLXC,EAAxE,UKWc,EAA0E5J,SAA1E,EAAqFkJ,MAArF,CAAV;AVFA,AMhBR,ADQC,AFQG,AOGC,KARM,IJXJ,AHgBEN,EOGE,CVHG5E,CMhBHwK,EHgBP,AOGW9P,CPHCD,CHAG,AGAf,GHAkB,AGAF,COGC,CAAC6K,GVHKrE,AMhBpB,AHgBkBxG,CGhBD0F,AHgBpB,AOGW,CAAYoF,KAAZ,CAAkBI,CVHX,AMhBf,CNgB8BzE,AMhBrC,GImBe,KAA4B,CAA5B,IAAiCxG,GVH1B,CAAgCiB,EUGA,CVHhC,AUGiC2J,CVHG3H,GUGV,CVH1B,AUGsC4H,CVHpD,IUGwC,CAAkBsG,YAAlB,KAAmCnR,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AJlB/G,AHgBO,AOGIkH,CJvBL,KIuBKA,GPHCrI,MAAL,AOGa,GPHC;AHAV,AKRR8E,AFQoB9O,AOIZ0K,ELZRoE,IFQoB9O,AOIZ0K,CPJa,EAAE,CHAXlF,EUIE,CAACnE,CPJasE,CHApB,CKRM,CLQK,EKRF,CKYT,CAAegF,CPJA,CAAcnJ,GOIT,IAAI,EPJT,CAAwBoF,SAAxB,CAAkC5G,CAAvC;AHCNf,AKRRF,AFOwDkB,AOKhD0K,ILZR5L,EFOwDkB,CAAC,CHCjDhB,AUIA0L,CPLmD,EHChD,CAAC/C,AKRJ,CAAC5I,AKYI,CPLmD2G,AOKlDgJ,IAAN,GVJA,CACI,AGF+C,CAAcnN,GEPzE,CLSiBiF,AKTO,KFOmC,CAAwBG,GHEvE,CAAeqB,KGFgC,CAAkChI,KHCrF,EAEIuF,CKVmC,ILU9B,CAACxF,AKVkCuM,CLQ5C,CKR+C,CLW3C,GKXZ,ELWiBpG,AKX2CsG,ILWhD,GAAYjH,EKXxB,CAAsE8H,ELWzC,CAACrN,AKX9B,CLWwB,AKXkD,GLWxCuF,KAAK,AKXvC,CLWwClG,MAA5B,GAAqCkG,KAAK,CAACvF,CAH/C,EAIIuF,KAAK,CAACpG,KAJV,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AKlBR,AFMiB,AOMT,KPNL,EHAI,AUIA,MVQO;AACHL,AGZR,AOMI2M,MAAAA,EVMI3M,EGZF4G,CHYK,CAAC+B,CUND,GPNC,AOMEkK,GPNC,EHYP,CACI,EGbQ9R,CAAL,EHaEyG,EGbQ,AOME,CAACkF,IPNE3B,EHalB,CAAe/B,GGbF,CAAYjI,CAAZ,COMX,CAA4BE,CPND,GHYjC,EAEIsF,AGdkCG,AOME,CAACmF,IVQhC,AURyB,CVQxB9K,AURoCiL,CVM9C,CGZiC,CHe7B,AGf2CzJ,GOMb,CAAmB0J,CVS5C/E,IAAL,AGf6B,CAAwBS,AOMvB,CAA0B,CVS5CpB,AUTkB,EAA6B4F,GVS1C,CAACnL,CAAN,AGfiB,CAAkCb,EHezCoG,GGfO,EHeF,CAAClG,AGf2C,CAApE,AOMD,CPNd,COMwFkC,GVS5E,GAAqCgE,GUTnC,EVSwC,AUT6CkF,CVS5CzK,CAH/C,EAIIuF,EUVE,CAAV,EVUa,CAACpG,KAJV,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AK7BToP,AFOI,AOMC,ELbLA,GKOW,KPAD5I,COMC,IAAI5F,CPNC,EEPA,CFOG,EEPA,AKaE,CAAC4K,EPNE7K,CAAL,COMJ,CAAY8K,EPNE,GOMd,CAAkBI,CPNCnB,IOMnB,EPNc,CAAY/J,CAAZ,COMc,CAA5B,CPN8B,GAA1B,AOM6BC,CPN5C,KOMkD,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBsG,YAAlB,KAAmCnR,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AViBvG,AK7BD4D,AFOA,AOMIsD,ILbJtD,CLEA,CUWIsD,GPNCpI,EHsBE,AK7BA,CAAC4C,GKaK,KPNb,CEPA,EFOmBrF,EEPG,EFOC,CAACY,KAAL,CAAWvC,MAAX,EAAmBC,MAAnB,CAAnB;AHuBI,AUhBA4E,MAAAA,MVgBMlF,AUhBA,CAACnE,IVgBI,GAAG,AUhBd,CAAesJ,IVgBIlE,CUhBC,IAAI,IVgBV,CAAeE,gBAAf,CAAgCxF,GAAhC,CAAoC,QAApC,CAAd;AACAlC,AGvBJ,AOOQ0L,MVgBJ1L,EGvBAiB,AOOIyK,CVgBD,CAAC/C,GUhBK,CPPH,AOOI+G,CPPH7D,GOOH,CVgBJ,AGvBA,CHwBI,AGxBQC,KHwBHtE,AGxBT,CAAkBuE,QHwBd,CAAe/C,IGxBnB,KAAoC/H,EHuBpC,EAEIsF,EGzBsC,CAACsF,EHyBlC,CAAC9K,CAFV,AGvBoC,CAAYiL,CH0B5C,KAAK9E,AG1B2B,CAAmB+E,GH0BnD,GAAY1F,AG1BoB,CAA0BtF,IH0BzC,CAACD,CAAN,AG1BoD,CAAC6K,EH0B3CtF,EG1BoC,CAAYuF,EH0B3C,CAACzL,EG1B8B,CAAkB6L,GH0B5E,EG1BgC,CH0BK3F,CG1B8C4F,IH0BzC,CAACnL,CAH/C,EAIIuF,KAAK,CAACpG,CG3Bd,EAA4G,EHuBxG,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AGjCGY,AOOC,MPPDA,COKA,KPLM,CAAC4K,IAAP,CAAYC,KEND,AFMX,CAAkBI,IENFoB,CFMhB,CENmB;ALwC1B,AGjCI,AOOGX,MAAAA,OAAO,GAAGkG,WLbK,EKaQ,CAACnG,ELbJ2C,SAAL,CAAetO,CAAf,AKaL,CAA4BE,ELbJ,EAAG,EKaO,CAAC4K,IAAP,CAAYG,ILbF,EKaV,CAAmBC,ELbJoD,IKaf,CAA0B,CAA1B,EAA6BlD,CLbnB,CAAenL,CAAf,GAAmB,GAAI,MKa7D,EAA0EuB,SAA1E,EAAqFkJ,MAArF,CAAV;APNP,AOOI,KANM,MAMA,IAAIxK,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAAlB,KAA4B,CAA5B,IAAiCjL,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBsG,YAAlB,KAAmCnR,MAAM,CAAC4K,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AV0B5GjD,AUzBQmK,EVyBRnK,IUzBQmK,KVyBC,CAAC3S,GUzBO,IVyBR,EAAU,iCKtC+B,KAAK6M,EAAG;ALuCtD,AG1JY,AOiIRrM,MAAAA,EVyBA,IUzBM,CVyBD2G,AUzBEiE,IAAP,CAAYC,KAAZ,CAAkBuG,GVyBlB,CAAoBxK,IUzBpB,EVyBA,CUzB6B,GVyBC,CUzB9B,GVyBJ,EAAwC;AACpC,AUzBA5G,MAAAA,IVyBI,EUzBE,CAAC4K,EVyBEjE,EUzBT,CAAY6D,MAAZ,GAAqBA,EVyBjB,CAAoBlF,GUzBxB,EVyBI,IAA6B,KAAKqB,cAAL,CAAoBE,QAArD,EAA+D;AAC3D,AUzBP,SLtBD,IL+CaF,cAAL,CAAoBrB,KAApB,GAA4B,CAA5B;AACA,AKtCX,aLsCgBqB,cAAL,CAAoBC,MAApB,GAA6B,KAA7B;AACH,AGnCN,AOUC4D,IAAAA,EPVKgB,CHgCD,GUtBE,CAACrK,EVyBI,KUzBX,CPVD,AOUgBsJ,CPVI,IOUC,IAAI;AV0BhB,AKnIG,AFgGftK,AOUQsK,EPVRtK,IOUQsK,KAAK,CAACvD,CVyBGP,AGnCN,CAAClB,EOUJ,CAAW1G,KPVR,EAAW,GHmCV,CAAoBuG,AUzBxB,KVyBI;AACA9F,AGnCR,AOUC,KAFD,GV2BQA,CGnCHiG,MHmCU,CAACoC,CGnChB,GAAgBpC,KHmCR,GAAoB,AGnC5B,wBHmCQ;AACAjG,AGnCX,AOWG8B,IAAAA,IVwBQ9B,KUxBC,CAAC0H,CVwBK,CAACe,EUxBhB,CAAelJ,KVwBP,CAAiB,CAAjB,EAAoB,CAApB,CUxBR,CVwB+BH,CU9FZ,CAwEnB,aVsBsCM,KAA9B,EAAqCN,eAAOQ,MAA5C;AACAI,QAAAA,OAAO,CAACgI,SAAR,CAAkB,KAAKd,SAAL,CAAeS,aAAf,CAA6BrH,CAA/C,EAAkD,KAAK4G,SAAL,CAAeS,aAAf,CAA6BpH,CAA/E;AACAP,AKzCT,AFKHiM,AOaIjM,EPbJiM,IELSqD,ELyCGtP,OAAO,AGpCN,CHoCOuC,AGpCNmJ,IOaFrD,EVuBA,AKzCa,CLyCE,EKzCC,GLyCIhC,CUvB5B,EPbS,COaW,CVuBZ,AGpCmBvE,IELS,KFK3B,EAA6BkJ,KOatC,CPbS,AO5DU,CA0EnB,CPd8C;AHqCtChL,AKzCZ,AFKI,QHoCQA,AKzCNiG,CFKGA,MHoCU,CAAC+B,AKzCN,CFKV,CAAclG,CELD,MLyCL,AKzCW,CLyCO,CAAC,AGpC3B,GAA0BA,EHoCMoF,OGpChC,EHoC2B,CAAeS,UKzCV,GLyCL,CAA6BrH,CAAhD,EAAmD,AKzCxC,CLyCyC,AKzChE,KLyCqE4G,SAAL,CAAeS,aAAf,CAA6BpH,CAAjF;AACAP,AKzCZiG,AFKI,AOaAjG,ELlBJiG,MLyCYjG,CGpCHiG,CELD,CAACd,ILyCU,CAACyC,AKzCpB,CFKI,CAAcoD,CELD,CKkBLvC,IPbR,CELmB,ELyCX,AGpCeuC,COavB,CAAiB,CVuBa,AUvB9B,EAAoB,CPbpB,AOaA,EAAuBlL,MVuBf,CAPG,CAQH,KUxBoBJ,CLlBCuG,IKkB7B,EAAmCnG,ELlBE,CAAC2J,UKkBE7J,ELlBrB,CAAvB,GKkBI;ALjBJqG,AFKI,EELJA,MFKQiG,EELA,CAAC+B,IFKM,GAAG,EAAd,QELJ,GAA6B,EAA7B;AL0CYjO,AKzCZqE,AKkBIvC,ELlBJuC,EKkBIvC,IVuBQ9B,CKzCL,CAACsE,GAAR,AKkBa,CLlBD,AKkBEkE,CVuBK,AKxCf,CLwCgBN,OUvBhB,CAAoBlI,CVuBZ,CACI,KAAKmH,QKzCPlB,AKiBV,EA7EmB,CA8EnB,GVuBY,CAAoBd,CKzCd,CAACsJ,GLwCX,EAEI,KAAKvH,CK1CP,CAAqB,CAArB,CAAV,CADQ,EAER,ELyCY,CAAe5G,CAAf,GAAmB,KAAK4G,SAAL,CAAexH,EKzCpCuG,GLuCF,EAGI,GK1CM,CAACwI,CL0CFvH,SAAL,CAAe3G,AK1CjB,CL0CE,AK1CmB,CAArB,CAAV,CAFQ,CL4CwB,CKzChC,ILyCqCkG,IAAL,GAAY,CAAZ,GAAgB,GAApC,CAHJ,EAII,GK1CFR,EL0COiB,MK1CC,CAACuH,EL0CP,CAAe/O,KAJnB,EAKI,CK3CF,CAAqB,CAArB,CAAV,CL2CiBwH,AK9CT,EAIR,OL0CY,CAAetH,MAAf,GAAwB,CAL5B,MKrCEqG,QAAQ,CAACwI,WAAT,CAAqB,CAArB,CAAV,CAJQ,CAAZ,EAKGrL,IALH,CAKQ,MAAM4H,MAAN,IAAgB;AL2CZhL,AK1CRiG,AFDA,IECAA,IL0CQjG,CG3CH,GECG,CAACiO,AFDA9B,CAAC,CH2CK,CAAC/D,CG3CH,CAAb,EAAgB+D,CAAC,GAAGT,IH2CZ,CAAqB,CAArB,AK1CR,EL0CgC,CAAxB,AK1CqB,EL0CM,CAA3B,EAA8B,CAA9B,AK1C2BV,AFDnC,EH2CyC,AG3CJmB,CH2C7B,AG3C8B,EH2CM,AG3C5C,CH2CQ,AK1CR,CFD0C;AH4CrC,AK1CR,AFDO,AOcJoG,GLpBJ,CKoBIA,KAAK,CAAC5Q,CPdGsE,MOcT,CAAc+M,CPdV,CAAc7I,EOcA,IAAI,EPdlB,GAAyB;AH4C5B,AK1CL,AFDY7J,AOcJ,QPdIA,CECL,AFDM,COcD,CPdG,AOcF0S,ELbFlF,EKaM,CAAC1D,MAAV,EAAkB,CLbnB,CAAiBnE,QAAjB,CAAP,SFDkC,CAAC,GAApB,EAAyB7G,eAAOM,KAAP,GAAe,GAAxC,CADkB;AH6ChC,AK1CJ,AFDea,AOcA,CL1BT,OFYSA,CAAC,EAAE,COcC,CAACyS,IAAI,CAACnD,QAAN,IAAkBmD,IAAI,CAACtD,MAAL,GPdA,CAAC,AOccsC,GPdlC,EAAyB,AOcc,CPdvC,AOcwCX,cAAN,EAArC,EAA6D;APhBxC,AOiBjB2B,OPjBR,GOiBQA,IAAI,CAACnD,QAAL,GAAgB,IAAhB;AV6BhB5H,AG1CQ,AOcK,EV4BbA,UG1CcT,IAAI,GAAG,GH0CD,GAAG,2BG1CiB,EAAnB,EAAuB,EAAvB,CAAb;AH2CJ,AG1CI,QH0CA,GG1CKvB,EH0CAsB,MG1CL,CAAc7H,KAAd,GAAsB8H,EH0CtB,CAAuBJ,CG1CvB,KH0CJ,EAAmC;AAC/B,AG1CA,AOaI4L,QAAAA,EV6BA,CG1CC/M,COaG,CAACoK,EV6BA9I,IG1CT,CAAc3H,COaV,CAAcL,IPblB,GAAuBiI,GH0CnB,CAAuB1B,AG1C3B,AOaI,CPpBkC,CAStC,GHwCI,IAAgC,KAAKyB,iBAAL,CAAuBF,QAA3D,EAAqE;AACjE,AU7BA2L,QAAAA,IAAI,CV6BCzL,AU7BAwI,SAAL,CAAe/P,OV6Bf,CAAuB8F,KAAvB,EU7BA,CV6B+B,CAA/B;AACA,AGzCJ,AOYC,OAND,KPNMmF,CHyCG1D,AU7BF,IPZI,GAAGyD,MAAM,CAAC,GHyCjB,CAAuB5D,MAAvB,GAAgC,KAAhC,eGzCoC,CAAnB,EAAsB4D,MAAM,CAACoB,MAAP,GAAgB,CAAtC,CAAD,CAApB;AH0CC,AGzCD,AOYI4G,OV0BJ,CU1BIA,GPZC/M,COYG,CV6BD,AU7BEoK,MPZT,CAActM,COYV,CAAcxE,SPZlB,EOYI,CPZwB;AH0CxB,AGzCAe,AOYH,QPZGA,CAAC,EAAE2K,EHyCE1D,GGzCG,CAACjH,CAAN,GAAU2K,KAAK,CAACvL,GHyCnB,CAAuBoG,CGzCV,GAAc,CHyC3B,AG1CwB;AH2CxB,AGzCAvF,AOYP,KAVD,EA/EmB,CP6EXA,AOcR,CPdS,EAAE0K,EHyCE/D,GGzCG,CAAC3G,KHyCT,CAAeD,CAAf,GAAmB,KAAK4G,SAAL,CAAe5G,CAAf,GAAmB,KAAKiH,iBAAL,CAAuBC,IAAvB,GAA8B,KAAKD,iBAAL,CAAuBzB,KAA3F;AACH,AG5C2B,OAA5B;AH6CH,AGzCGoG,AOaJ3M,MPbI2M,OAAO,CAACG,EOaRwG,EPbA,CAAa,IAAI3I,MAAJ,CAAW,KAAKjE,KOajC,GPbiB,AOac,CPb3B,SOaJ;AV6BH,AGzCI;AOaD1G,gBAAI2I,SAAJ,CAAcpI,YAAd,EAAoB,CAApB,EAAuB,CAAvB;AV6BJyC,AGzCI,EHyCJA,MAAM,CAACF,EGzCI6J,KHyCL,EAAU5J,AGzCZ,OHyCE,EAAmB;AACrB,AGzCH,AOYG0P,IAAAA,KAAK,CV6BC7L,AU7BA8K,MV6BM,GAAG,KAAK3Q,AU7BpB,CV6Be,GAAS,KAAK4G,SAAL,CAAexH,KAAf,GAAuB,CAAhC,GAAoC2C,OAAnD;AACA,UAAM+D,MAAM,GAAG,KAAK7F,CAAL,GAAS,KAAK2G,SAAL,CAAetH,MAAf,GAAwB,CAAjC,GAAqC0C,OAApD;AACA,AGrEmB,AOwCnB,QAAI,CV6BC+D,AU7BA7F,KV6BL,CU7BW,CAAC4K,CV6BCtD,GU7BR,CV6BY,AU7BAuD,CV6BC3C,IU7Bb,CV6BQ,AU7BUkJ,CV6BCxL,MAAX,CU7Bb,CV6BgCD,CU7BC,KV6BpB,IAA6B2B,IAAI,CAACa,EAA/C;AU5BInI,MAAAA,MAAM,CAACyS,qBAAP,CAA6BL,QAA7B;AV6BJ,AU5BC,KAFD,GV8BI,GU5BG,EV4BEvM,KAAL,GAAa,GAAb,IAAoB,KAAKA,KAAL,GAAa,GAArC,EAA0C;AACtC,AU5BA,WV4BKI,IAAL,GAAY,IAAZ;AACH,AG3CF,AOeE,KV0BD,CGzCK6F,KH2CE,YG3Ce,GAAG,YAAY;AH4CjC,AG3CR,AOeC,GArGD,KPsFMrG,GH2COQ,IAAL,CG3CM,EH2CM,CG3CH,IH2CT,EG3Ce,2BAAa,QAAb,CAAvB;AH4CK,AG3CLR,EAAAA,QAAQ,CAACd,KAAT,GAAiB,MAAM,wBAAUc,QAAQ,CAACwD,YAAnB,CAAvB;AH4CC,AG3CDxD,AOeA,EPfAA,OOeO,CPfC,CAAC6E,IOeI,OPfb,GAAuB,MAAM,wBAAU7E,QAAQ,CAACsG,cAAnB,CAA7B;AACA,AOeI,QPfE3G,SAAS,GAAG,IAAI/E,GAAJ,EAAlB;AH2CA4B,AG1CAwD,AOeIzF,EV2BJiC,AG1CAwD,EOeIzF,KV2BG,CG1CC,AOeE,CPfDqF,AOeEoN,CV2BD,KG1CV,CAAgBtR,OAAhB,CAAwBmE,KAAK,COezB,CAA6B8M,EPfA,MOe7B;AV4BArO,AG1CAqB,AOeH,GAHD,CPZIA,SAAS,CAAC1E,GAAV,CAAc4E,KAAK,CAACrC,IAApB,CH0CYE,CG1CcmC,KAAK,CAACC,EH0ChC,CAAsB,CG1CtB,QH0CA;AGzCH,AOeJ,CA1KM,EPyJH;AH4CI,AGzCJE,EAAAA,OHyCSkB,CGzCD,CAACvB,SAAT,GHyCI,AGzCiBA,CHyCGwB,MAApB,EGzCJ,CHyCiC,IAA7B;AACA,AGzCJ,SHyCSG,AGzCF,IAAIyE,aHyCP,AGzCG,CHyCoB5E,AGzCFnB,MHyCrB,EGzCG,CHyC6B,AGzCpC,IHyCI;AACH,AGzCJ,CAVM;;AHoDHwB,EAAAA,KAAK,GAAG;AACJ,8BAAc,IAAd;AACA,2BAAW,IAAX;AACH;;AACDmB,EAAAA,YAAY,GAAG;AACX,SAAKnB,KAAL;AACA,WAAO,IAAIpD,OAAJ,CAAY,CAACa,OAAD,EAAU2D,MAAV,KAAqB;AACpC,WAAKvI,CAAL,GAAS,CAAC,KAAK4G,SAAL,CAAexH,KAAzB;AAEA,YAAMoJ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B,YAAI,KAAKzI,CAAL,GAASlB,eAAOM,KAAP,GAAe,CAA5B,EAA+B;AAC3B,eAAKY,CAAL,IAAU,CAAV;AACA,eAAKqG,QAAL,IAAiB,CAAjB;AACH,SAHD,MAGO;AACHqC,UAAAA,aAAa,CAACF,QAAD,CAAb,CADG,CAEH;;AACA,eAAKlC,KAAL,GAAa,IAAb;AACA1B,UAAAA,OAAO;AACV;AACJ,OAV2B,EAUzB,EAVyB,CAA5B;AAWH,KAdM,CAAP;AAeH;;AA/NkB;;;;AAkOhB,MAAM+D,aAAa,GAAG,YAAY;AACrC,QAAMhD,QAAQ,GAAG,MAAM,2BAAa,WAAb,CAAvB;AACAA,EAAAA,QAAQ,CAACc,SAAT,GAAqB,EACjB,GAAGd,QAAQ,CAACc,SADK;AAEjBwB,IAAAA,WAAW,EAAE,MAAM,wBAAUtC,QAAQ,CAACc,SAAT,CAAmBmC,cAA7B;AAFF,GAArB;AAIAjD,EAAAA,QAAQ,CAACiB,SAAT,GAAqB,EACjB,GAAGjB,QAAQ,CAACiB,SADK;AAEjB/B,IAAAA,KAAK,EAAE,MAAM,wBAAUc,QAAQ,CAACiB,SAAT,CAAmBiC,QAA7B,CAFI;AAGjBhB,IAAAA,YAAY,EAAE,MAAM,wBAAUlC,QAAQ,CAACiB,SAAT,CAAmBkC,eAA7B;AAHH,GAArB;AAKAnD,EAAAA,QAAQ,CAACqB,UAAT,GAAsB,MAAM,wBAAUrB,QAAQ,CAACoD,aAAnB,CAA5B;AACApD,EAAAA,QAAQ,CAACR,UAAT,GAAsB,6BAAeQ,QAAQ,CAACqD,oBAAxB,CAAtB;AACA,SAAO,IAAItD,SAAJ,CAAcC,QAAd,CAAP;AACH,CAdM","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const canvas = document.querySelector('canvas')\nexport const ctx = canvas.getContext('2d')\nctx.font = '30px Anton'\ncanvas.width = innerWidth\ncanvas.height = innerHeight\n\nexport const mask = document.createElement('canvas')\nexport const maskCtx = mask.getContext('2d')\nmask.width = innerWidth\nmask.height = innerHeight\n\nexport const groundPositionX = 0\n\nexport const groundHeight = 15\n\nexport let groundY = canvas.height - groundHeight\n\nconst resizeCanvas = () => {\n    canvas.width = innerWidth\n    canvas.height = innerHeight\n    mask.width = innerWidth\n    mask.height = innerHeight\n    groundY = canvas.height - groundHeight\n}\n\nexport const canvasCenter = { x: canvas.width / 2, y: canvas.height / 2 }\n\nwindow.addEventListener('resize', resizeCanvas)\n","export default class KeyboardHandler {\n    constructor() {\n        // Holds the current state of a given key\n        this.keyStates = new Map()\n\n        // Holds the callback functions for a key code\n        this.keyMap = new Map()\n    }\n\n    addMapping(code, callback) {\n        this.keyMap.set(code, callback)\n    }\n\n    handleEvent(event) {\n        const { code } = event\n\n        if (!this.keyMap.has(code)) {\n            return\n        }\n\n        event.preventDefault()\n\n        const keyState = event.type === 'keydown' ? true : false\n\n        if (this.keyStates.get(code) === keyState) {\n            return\n        }\n\n        this.keyStates.set(code, keyState)\n\n        this.keyMap.get(code)(keyState)\n    }\n\n    listenTo(window) {\n        ;['keydown', 'keyup'].forEach(eventName => {\n            window.addEventListener(eventName, event => {\n                this.handleEvent(event)\n            })\n        })\n    }\n}\n","import KeyboardHandler from './KeyboardHandler'\nimport { canvas } from '/src/shared/canvas'\n\nexport const setUpKeyboard = character => {\n    const keyboard = new KeyboardHandler()\n\n    keyboard.addMapping('KeyD', keyState => {\n        character.direction.right = keyState\n    })\n\n    keyboard.addMapping('KeyA', keyState => {\n        character.direction.left = keyState\n    })\n\n    keyboard.addMapping('Space', keyState => {\n        character.direction.jumping = keyState\n    })\n\n    keyboard.listenTo(window)\n}\n\nexport const setUpMouse = character => {\n    canvas.addEventListener('mousemove', ({ clientX, clientY }) => {\n        character.rotate(clientX, clientY)\n    })\n    canvas.addEventListener('click', e => {\n        character.onClick()\n    })\n}\n","import gunshotSrc from '/static/sounds/ShotgunQuieter.mp3'\nimport splashSrc from '/static/sounds/Splash.mp3'\nimport glassShatterSrc from '/static/sounds/GlassShatter.mp3'\nimport musicSrc from '/static/sounds/reggae.mp3'\n\nexport class AudioPlayer {\n    constructor() {\n        this.audioContext = new AudioContext()\n        this.audioBuffers = new Map()\n        this.muted = false\n        this.gainNode = this.audioContext.createGain()\n    }\n    loadAudio(src) {\n        return fetch(src)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\n    }\n    addAudio(name, buffer) {\n        this.audioBuffers.set(name, buffer)\n    }\n    playAudio(name) {\n        const source = this.audioContext.createBufferSource()\n        source.connect(this.gainNode)\n        this.gainNode.connect(this.audioContext.destination)\n        source.buffer = this.audioBuffers.get(name)\n        source.start(0)\n    }\n    toggleMuteAudio() {\n        if (!this.muted) {\n            this.muted = true\n            this.gainNode.gain.value = 0\n        } else {\n            this.muted = false\n            this.gainNode.gain.value = 1\n        }\n    }\n    async loadAllSounds() {\n        await Promise.all([\n            audioPlayer.loadAudio(gunshotSrc),\n            audioPlayer.loadAudio(splashSrc),\n            audioPlayer.loadAudio(glassShatterSrc),\n            audioPlayer.loadAudio(musicSrc)\n        ]).then(([gunshot, splash, glass, music]) => {\n            audioPlayer.addAudio('gunshot', gunshot)\n            audioPlayer.addAudio('splash', splash)\n            audioPlayer.addAudio('glass', glass)\n            audioPlayer.addAudio('music', music)\n        })\n    }\n}\n\nexport const audioPlayer = new AudioPlayer()\naudioPlayer.toggleMuteAudio()\n","export function loadImage(url) {\n    return new Promise(resolve => {\n        const image = new Image()\n        image.addEventListener('load', () => {\n            resolve(image)\n        })\n        image.src = url\n    })\n}\n\nexport function loadManifest(name) {\n    return fetch(`/manifests/${name}.json`).then(res => res.json())\n}\n\nexport function loadAnimations(animations) {\n    const animationsMap = new Map()\n    animations.forEach(animation => {\n        const spriteMap = new Map()\n        animation.frames.forEach(frame => {\n            spriteMap.set(frame.name, frame.rect)\n        })\n        animationsMap.set(animation.name, spriteMap)\n    })\n    return animationsMap\n}\n","import { canvas } from '/src/shared/canvas'\nimport { groundHeight } from '/src/shared/canvas'\nimport { setUpKeyboard, setUpMouse } from '../input'\nimport { audioPlayer } from '../AudioPlayer'\nimport { loadImage, loadManifest, loadAnimations } from './loaders'\nimport { groundY } from '/src/shared/canvas'\n\nexport class Character {\n    constructor(manifest) {\n        this.manifest = manifest\n        this.direction = {\n            left: false,\n            right: false,\n            jumping: false\n        }\n        this.isOnGround = true\n        this.deltaX = 0\n        this.deltaY = 0\n        this.angle = 0\n        this.velocityX = 6\n        this.velocityY = 0\n        this.gravity = 0.6\n        this.flip = false\n        this.shot = false\n        this.distance = 0\n        this.ready = true\n        this.streak = 0\n        this.highestStreak = 0\n        this.lowerBody = {\n            ...this.manifest.lowerBody,\n            runningAnimation: this.manifest.animations.get('running'),\n            jumpingAnimation: this.manifest.animations.get('jumping')\n        }\n        this.upperBody = {\n            ...this.manifest.upperBody,\n            x: this.x - 30,\n            y: this.y - this.lowerBody.height + 70\n        }\n        this.x = 0\n        this.y = canvas.height - groundHeight - this.lowerBody.height + 5\n        this.flashAnimation = {\n            active: false,\n            duration: 3,\n            frame: 0,\n            image: this.manifest.flashImage\n        }\n        this.shootingAnimation = {\n            active: false,\n            duration: 4,\n            frame: 0,\n            size: 5\n        }\n        this.setUp()\n    }\n    draw(ctx) {\n        this.upperBody = {\n            ...this.upperBody,\n            rotationPoint: {\n                x: this.x + this.lowerBody.width / 2,\n                y: this.y + 25\n            },\n            x: this.x - 25,\n            y: this.y - this.lowerBody.height + (this.flip ? 160 : 100)\n        }\n        ctx.strokeStyle = 'red'\n        //ctx.strokeRect(this.x, this.y, this.lowerBody.width, this.lowerBody.height)\n        this.getFrame(ctx, `walk-${Math.floor(this.distance / 20) % this.lowerBody.runningAnimation.size}`)\n        //this.getFrame(ctx, 'walk-1')\n        ctx.translate(this.upperBody.rotationPoint.x, this.upperBody.rotationPoint.y)\n        ctx.rotate(this.angle)\n        ctx.translate(-this.upperBody.rotationPoint.x, -this.upperBody.rotationPoint.y)\n        ctx.strokeStyle = 'limegreen'\n        this.runShootingAnimation()\n        ctx.drawImage(\n            this.flip ? this.upperBody.imageFlipped : this.upperBody.image,\n            this.upperBody.x,\n            this.upperBody.y,\n            this.upperBody.width,\n            this.upperBody.height\n        )\n        //ctx.strokeRect(this.upperBody.x, this.upperBody.y, this.upperBody.width, this.upperBody.height)\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n        ctx.fillStyle = 'blue'\n        //d ctx.fillRect(this.upperBody.rotationPoint.x - 5, this.upperBody.rotationPoint.y - 5, 10, 10)\n    }\n    move() {\n        this.velocityY += this.gravity\n        this.y += this.velocityY\n\n        if (this.y + this.lowerBody.height >= groundY) {\n            this.y = groundY - this.lowerBody.height\n            this.isOnGround = true\n            this.velocityY = 0.0\n        }\n\n        if (this.direction.left) {\n            if (this.x > 0) {\n                this.x -= this.velocityX\n                this.distance += this.velocityX\n            }\n        } else if (this.direction.right) {\n            if (this.x < canvas.width - this.upperBody.width) {\n                this.x += this.velocityX\n                this.distance += this.velocityX\n            }\n        } else {\n            if (this.ready) this.distance = 0\n        }\n        if (this.direction.jumping) {\n            if (this.isOnGround) {\n                this.velocityY = -12.0\n                this.isOnGround = false\n            }\n        }\n    }\n    getFrame(ctx, name) {\n        if (this.isOnGround) {\n            const frame = this.lowerBody.runningAnimation.get(name)\n            if (frame) {\n                ctx.drawImage(\n                    this.lowerBody.spriteSheet,\n                    frame.x,\n                    this.flip ? frame.y + frame.height : frame.y,\n                    frame.width,\n                    frame.height,\n                    this.x,\n                    this.y,\n                    this.lowerBody.width,\n                    this.lowerBody.height\n                )\n            } else {\n                ctx.drawImage(\n                    this.lowerBody.spriteSheet,\n                    frame.x,\n                    this.flip ? frame.y + frame.height : frame.y,\n                    frame.width,\n                    frame.height,\n                    this.x,\n                    this.y,\n                    this.lowerBody.width,\n                    this.lowerBody.height\n                )\n            }\n        } else {\n            const frame = this.lowerBody.jumpingAnimation.get('jump-0')\n            ctx.drawImage(\n                this.lowerBody.spriteSheet,\n                frame.x,\n                this.flip ? frame.y + frame.height : frame.y,\n                frame.width,\n                frame.height,\n                this.x,\n                this.y,\n                this.lowerBody.width,\n                this.lowerBody.height\n            )\n        }\n    }\n    drawFlash(maskCtx) {\n        if (this.flashAnimation.active == true) {\n            if (this.flashAnimation.frame >= this.flashAnimation.duration) {\n                this.flashAnimation.frame = 0\n                this.flashAnimation.active = false\n            } else {\n                this.flashAnimation.frame++\n                maskCtx.fillStyle = 'rgba(249, 191, 0, 0.1)'\n                maskCtx.fillRect(0, 0, canvas.width, canvas.height)\n                maskCtx.translate(this.upperBody.rotationPoint.x, this.upperBody.rotationPoint.y)\n                maskCtx.rotate(this.angle)\n                maskCtx.translate(-this.upperBody.rotationPoint.x, -this.upperBody.rotationPoint.y)\n                maskCtx.strokeStyle = 'limegreen'\n                //ctx.strokeRect(this.upperBody.x, this.upperBody.y, this.upperBody.width, this.upperBody.height)\n                maskCtx.drawImage(\n                    this.flashAnimation.image,\n                    this.upperBody.x + this.upperBody.width,\n                    this.upperBody.y + (this.flip ? 0 : 100),\n                    this.upperBody.width,\n                    this.upperBody.height / 2\n                )\n                maskCtx.setTransform(1, 0, 0, 1, 0, 0)\n            }\n        }\n    }\n    runShootingAnimation() {\n        if (this.shootingAnimation.active) {\n            if (this.shootingAnimation.frame >= this.shootingAnimation.duration) {\n                this.shootingAnimation.frame = 0\n                this.shootingAnimation.active = false\n            } else {\n                this.shootingAnimation.frame++\n                this.upperBody.x = this.upperBody.x - this.shootingAnimation.size * this.shootingAnimation.frame\n            }\n        }\n    }\n    rotate(clientX, clientY) {\n        const deltaX = this.x + this.upperBody.width / 2 - clientX\n        const deltaY = this.y + this.upperBody.height / 2 - clientY\n        this.angle = Math.atan2(deltaY, deltaX) + Math.PI\n        if (this.angle > 1.5 && this.angle < 4.7) {\n            this.flip = true\n        } else {\n            this.flip = false\n        }\n    }\n    onClick() {\n        audioPlayer.playAudio('gunshot')\n        this.flashAnimation.active = true\n        this.shootingAnimation.active = true\n    }\n    setUp() {\n        setUpKeyboard(this)\n        setUpMouse(this)\n    }\n    epicEntrance() {\n        this.setUp()\n        return new Promise((resolve, reject) => {\n            this.x = -this.upperBody.width\n\n            const entering = setInterval(() => {\n                if (this.x < canvas.width / 7) {\n                    this.x += 1\n                    this.distance += 2\n                } else {\n                    clearInterval(entering)\n                    //this.setUp()\n                    this.ready = true\n                    resolve()\n                }\n            }, 10)\n        })\n    }\n}\n\nexport const loadCharacter = async () => {\n    const manifest = await loadManifest('character')\n    manifest.lowerBody = {\n        ...manifest.lowerBody,\n        spriteSheet: await loadImage(manifest.lowerBody.spriteSheetURL)\n    }\n    manifest.upperBody = {\n        ...manifest.upperBody,\n        image: await loadImage(manifest.upperBody.imageURL),\n        imageFlipped: await loadImage(manifest.upperBody.flippedImageURL)\n    }\n    manifest.flashImage = await loadImage(manifest.flashImageURL)\n    manifest.animations = loadAnimations(manifest.animationsToBeLoaded)\n    return new Character(manifest)\n}\n","import { canvas } from '/src/shared/canvas'\nimport { loadImage, loadManifest } from '/src/classes/loaders'\n\nexport class Scene {\n    constructor(manifest) {\n        this.manifest = manifest\n    }\n    draw(ctx) {\n        ctx.drawImage(this.manifest.image, 0, 0, canvas.width, canvas.height)\n    }\n}\n\nexport const loadScene = async () => {\n    const manifest = await loadManifest('scene')\n    manifest.image = await loadImage(manifest.mainImageURL)\n    return new Scene(manifest)\n}\n","export function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max))\n}\n\nexport function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport function checkCollision(obj1, obj2) {\n    if (\n        obj1.x < obj2.x + obj2.width &&\n        obj1.x + obj1.width > obj2.x &&\n        obj1.y < obj2.y + obj2.height &&\n        obj1.y + obj1.height > obj2.y\n    ) {\n        return true\n    } else {\n        return false\n    }\n}\n","import { canvas, canvasCenter } from '/src/shared/canvas'\nimport { randomIntFromRange } from '/src/shared/helpers'\nimport { audioPlayer } from '../AudioPlayer'\nimport { loadImage, loadManifest } from './loaders'\n\nexport class Spider {\n    constructor(manifest) {\n        const { destination, position, width, height } = manifest\n        this.manifest = manifest\n        this.height = width\n        this.width = height\n        this.x = position.x\n        this.y = position.y\n        this.isShot = false\n        this.hasKilledAPlant = false\n        this.killer = {}\n        this.deltaX = destination.x - this.x\n        this.deltaY = destination.y - this.y\n        this.angle = Math.atan2(this.deltaY, this.deltaX)\n        this.splashAngle = 0\n        this.velocityX = Math.cos(this.angle) * 1.0\n        this.velocityY = Math.sin(this.angle) * 1.0\n        this.direction = this.angle - Math.PI / 2\n        this.distance = 0\n        this.points = {\n            shown: false,\n            value: Math.floor(1000 / this.width),\n            y: this.y,\n            speed: 2,\n            multiplier: 1\n        }\n    }\n    draw(ctx) {\n        if (!this.isShot && !this.hasKilledAPlant) {\n            this.distance += 2\n            ctx.translate(this.x + this.width / 2, this.y + this.height / 2)\n            ctx.rotate(this.direction)\n            ctx.translate(-this.x - this.width / 2, -this.y - this.height / 2)\n            this.getFrame(ctx, `spider-${Math.floor(this.distance / 20) % this.manifest.spriteMap.size}`)\n            ctx.setTransform(1, 0, 0, 1, 0, 0)\n            this.checkCollision()\n        } else if (this.hasKilledAPlant) {\n        } else {\n            ctx.translate(this.x + this.width / 2, this.y + this.height / 2)\n            ctx.rotate(-this.splashAngle + Math.PI)\n            ctx.translate(-this.x - this.width / 2, -this.y - this.height / 2)\n            ctx.drawImage(\n                this.manifest.splashImage,\n                this.x - 10,\n                this.y - this.height,\n                this.width + 20,\n                this.height * 2\n            )\n            ctx.setTransform(1, 0, 0, 1, 0, 0)\n            if (this.points.shown) {\n                this.drawPoints(ctx)\n            }\n        }\n    }\n    checkCollision() {\n        this.manifest.plants.forEach(plant => {\n            if (\n                plant.plantBoundingRect.x < this.x + this.width &&\n                plant.plantBoundingRect.x + plant.plantBoundingRect.width > this.x &&\n                plant.plantBoundingRect.y < this.y + this.height &&\n                plant.plantBoundingRect.y + plant.plantBoundingRect.height > this.y\n            ) {\n                plant.shrink()\n                this.hasKilledAPlant = true\n                window.game.state.spidersKilled += 1\n                if (\n                    window.game.state.spidersKilled ===\n                    window.game.config.levels[window.game.state.level].numberOfSpiders\n                ) {\n                    window.game.state.level++\n                }\n            }\n        })\n    }\n    drawPoints(ctx) {\n        this.points.y -= this.points.speed\n        ctx.font = `${this.width - 10}px Anton`\n        ctx.fillStyle = 'white'\n        ctx.textAlign = 'center'\n        ctx.fillText(Math.floor(this.points.value * this.points.multiplier), this.x + this.width / 2, this.points.y)\n        if (this.points.y < 0) {\n            this.points.shown = false\n        }\n    }\n    getFrame(ctx, name) {\n        const frame = this.manifest.spriteMap.get(name)\n        if (frame) {\n            ctx.drawImage(\n                this.manifest.image,\n                frame.x,\n                frame.y,\n                frame.width,\n                frame.height,\n                (this.x += this.velocityX * 1),\n                (this.y += this.velocityY * 1),\n                this.width,\n                this.height\n            )\n        }\n    }\n    onClick() {\n        window.game.state.streak += 1\n        window.game.state.spidersKilledTotal += 1\n        window.game.state.spidersKilled += 1\n        this.points.multiplier = 1 + window.game.state.streak * 0.1\n        window.game.state.score += Math.floor(this.points.value * this.points.multiplier)\n        if (window.game.state.streak > window.game.state.biggestStreak) {\n            window.game.state.biggestStreak = window.game.state.streak\n        }\n        audioPlayer.playAudio('splash')\n        this.isShot = true\n        this.points.shown = true\n        this.points.y = this.y\n        this.killer = { x: this.manifest.character.upperBody.x, y: this.manifest.character.upperBody.y }\n        const deltaX = this.x - (this.killer.x + this.manifest.character.upperBody.width / 2)\n        const deltaY = this.y - (this.killer.y + 100)\n        this.splashAngle = Math.atan2(deltaX, deltaY)\n        if (window.game.state.spidersKilled === window.game.config.levels[window.game.state.level].numberOfSpiders) {\n            window.game.state.level++\n        }\n    }\n}\n\nexport class SpiderFactory {\n    constructor(manifest) {\n        this.manifest = manifest\n    }\n    createSpiders(numberOfSpiders, character, plants) {\n        this.manifest.character = character\n        this.manifest.plants = plants\n        let spiders = []\n        for (let i = 0; i < numberOfSpiders; i++) {\n            this.manifest.position = {\n                x: randomIntFromRange(-200, canvas.width + 200),\n                y: randomIntFromRange(-200, 0)\n            }\n            const size = randomIntFromRange(25, 80)\n            this.manifest.width = size\n            this.manifest.height = size\n\n            //spider will pick a random plant and attack it\n            const plant = plants[randomIntFromRange(0, plants.length - 1)]\n            this.manifest.destination = {\n                x: plant.x + plant.width / 2,\n                y: plant.y\n            }\n            spiders.push(new Spider(this.manifest))\n        }\n        return spiders\n    }\n}\n\nexport const loadSpiderFactory = async () => {\n    const manifest = await loadManifest('spider')\n    manifest.image = await loadImage(manifest.mainImageURL)\n    manifest.splashImage = await loadImage(manifest.splashImageURL)\n    const spriteMap = new Map()\n    manifest.frames.forEach(frame => {\n        spriteMap.set(frame.name, frame.rect)\n    })\n    manifest.spriteMap = spriteMap\n    return new SpiderFactory(manifest)\n}\n","import { audioPlayer } from '../AudioPlayer'\n\n// file for interaction between html elements and canvas\nexport const addEventListeners = plants => {\n    document.querySelectorAll('.seedButton').forEach(el => {\n        el.addEventListener('click', ({ target }) => {\n            plants[target.dataset.id].plantSeed()\n        })\n    })\n    document.querySelector('#mute-button').addEventListener('click', function () {\n        this.classList.toggle('mute')\n        audioPlayer.toggleMuteAudio()\n    })\n}\n\nexport const showGameOver = () => {\n    document.querySelector('#gameOverScreen').classList.remove('hidden')\n    document.querySelector('#gameOverScreen').innerHTML += `\n        <div>\n            <h2>Spiders killed: ${window.game.state.spidersKilledTotal}</h2>\n            <h2>Points from spiders: ${window.game.state.score}</h2>\n            <h2>Highest killstreak: ${window.game.state.biggestStreak}</h2>\n            <h2>Points from plants: ${window.game.plants.reduce((acc, plant) => {\n                return acc + plant.size * 1000\n            }, 0)}</h2>\n        </div>\n    `\n}\n\nexport const updateLevel = () => {\n    if (window.game.state.level >= 0) {\n        document.querySelector('#level').innerText = window.game.state.level + 1\n        document.querySelector('#level').classList.remove('hidden')\n    }\n}\n\nexport const updateScore = () => {\n    document.querySelector('#score').innerText = window.game.state.score\n}\n\nexport const updateStreak = () => {\n    const streak = document.querySelector('#streak')\n    const streakCont = document.querySelector('#streak-container')\n    streak.innerText = Math.floor((1 + window.game.state.streak * 0.1) * 10) / 10\n    if (window.game.state.streak !== 0) {\n        streakCont.classList.remove('hidden')\n        streak.classList.remove('streak-animation')\n        streak.offsetWidth\n        streak.classList.add('streak-animation')\n        //streak.style.color = '#' + (((1 << 24) * Math.random()) | 0).toString(16)\n    } else {\n        streakCont.classList.add('hidden')\n    }\n}\n\nexport const hideLoadingScreen = () => {\n    document.querySelector('#loadingScreen').classList.add('hidden')\n}\n","import { groundY } from '/src/shared/canvas'\nimport { canvas } from '/src/shared/canvas'\nimport { addEventListeners } from '/src/shared/UI'\nimport { loadImage, loadManifest } from '/src/classes/loaders'\n\nexport class PlantFactory {\n    constructor(manifest) {\n        this.manifest = manifest\n    }\n    createPlants(numberOfPlants) {\n        const { width, height, image, loadedPlantImages, potMargin, plantSizes } = this.manifest\n        const plants = []\n        const widthSum = width * numberOfPlants + potMargin * (numberOfPlants - 1)\n        const offset = (canvas.width - widthSum) / 2\n        //plantSizes.reduce((acc, b) => acc + b.width, 0)\n\n        for (let i = 0; i < numberOfPlants; i++) {\n            plants.push(\n                new Plant(\n                    offset + (width + (i === numberOfPlants ? 0 : potMargin)) * i,\n                    groundY - height,\n                    plantSizes,\n                    image,\n                    loadedPlantImages,\n                    i\n                )\n            )\n        }\n        addEventListeners(plants)\n        return plants\n    }\n}\n\nexport class Plant {\n    constructor(positionX, positionY, plantSizes, image, plantImages, id) {\n        this.id = id\n        this.x = positionX\n        this.y = positionY - 15\n        this.size = 0\n        this.plantSizes = plantSizes\n        this.planted = false\n        this.showSeed = true\n        this.plantImages = plantImages\n        this.width = 170\n        this.height = 120\n        this.potCenter = {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2\n        }\n        this.image = image\n        this.timeToShowSeedButton = 1\n        this.activePlant = plantSizes[this.size]\n        this.activePlantImage = plantImages[this.size]\n        this.plantBoundingRect = {\n            x: this.potCenter.x - this.activePlant.width / 2,\n            y: this.y - this.activePlant.height,\n            width: this.activePlant.width,\n            height: this.activePlant.height\n        }\n        this.createSeedButton()\n    }\n    draw(ctx) {\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\n        if (this.planted) {\n            ctx.drawImage(\n                this.activePlantImage,\n                this.plantBoundingRect.x,\n                this.plantBoundingRect.y,\n                this.plantBoundingRect.width,\n                this.plantBoundingRect.height\n            )\n        }\n    }\n    grow() {\n        if (this.size < this.plantImages.length - 1 && this.planted) {\n            this.size++\n            this.activePlant = this.plantSizes[this.size]\n            this.activePlantImage = this.plantImages[this.size]\n            this.plantBoundingRect = {\n                x: this.potCenter.x - this.activePlant.width / 2,\n                y: this.y - this.activePlant.height,\n                width: this.activePlant.width,\n                height: this.activePlant.height\n            }\n        }\n    }\n    shrink() {\n        if (this.size > 0 && this.planted) {\n            this.size--\n            this.activePlant = this.plantSizes[this.size]\n            this.activePlantImage = this.plantImages[this.size]\n            this.plantBoundingRect = {\n                x: this.potCenter.x - this.activePlant.width / 2,\n                y: this.y - this.activePlant.height,\n                width: this.activePlant.width,\n                height: this.activePlant.height\n            }\n        } else {\n            this.size = -1\n            this.planted = false\n        }\n    }\n    onClick() {\n        this.grow()\n    }\n    plantSeed() {\n        window.game.state.seedsPlanted += 1\n        this.planted = true\n        document.querySelector(`.seedButton[data-id=\"${this.id}\"]`).outerHTML = ''\n    }\n    showSeedButton() {\n        document.querySelector(`.seedButton[data-id=\"${this.id}\"]`).classList.add('active')\n    }\n    createSeedButton() {\n        overlay.innerHTML += `\n        <div \n            class=\"seedButton\"\n            data-id=\"${this.id}\"\n            style=\"left: ${this.potCenter.x - 40}px; top: ${this.potCenter.y - 160}px;\" \n        >\n            <div class=\"seedButton__image\" data-id=\"${this.id}\">\n            </div>\n        </div>\n        `\n    }\n}\n\nexport const loadPlantFactory = async () => {\n    const manifest = await loadManifest('plant')\n    manifest.image = await loadImage(manifest.mainImageURL)\n    manifest.loadedPlantImages = []\n    Promise.all([\n        loadImage(manifest.plantImages[0]),\n        loadImage(manifest.plantImages[1]),\n        loadImage(manifest.plantImages[2]),\n        loadImage(manifest.plantImages[3])\n    ]).then(async plants => {\n        manifest.loadedPlantImages = await plants\n    })\n    return new PlantFactory(manifest)\n}\n","import { canvas, maskCtx } from '/src/shared/canvas'\nimport { audioPlayer } from '../AudioPlayer'\nimport { loadImage, loadManifest } from './loaders'\n\nexport class Light {\n    constructor(id, positionX, positionY, width, height, image, color, lightWidth, turnOn, numberOfLights) {\n        this.id = id\n        this.width = width\n        this.height = height\n        this.x = positionX\n        this.y = positionY\n        this.lampCenter = {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2\n        }\n        this.turnedOn = false\n        this.color = color\n        this.lightWidth = lightWidth\n        this.image = image\n        this.offset = 10\n        this.isShot = false\n        this.perspective = 40\n        this.turnOn = turnOn\n        this.numberOfLights = numberOfLights\n    }\n    drawLight(ctx) {\n        if (this.turnedOn) {\n            ctx.beginPath()\n            //top left\n            ctx.moveTo(this.x + this.offset, this.y + this.height)\n            //bottom left\n            if (this.id == 0) {\n                ctx.lineTo(this.x - this.lightWidth, canvas.height - 65)\n                ctx.lineTo(this.x - this.lightWidth - this.perspective, canvas.height)\n            } else {\n                ctx.lineTo(this.x - this.lightWidth, canvas.height)\n            }\n            //bottom right\n            if (this.id == this.numberOfLights - 1) {\n                ctx.lineTo(this.x + +this.width + this.lightWidth + this.perspective, canvas.height)\n                ctx.lineTo(this.x + this.width + this.lightWidth, canvas.height - 65)\n            } else {\n                ctx.lineTo(this.x + this.width + this.lightWidth, canvas.height)\n            }\n            //top right\n            ctx.lineTo(this.x + this.width - this.offset, this.y + this.height)\n            ctx.closePath()\n            ctx.fillStyle = this.color\n            ctx.fill()\n        }\n    }\n    drawBody(ctx) {\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\n    }\n    draw(ctx) {\n        this.drawBody(ctx)\n        this.drawLight(maskCtx)\n    }\n    onClick() {\n        if (!this.isShot) {\n            audioPlayer.playAudio('glass')\n        }\n        this.isShot = true\n    }\n}\n\nexport class LightFactory {\n    constructor(manifest) {\n        this.manifest = manifest\n    }\n\n    createLights(numberOfLights, delay) {\n        const { width, height, image, color, lightWidth, lightMargin } = this.manifest\n        const lights = []\n        const widthSum = width * numberOfLights + lightMargin * (numberOfLights - 1)\n        const offset = (canvas.width - widthSum) / 2\n\n        for (let i = 0; i < numberOfLights; i++) {\n            const turnOn = i + delay\n            const light = new Light(\n                i,\n                offset + (width + (i === numberOfLights ? 0 : lightMargin)) * i,\n                0,\n                width,\n                height,\n                image,\n                color,\n                lightWidth,\n                turnOn,\n                numberOfLights\n            )\n            lights.push(light)\n        }\n\n        return lights\n    }\n}\n\nexport const loadLightFactory = async () => {\n    const manifest = await loadManifest('light')\n    manifest.image = await loadImage(manifest.mainImageURL)\n    return new LightFactory(manifest)\n}\n","export class Timer {\n    constructor() {\n        this.startTime = 0\n        this.timeElapsed = 0\n    }\n    start() {\n        this.startTime = new Date()\n    }\n    logTimeElapsed() {\n        let timeDiff = (new Date() - this.startTime) / 1000\n        let seconds = Math.round(timeDiff)\n        if (this.timeElapsed != seconds) {\n            this.timeElapsed = seconds\n            //console.log(this.timeElapsed)\n        }\n    }\n    getTimeElapsed() {\n        return this.timeElapsed\n    }\n}\n","export * from './character'\nexport * from './scene'\nexport * from './spider'\nexport * from './plant'\nexport * from './light'\nexport * from './loaders'\nexport * from './timer'\n","export const checkTarget = ({ clientX, clientY }, targets, callback) => {\n    callback(\n        targets.find(\n            target =>\n                !target.isShot &&\n                clientX > target.x &&\n                clientX < target.x + target.width &&\n                clientY > target.y &&\n                clientY < target.y + target.height\n        )\n    )\n}\n","import { ctx, canvas, mask, maskCtx } from '/src/shared/canvas'\nimport { loadCharacter, loadScene, loadLightFactory, loadSpiderFactory, loadPlantFactory, Timer } from './classes'\nimport { randomIntFromRange } from '/src/shared/helpers'\nimport { showGameOver, updateLevel, hideLoadingScreen, updateScore } from '/src/shared/UI'\nimport { audioPlayer } from './AudioPlayer'\n\nimport { checkTarget } from '/src/clickHandler'\nimport { updateStreak } from '/src/shared/UI'\n\nexport const GameLoop = async config => {\n    window.game = {\n        config: config,\n        state: {\n            seedsPlanted: 0,\n            seedsShown: false,\n            spidersKilled: 0,\n            spidersKilledTotal: 0,\n            level: -1,\n            currentLevel: -1,\n            gameOver: false,\n            levelUpdated: false,\n            score: 0,\n            streak: 0,\n            biggestStreak: 0\n        }\n    }\n    console.log('1')\n\n    const timer = new Timer()\n    const character = await loadCharacter()\n    const scene = await loadScene()\n    const plantFactory = await loadPlantFactory()\n    const lightFactory = await loadLightFactory()\n    const spiderFactory = await loadSpiderFactory()\n    await audioPlayer.loadAllSounds()\n\n    audioPlayer.playAudio('music')\n\n    const plants = plantFactory.createPlants(config.settings.plants.numberOfPots)\n    const lamps = lightFactory.createLights(config.settings.lights.numberOfLights, config.timing.startLights)\n    let spiders = []\n\n    //character.epicEntrance().then(() => {})\n\n    canvas.addEventListener('mousedown', e => {\n        checkTarget(e, [...spiders], entity => {\n            if (entity) entity.onClick()\n            else {\n                window.game.state.streak = 0\n            }\n            updateScore()\n            updateStreak(character.streak)\n        })\n        checkTarget(e, [...lamps, ...plants], entity => {\n            if (entity) entity.onClick()\n        })\n    })\n\n    const nextLevel = () => {\n        window.game.state.currentLevel = window.game.state.level\n        window.game.state.levelUpdated = false\n        window.game.state.spidersKilled = 0\n        spiders = []\n    }\n\n    timer.start()\n    console.log('2')\n\n    // forcing loading screen to see the amazingness\n    //setTimeout(() => hideLoadingScreen(), 2000)\n    hideLoadingScreen()\n\n    const gameLoop = () => {\n        ctx.globalCompositeOperation = 'normal'\n\n        scene.draw(ctx)\n\n        character.move()\n\n        spiders.forEach(spider => {\n            spider.draw(ctx)\n        })\n\n        if (!window.game.state.levelUpdated) {\n            window.game.state.levelUpdated = true\n            updateLevel()\n        }\n\n        if (config.timing.showSeeds == timer.getTimeElapsed()) {\n            window.game.state.level = 0\n            updateLevel()\n        }\n\n        if (window.game.state.level === 0 && window.game.state.currentLevel !== window.game.state.level) {\n            if (window.game.state.seedsPlanted == plants.length) {\n                if (spiders.length == 0) {\n                    spiders = spiderFactory.createSpiders(\n                        window.game.config.levels[0].numberOfSpiders,\n                        character,\n                        plants\n                    )\n                }\n            }\n            if (!window.game.state.seedsShown) {\n                window.game.state.seedsShown = true\n                plants.forEach(plant => {\n                    if (plant.showSeed) {\n                        plant.showSeedButton()\n                        plant.showSeed = false\n                    }\n                })\n            }\n        } else if (window.game.state.level === 1 && window.game.state.currentLevel !== window.game.state.level) {\n            nextLevel()\n            plants.forEach(plant => {\n                plant.grow()\n            })\n            //window.game.state.gameOver = true\n            window.game.plants = plants\n            spiders = spiderFactory.createSpiders(window.game.config.levels[1].numberOfSpiders, character, plants)\n        } else if (window.game.state.level === 2 && window.game.state.currentLevel !== window.game.state.level) {\n            nextLevel()\n            plants.forEach(plant => {\n                plant.grow()\n            })\n            spiders = spiderFactory.createSpiders(window.game.config.levels[2].numberOfSpiders, character, plants)\n        } else if (window.game.state.level === 3 && window.game.state.currentLevel !== window.game.state.level) {\n            nextLevel()\n            plants.forEach(plant => {\n                plant.grow()\n            })\n            spiders = spiderFactory.createSpiders(window.game.config.levels[3].numberOfSpiders, character, plants)\n        } else if (window.game.state.level === 4 && window.game.state.currentLevel !== window.game.state.level) {\n            nextLevel()\n            window.game.state.gameOver = true\n            window.game.plants = plants\n        }\n\n        plants.forEach(plant => {\n            plant.draw(ctx)\n        })\n\n        character.draw(ctx)\n\n        // drawing a black mask over the whole screen\n        maskCtx.fillStyle = 'rgb(68, 68, 68)'\n        //maskCtx.fillStyle = \"rgb(45, 45, 45)\";\n        maskCtx.fillRect(0, 0, mask.width, mask.height)\n\n        character.drawFlash(maskCtx)\n        // adding \"white\" light onto the mask\n        lamps.forEach(lamp => {\n            if (!lamp.isShot) {\n                if (!lamp.turnedOn && lamp.turnOn == timer.getTimeElapsed()) {\n                    lamp.turnedOn = true\n                }\n                lamp.drawBody(ctx)\n                lamp.drawLight(maskCtx)\n            } else {\n                lamp.drawBody(ctx)\n            }\n        })\n\n        // multiply the mask with the underlying canvas\n        ctx.globalCompositeOperation = 'multiply'\n        ctx.drawImage(mask, 0, 0)\n        timer.logTimeElapsed()\n\n        if (!window.game.state.gameOver) {\n            window.requestAnimationFrame(gameLoop)\n        } else {\n            showGameOver()\n        }\n    }\n\n    return () => {\n        //setInterval(gameLoop, 1000 / 60)\n        window.requestAnimationFrame(gameLoop)\n    }\n}\n","module.exports = {\n    \"name\": \"Plants and Spiders\",\n    \"settings\" : {\n        \"plants\": {\n            \"numberOfPots\": 3\n        },\n        \"lights\": {\n            \"numberOfLights\": 3\n        }\n    },\n    \"timing\": {\n        \"showSeeds\": 5,\n        \"startLights\": 2,\n        \"delayBetweenLights\": 1\n    },\n    \"levels\": [\n        { \n            \"id\": 0,\n            \"numberOfSpiders\": 30\n        },\n        { \n            \"id\": 1,\n            \"numberOfSpiders\": 15\n        },\n        { \n            \"id\": 2,\n            \"numberOfSpiders\": 20\n        },\n        { \n            \"id\": 3,\n            \"numberOfSpiders\": 25\n        }\n    ]\n};","import { GameLoop } from './gameLoop'\nimport config from '/static/manifests/gameConfig.json'\nimport './style.css'\n\nconst titleScreen = document.querySelector('#titleScreen')\nconst tutorialScreen = document.querySelector('#tutorialScreen')\ntitleScreen.addEventListener('click', () => {\n    titleScreen.classList.add('hidden')\n\n    tutorialScreen.addEventListener('click', () => {\n        tutorialScreen.classList.add('hidden')\n\n        GameLoop(config).then(startGame => {\n            console.log('All systems are go!')\n            startGame()\n        })\n    })\n})\n\n/*features:\n- walk up to a plant to grow\n- shadows undercharacters\n- \n*/\n\n/* \n    GAME IDEA:\n    - player starts with planting plants\n    - spiders are coming towards your plants and want to eat them\n    - protect plants against spiders by shooting them\n    - plants grow every round\n    - spider touching a plant will cause the plant losing one growth cycle thus becoming smaller\n    - there will be more spiders and they will be faster or smaller each round (making them harder to hit)\n    - each spider picks one of the plants to attack at the beginning of his journey\n    - you get points subtracted every time you miss a shot\n    - collect plants at the end after 4 rounds, your score depends on how much of your plants is left\n    - best achievable score is when all plants are fully grown after 4 rounds and you have missed no shots\n*/\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}