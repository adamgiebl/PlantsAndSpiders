{"version":3,"sources":["src/shared/canvas.js","src/KeyboardHandler.js","src/input.js","src/AudioPlayer.js","src/classes/loaders.js","src/classes/character.js","src/classes/scene.js","src/shared/helpers.js","src/classes/spider.js","src/shared/UI.js","src/classes/plant.js","src/classes/light.js","src/classes/timer.js","src/classes/index.js","src/clickHandler.js","src/gameLoop.js","static/manifests/gameConfig.json","src/main.js","../../AppData/Roaming/npm/node_modules/parcel/src/builtins/bundle-url.js","../../AppData/Roaming/npm/node_modules/parcel/src/builtins/css-loader.js"],"names":["canvas","document","querySelector","ctx","getContext","font","width","innerWidth","height","innerHeight","mask","createElement","maskCtx","groundPositionX","groundHeight","groundY","resizeCanvas","canvasCenter","x","y","window","addEventListener","KeyboardHandler","constructor","keyStates","Map","keyMap","addMapping","code","callback","set","handleEvent","event","has","preventDefault","keyState","type","get","listenTo","forEach","eventName","setUpKeyboard","character","keyboard","direction","right","left","jumping","setUpMouse","clientX","clientY","rotate","e","onClick","AudioPlayer","audioContext","AudioContext","audioBuffers","muted","gainNode","createGain","loadAudio","src","fetch","then","response","arrayBuffer","decodeAudioData","addAudio","name","buffer","playAudio","source","createBufferSource","connect","destination","start","toggleMuteAudio","gain","value","loadAllSounds","Promise","all","audioPlayer","gunshotSrc","splashSrc","glassShatterSrc","musicSrc","gunshot","splash","glass","music","loadImage","url","resolve","image","Image","loadManifest","res","json","loadAnimations","animations","animationsMap","animation","spriteMap","frames","frame","rect","Character","manifest","isOnGround","deltaX","deltaY","angle","velocityX","velocityY","gravity","flip","shot","distance","ready","streak","highestStreak","lowerBody","runningAnimation","jumpingAnimation","upperBody","flashAnimation","active","duration","flashImage","shootingAnimation","size","setUp","draw","rotationPoint","strokeStyle","getFrame","Math","floor","translate","runShootingAnimation","drawImage","imageFlipped","setTransform","fillStyle","move","spriteSheet","drawFlash","fillRect","atan2","PI","loadCharacter","spriteSheetURL","imageURL","flippedImageURL","flashImageURL","animationsToBeLoaded","Scene","loadScene","mainImageURL","getRandomInt","max","random","randomIntFromRange","min","checkCollision","obj1","obj2","Spider","position","isShot","hasKilledAPlant","killer","splashAngle","cos","sin","points","shown","speed","multiplier","splashImage","drawPoints","plants","plant","plantBoundingRect","shrink","game","state","spidersKilled","config","levels","level","numberOfSpiders","textAlign","fillText","spidersKilledTotal","score","biggestStreak","SpiderFactory","createSpiders","spiders","i","length","push","loadSpiderFactory","splashImageURL","querySelectorAll","audioElement","addEventListeners","el","target","dataset","id","plantSeed","classList","toggle","showGameOver","remove","innerHTML","reduce","acc","updateLevel","innerText","updateScore","updateStreak","streakCont","offsetWidth","add","hideLoadingScreen","PlantFactory","createPlants","numberOfPlants","loadedPlantImages","potMargin","plantSizes","widthSum","offset","Plant","positionX","positionY","plantImages","planted","showSeed","potCenter","timeToShowSeedButton","activePlant","activePlantImage","createSeedButton","grow","seedsPlanted","outerHTML","showSeedButton","overlay","loadPlantFactory","Light","color","lightWidth","turnOn","numberOfLights","lampCenter","turnedOn","perspective","drawLight","beginPath","moveTo","lineTo","closePath","fill","drawBody","LightFactory","createLights","delay","lightMargin","lights","light","loadLightFactory","Timer","startTime","timeElapsed","Date","logTimeElapsed","timeDiff","seconds","round","getTimeElapsed","checkTarget","targets","find","GameLoop","seedsShown","currentLevel","gameOver","levelUpdated","console","log","timer","scene","plantFactory","lightFactory","spiderFactory","settings","numberOfPots","lamps","timing","startLights","entity","nextLevel","gameLoop","globalCompositeOperation","spider","showSeeds","lamp","requestAnimationFrame","module","exports","titleScreen","tutorialScreen","startGame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links"],"mappings":"AkBAA,ACAA,AHAA0T,IEAIK,ACAAU,EHAE,CAACd,GGAG,GDAG,ACAAe,CHAb,EEAgB,CFAC,GEAjB,ACAoB,CAAC,cAAD,CAApB;AHCI,UAAQ,oBADK;AECjB,ACCA,AFFA,ADEI,SEDKV,ACCAW,KHAQ,KGAjB,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,AHAM,MEDF,ACCAC,CDDCd,MCCM,CHAK,EEDhB,ACCca,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEf,ADFJ,ADGY,IEDRA,SAAS,GAAGE,MFCY,MEDA,EAAxB;AACD,ACADY,AHDgB,EGChBA,GHFe,IGER,CAACE,MAAR,GAAiB,YAAY;AAC3BH,ANLJ,AIEA,AjBFO,AgBMC,IGDJA,EnBLS5U,EmBKL,CAAC0N,GnBLU,EgBMD,CGDd,AnBLkBzN,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AkBML,ACAC,AhBNH,AFAe,AIAf,AMAA,ADAA,AJAA,AEAA,AIAO,AEAA,ACAP,AbAA,AOAA,AOOY,GGHV,GlBJmBoB,AWAR+P,AEAAS,GIMJiC,ENNF,CAAY,KEAK,CIMtB,EJNyB,CbAZ,AaAa,CbAS,EeOP;AEA7B,AjBNGxS,AYDJ,ADCIA,AED0B0B,AdCvB,AgBKW,EfLd1B,AWAAA,AED0B0B,IdCjB9C,GcDe,AdCZ,GAAGH,CCAJ,AWAA,GXAG,AWAA,EZAO,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AmBMLyU,AhBNF,AFCQ,AIAR,AQFA,AFCA,APDO,AMEP,AJDA,AEAA,AICQ,AEF+B3R,ACCvC,AbAA,AOCA,AFFO,ASEU,EGKf2R,ALPqC3R,CEAtB,MGOR,AfPO0C,AQEH0L,ALFGrH,CYON+K,IAAR,GAAeJ,CfPV,AQEC,CRFkB/O,EeOL,APLI,ALFlB,CYOemP,AfPf,AQEC,ALFqB9K,EHAE,CGAxB,CYOU,CAAU+K,AZPO,KYOjB,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCzD,IAAI,CAAC0D,GAAL,EAA/C;ADEF,ACDEN,AlBLM,AYHR,ATCI,AQEI,AEHoB,AGI5B,ARDO,ATDPzU,AODI,ASSA,CFVuB,CKQzByU,CLRgD7C,AdE/C,CAAC1R,EmBME,AFJAuT,ARDO3G,CUKNkI,CnBNP,CkBOSlB,AjBNIzS,AGFF,AQEE+P,ALFF7I,CODgB,CdEhB,CcFgD7G,AEU7C,CZTCoD,AGAA,CAAC0D,GYOd,AFJe,CEICyM,AlBLV,CMFG,CHAA,AQEH,AEHmB,AGIPnV,AVHEyI,CWQtB,AjBNyB,AGFF5C,EQEI,AHAG,ATD9B,CkBOwB,ANNhB,ALFkB,CNEGrE,AaH2C,APC7C0I,CEEMoB,ERAR,AGFK,AaGF,CAACrL,CEI3B,AlBLM,CkBKuB2U,AlBPb,AMAI,CNId,AGJ0B,AKEK,IAAI,AFFLnM,EYOpC,EAAsCkM,AZPE,CAACjM,CUGvB,CAAuB,CEIC,CAAC0M,CZPP,CAAWnL,GAAX,CAA3B,CAAP,IYOF,CFJkB,CAApB;ACME,ACDD,AhBPD,AECA,AQHA,AFEA,APAQ,AMCR,AJAO,AEDP,AIEK,AEHDrI,ACCJ,AEGA,ARDI5B,ATDJD,AODC,ASSO,EFVJ6B,ALGA5B,IHDS6J,AWEP+J,AjBFA,CAACvT,GIDOyF,AUDF,ALGA,CHDL,AQDCgM,ALEKhF,CHDM,ANAnB,GIDmB,AJCJxM,EgBQM,CZTC,AUAP,AEQD,CFREyR,CGGI,EbHMhM,CUAlB,AGGe/F,CHFXkN,CdAZ,EIDsB,AKElB,CAA0B,CLFtB,CUCU,CGEa,CAACjN,EHDhB,CAACiN,MAAM,ALAnB,CKAoBxC,CLAqBpI,EQCtB,CAAuB,EHD9B,ELAZ,CAAiD2K,CKCrCjK,CLDuC,IAAI,EKCpC,GAAGkK,CGAH,CAAvB,IHAgC,CAACjM,CADjB,IAEA+B,OAAO,GAAGkK,MAAM,CAACjM,CAAP,GAAWiM,MAAM,CAAC7M,KAF5B,IAGA4C,OAAO,GAAGiK,MAAM,CAAChM,CAHjB,IAIA+B,OAAO,GAAGiK,MAAM,CAAChM,CAAP,GAAWgM,MAAM,CAAC3M,MANpC,CADI,CAAR;AIUF,AjBLM,AYNR,ATGQuF,AECJxE,AQOH,AGLDqS,ARDQ1G,ATDRlN,AgBQQ,CFZD,CRIHuB,EFDIwE,AKEAmH,ESMF,ATNI,ATDJ,CSCK7L,ATDJb,ECEMkB,AGHA,CAACL,CaGH,CAACA,CXFG,ANAf,CMAgBwF,CLER,CDFQpG,ECEM,CeMC,CAFT,EfJYgB,AKFX,CGCP,CHDkB,AGCE,CRCN,CGHd,CHGA,AGHuB,AJC/B,CiBEA,CAA6B,ERDrB,ELFA,AKE6B,CAAC,CLFC,CaGvC,EAAsC,GbHO,GaGD;ACMxC,ACDJ,AhBRA,AFIK,AIHL,AQJA,AFIO,APAKqE,AMCL,AJAC,AEFR,AIEIlB,AGFJ,AbAO,AeIHgP,ARFoCzG,ATCjC,AOFA,ASSC,EJRJvI,AKEAgP,EEIA0B,ERPSvF,APADjK,AMCCwI,ARFA7L,AOE2B0K,ATC3BzM,CYDJ,ENAImG,ACDGuD,CWQN,ANPE,AZCK,CWFV,CAAY,CPAA,AaGJ,AjBDKnK,CkBMNiU,ACDA,AfPMnO,AaGJwH,GEIC,AbNT,CIAD,CQOG,AdRS,AMCO,ARFA,CECd,AECY1G,CYOpB,ACDJ,AnBL4B,CEHCnE,AFGA/B,CiBCzB,CAAsByN,EDMI,CCN1B,AVHG,CDCC,AWEsB,AVHK/D,GLDG,AKC/B,EAAiCH,ELDE,AFGtB,CiBChB,AjBDuC,AOFpC,EAAsC,MPEzB,CAAb;AkBOJ,ALbH,AFKI3I,APAK,AMCLA,AJAC,AMAG,AVFJ,AeKAsS,ARJkC,AFAlC,ASKU,ELLVtS,ADCAA,AOGAsS,CCEF,AFXe,CEab,CdVI,AKE6B,GPD3BlR,CUEG2O,ALDF5I,CEA0C,CSQ1CyL,EPRI,ADCA,AHDA,CWQX,APRY9G,ADCAxG,AHDA8B,EWQA,APRD,ATDG,AeKA,CAACtH,CNJC0N,ACCZ,CVFa,AKCV,CAAWrG,CKCG,CFAV,CRFUpH,CQEC,AHDA,CKCGkQ,ALDFrH,EIAZ,EAAgB6E,ACCN,EAAjB,ALDc,EUIlB,CAAgC,GVJG9E,CIAxB,EAA2B5J,AJAA,CUItC,EAAyC,AVJA+J,EIA9B,CJAwB,CIAU7J,ATD5B,EAAjB,AeK+C,AVJA,CAA7B,GIAP,CJAyC6J,CIACtE,EJA9C,CAAP,EIAW,EAAiDiK,KAAjD,EAAwDC,UAAxD,EAAoEC,MAApE,EAA4EC,cAA5E,EAA4F;AOSvG,ACFJ,AlBHIxO,AIFG,AQPP,AFMQ,APAAoE,AMCA,AFFD,AIEF,AGHL,AbEIpD,AeIIkR,ARJItI,ATCL,AODN,ASSG,EfNA5J,ACHAgB,EEAIoD,AaIA8N,EZHKjN,AGFA6D,ACCDc,ATCC3K,EkBOLwT,CCFCmB,ARNIlI,APAA,AMCAxG,CNDC/C,AFAF,CSAJ,ATAKnC,CDGC,AOJP,ACCW,AOSJ,CfNCC,AGHP,AIDY,ACCDuL,ATCC,AgBSZ,CLVUE,COQH,AbPR,CAAgB,AMDf,APAYxH,AJCGnF,CCET,ASFN,CQOU,ACFlB,AFFsB,CCIH,AjBLEmB,AGHb,AaIe0L,ARJE,CCCD1G,ADDEuG,ATCC,CmBKN,AjBNjB,AFCwBhN,CEDJ,EgBQA+T,GAAG,AjBLb,AQHK,CSQSE,ARPpB,ARDJ,AeII,ARJ0BhH,CRGH,AgBCEe,CfJDjM,AOAd,CAAN,ATCW,CiBGf,ARJ8BmL,ATCC,CkBOrB,ADJmB,ECIFgH,ClBPZ,CAAhB,CEDiC,EgBQtB,CAAuB,ADJjC,ARJI,CPAgC,8DgBQ1B,CAAd;ACDF,AlBHM,AIFJ/S,AQRJ,AFOQ,APAH,AMCA,AJDD+G,AEDA/G,ANCImB,AeKA,ARLC,AOUG,EXTRnB,ACDA+G,AEDA/G,CJLO,CAAP,AFMImB,COFA,CUQF4S,AbNE,CAACnV,ELGIuB,AUHApB,CLAL,AUUU,CADV,CVTM,CDCC,AGFA,ANCE,CGCDuG,AMDR,AHDQA,ANCEjE,CDGV,CkBGN,AlBHkBd,CUHCxB,CQMH,ClBHV,CAAgBsB,EIFT,AMDP,AHDO,CNCP,CDGA,AIFkB,AGFA,ANCEiB,EDGEhB,EgBEbiK,CfLT,GAA4B3J,EDG5B,MCHA,OeKA,EAAiB6B,IAAjB,CAAsB8P,SAAS,IAAI;ACGvC,ACDA,AhBTG,AFMF,AIFG,AMDA,APAP,AEAO3T,AEDA,AICJsR,AGFJ,AbEK,AeKOa,ARLP,ATAL5R,AOAO,ASUK,EJVR+Q,CVFA,AOFA,CHIItR,ANAJ,CAACG,CGHQgD,AcQDgP,CXLD,CYOH8B,AZPItL,CDCCjC,AMDArG,AJAG8J,CCDF,ARCd,GiBKmB,AjBLN/J,CiBKOgS,CCEhB,APPI,CCAU,CMOD,AfVV,AEIC,ACDA,AWKI,CdRa,AQGH/R,ALAA,AWKE,CLLH,CPCGqG,GCDGA,ANA3B,AOAO,ASUwB,CLVvB,AJAuB0D,IFCvB,AEDD,EAA8BC,CDAf,CAAczE,ECA7B,EAAoC,CDAnC,EAAmC,AWK/B,CXLJ,EAAsC,CAAtC,EAAyC/F,eAAOM,KAAhD,EAAuDN,eAAOQ,MAA9D;AYQF,ACDH,AhBTCe,AEII,AQTR,AFQQ,ADAJgN,AJAC,AEFW5J,AIER,AVCJhC,AeIQmR,ARLR7T,ATAJS,AOAI,ASOI,EbVJa,AOGAgN,ARCA5L,AODA1C,COMU,ChBNV,CAACO,AgBWG,CRbQmE,ASOJmP,AVJJvJ,EKDImH,CPCC9O,AMDA1B,CAAL,ATCI,AODA,AFCA,CLACS,AODAzB,ATAb,AOCagB,CAAL,CWMKqT,AfVE,AQGExF,CDAD,AVAFtO,CUAG+N,AOKI,AVJJhE,CJJC,ASGE,CJFN,CHGN,CODe,ALCF,CKDG,ALCFtJ,CFAG,AHArB,AKAa,CIDT,ATCgB,CgBMD,CAACkT,ANPI5C,AHAxB,AFCsBhH,CEDC,ATA3B,GYAwB,AVCpB,AKA0B,CGDd,AHCelK,CLAC6B,CgBMD,ARPE,CQOD,CAAD,ANPM,CMOd,AXNf,CWMF,GNPoCmP,AVCF,AKChC/G,CEFJ,EAAuClJ,CPCC,AKChC,CAACH,CAAL,GKFe,ALENqJ,IKFsC,ALElC,CAACjK,GKFd,EHAJ,AFEI,CEFoD,EFE9BkK,IAAI,CEF9B,AFE+BtJ,CAD3B,CED6D,GFG7DqJ,IAAI,CAACpJ,CAAL,GEHyE,AFGhEqJ,IAAI,CAACrJ,CAAL,GAASqJ,IAAI,CAAChK,MAFvB,IAGA+J,IAAI,CAACpJ,CAAL,GAASoJ,IAAI,CAAC/J,MAAd,GAAuBgK,IAAI,CAACrJ,CAJhC,EAKE;AWGD,AfVG,AFMJY,AIFQe,AMDJ,APAD,AMAC,AFHqB4H,AIGrB,AGDD,AbEChI,AeIC,ARLD,ATCD,AOIC,ASMI,EfRRX,ECFIW,CeCA,CZDII,AGJiB4H,AOEhBuH,AfEApR,EYDD8Q,CTHCpO,AQGApC,APAG8E,AKAHsH,CJCG,AMDR,ADAM,AMWI,CTNH,ASKP,CXTU,CJEH,AUHEyB,ATCA,CDEDhN,AONF,AOEO,AbEHY,CUDC,ALKX,EFLiB,AUDD,CHCF8F,AHAd,CRGO,AQHQ8E,ENHf,AFMe,AGHhB,AJCqB,CWDpB,APAqBnJ,AQAH,CAACuN,AGDG9F,AbEtB,CCJoB,ADIAhJ,AFAG,CSDvB,ATCD,CIDA,AKAuB,ENHEU,ACGG,AQAb,AVCd,CUDyBkO,AGDT,EbEWvP,COD3B,CMDgC,IHClB,CAAd,CVCA,CCJoB,EAApB;AeWL,ACDDmT,AhBTM,AFMA,AIFIzS,AQXZ,AFUQ,APAJ,AMDYvC,AJPG,AEIoBA,AOGnCc,AbEC,AeIA,AVAA,ASMO,EGLVkU,AJPElU,CbAA,AeDA,AVAA,GFGQyB,AKFIvC,AFHuBA,EOG7B,CZFGmD,AQGA2M,APAFrM,AWDA4H,ARMA,CNFG,CIFG,AKFH,AFHA,CWUF,CdLO,AUFf,CXCY,CeMD6J,AfNG,CWDA,EVAO,CMCjB,ERHA,CQGkB,CKWK,CbdH,CgBSH,CAAC,EhBTM/T,ECGA4C,CDHJ,EAApB,CCG6B,IeMC,GfNtB,CAAL,CAAkCL,IAAlC,CAAuCkC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9C,CAAP;AeOA,AhBTI,AFKQvE,AIDJmB,AQZZ,AFWY7B,APAX,AMFsBV,AFHuBA,AIItC,AGAAsL,AbGJnJ,AeGH,ARNOwC,ATED,AOIC,ASGA,CCdR,CfQIxC,CcCU,CDJNmJ,CCaA,CfVQlK,AIDJmB,AMDA7B,ADFWV,AFHuBA,ARMjCM,CWDA,CQML2U,APPI,CTFC/R,AQGE,CIDD,AbGF,CAAC/B,AKGE,CGPD,AKCEmK,CIOH,AdLM,AOFFyF,CTFT,AQGYrQ,CNCC,AMDN,CQMCjB,AZDR,CJRa,CQGG,AIFN,AfGO,GECrB,AFDwB,CGJpB,ADKgB,CSFKK,AXCtB,CmBKiB,APPZ,COOayM,GRND,ACDQ4E,CVG5B,AOHgB9M,EECiB,ATEJ1C,CSHP,GCAlB,EAAiC,EVGA,EiBIzB,CAA0B,CjBJG,COHrC,sBUOQ,CAAZ;ADEF,AfVM,AFIM,AIJW,AQTzB,AFYYhB,ADHmB4E,AFHjB,AIKF,AGAJ6F,AbGAlJ,AeIR,ARPK,AFMA,ASOO,GPhBR,CMGIkJ,AbGAlJ,CGLA,CMGIvB,ADHmB4E,CCGlB,CVCY/D,AOPgC6E,CUahD,AfVIlD,AQGE,AIDF,CCaK,CNfJ,AEEG4N,AGAF,ACYP,CEJN,CjBNM,ACCS,CSFGpQ,ATEFyB,CSFH,CHNP,CLGA,CQGgB,ERHA,ESEZ,CDCiBpC,ATErB,CAAoBuC,CCLCQ,ASEEoO,IDCP,ETEhB,CSF8B,ACD1B,CAD6B,CAE7B,AVE0BxP,GCLd,CAAkByB,IDKlC,MCLgB,EAAhB;AeWP,ACFG,AhBRC,AEIG,AQdR,AFU0B,APGnB,AMJ+B6K,AFF9B,AIMC,AGDGiB,AbGP,AOHJ,ATEM,AOIN,ASOW,CPvBL,EPWH,CFCO3O,CWJH,CDD8B0N,AKG1BiB,GIMH,AdJI5I,ADDGV,AINHS,EROK,EmBIL6F,CAAC,AnBJO1M,GmBIJ,AXXT,CWWJ,AJNoB,CVEhB,CcIY0M,AXXI7F,AOKE,AfEC,CmBIN,AJPN,AfGarG,CKAF,CDDnB,AMJO,AMgBiB,CGPPiV,AfLOpP,ECCvB,CLAa,CQPb,CWWqB,CAACsG,AnBJO7L,IID9B,EeKH,AfLuC,EeKL4L,CAAC,EAAnC,CnBJG,CmBIoC;AACrC,AlBJE,AIAA,AQfR,AFcQ,APAJ,AMLqDgC,AJElD,AEHC,AIMH,AGDOwD,AbIRvP,AcMI,EdNJA,CcHU,EAaN,CNlBiD+L,AJE5C3E,ASEDmI,EdEA,AGDF5L,CHCG,AIAAS,AMDAsJ,AHNA7P,CWWHiU,AjBFE,CAACnS,GDFKZ,CIAV,AKNM,AJEQ,AEHd,CWWQ,AJNM,CIML6S,ARLT,CNCc,ACJG,AEHHjU,AOKE,CVEhB,AHEJ,CDFS,AUDW,ATGFc,CDFGa,AGDF,EINf,AOGO,CdIF,AGDa,CHCGL,AUDrB,CTGJ,CiBEM,CAAkB6T,AfLEhU,CHCjB,CAAL,AKJ6B,CFGX,CHCU,CkBIH,AfL7B,CeK8BiL,CAAD,CAAL,CAASsI,IAA3B,MAAqCP,MAAM,CAACR,YAAP,EAAzC,EAAgE;ADGtE,ACFQU,AhBTJ9Q,AFKQ,AIAJ,AQhBR,AFeQ,APAJwC,AMNgEsI,AJGhE,AEHI,AOKI9C,AbIX,AcUW,Cd1BL,CCSHhI,ACIAwC,IMNgEsI,AKKxD9C,EIMJ8I,AbRE9N,CYUD0N,AbNIvN,AMDAgJ,AHNA1P,CQmBK,CbjBL,AagBL,CbhBMwD,ACIA,CAACvB,COAP,AHNA,CLEK,AEKL,CCJU,CHDC,AQIEyN,AHNAxP,CWWH,AdJI,CaMtB,ACFmBiV,AdJX,ACJa,ASEI,CGQL5P,AdPhB,CAAmBU,AWDI,CJCnB,AIJO,CGWf,AVbQ,CWWgB,CDEC,ACFAmG,AbRE,CaQH,CAAN,CAAV,EfLwB,IAAI,kBEHI,OAAb,CAAvB;AYWF,ACFK,AhBTC,AFKC,AIAD,AQjBR,AFgBQ,APAA,AMPM,AJIV7F,AEHI,AIKJgL,AGAQzF,AfCZ,AgBaY,EVhBRvF,AMEAgL,IGAQzF,AfCNpL,EUP6E,CQc1E,AbNIiG,AMDAgJ,AHNA/O,CUaH,AdPIsF,AEHF,AEHJ,CLEOzC,AGCFgC,EIJ2Ec,AFCvE6D,CHOT,CaMO7E,CfXK,AGChB,AMEc,CTHG/B,AEKA,CaMZ,AbND,ALDU,CWAV,APAe,AEHF,AMEA,CMQD0Q,AfXA,CAAL,AOHP,AFCiB,ARMJ,CGHRxQ,AQGaiM,APAA,AINA/O,CAAlB,AQmBuB,CDdD,CTFH,CHDZ,ACIeO,AWDE,CGQvB,AfVSwC,AYFH,AfKY,CkBOC,CdPF,EAAlB,COAA,GRHkB,IAAIA,QAAQ,CAACC,CGAF2C,QAAQ,CAACmD,CHAhB,EADf,EAEFhG,IAFE,CAEGE,EGDS,CAAvB,QHCyB,IAAI,KAAKX,UeS7B,EAA2F,AfTnE,CAAkBY,GeS1C,IAAmG,GAA1G,KfT+B,CAAkCD,WAAlC,CAFlB,CAAP;AeYP,ACFI,AhBPA,AEGG,AQlBR,AFiBQ,APAAqC,AMPA,AJIJ,AEHI,AIKA,AGAIyF,ANFL,ATGHhM,AgBUI,EhBVJA,CgBHU,CZGNuG,EWDIyF,ANFCyB,ETGH,CKCGvG,AMDAnB,ALHF,AEHE5E,ARMFb,CUPGiL,AFCN,CIKO,AGAE,EXCA,AEHFzB,AEHEY,AOKE,CJCX,APAUjE,AWDE,AfChB,CeNW,CLDK,AEMA8K,CDCCxL,AXAFxF,CKCX,ACJG,AGAc,CCJF,AJIFsG,CFGb,CCCiB,ADDAtE,AMPjB,AFCiB,ACGG,CJIpB,AMDA,AHNkBpB,CAAlB,IFGG,AMEH,AHF0B,ATG9B,CIAI,AEHJ,CFG6BuF,KAAK,IAAI;AHElC1E,AIAA,AQnBR,AFkBQ,APAIwE,AMPJ,AJIP,AEHO,AIKH,AGAO2L,AEOZ,ARTIlS,ATGAD,AgBnBa,CVYV,AUZP,CPgBIC,ATGAD,ECCIgC,EGDIwE,AWDA2L,EfCF,CCCG,AIAAhL,AMDA0H,AHNAlE,ARMFnK,CCCG0B,ASRA0M,ADIF,CAAC1O,IEGL,APAa,AINb,ARMJ,CIAkB4B,ECCd,AMDc,ADPA,AFCA,AOKE,AfCJrB,CIAR,COAJ,APAkBiG,AWDA,CVED,AKRApG,AKME,CVEnB,AURO,CPCP,CPOA,AQJJ,CLG2B,AKHJ,CLGK+D,AMPF,GAAGmK,AVO7B,CIAQ,EAA0B9H,KAAK,CAACC,IAAhC,AKHR,CCJqB,CDIqB4G,ECJImB,ODI9C,CAAoDhB,CCJG,IAAIc,CDI3D,CAA2D,QAA3D,ICJyE,GAAG,CAArB,CAAnD;AQeRmF,ACFI2B,AhBRAlR,AFKI,AIDA,AMDA,APAC,AMPD,AFCA,AOKIgO,AbEL,AOJHnS,ATGAS,EGHA0D,AMAAnE,ATGAS,EmBKA4U,CfPI,CWCIlD,AbECpP,AFDL,CkBOD,AlBPE1C,CkBOD2T,CbNK7M,AMDAuD,AHNAC,CLGD,AFKEzI,ASTA0M,ADIF,CNACxK,AMAAnE,CTGT,EmBKU,AJNM,CZFR,AQGJ,AXASK,CKCT,AKRY,AKME,AbEC,CiBIN,AhBRE+D,CFKG,AUFA,CNCC,AKRA,ARQG5B,CgBM1B,ARdwB1C,CSYpB,AlBHqBgC,AcVV,CVSP,CaMegS,AfVX,AQGJ,CHNA,ACGJ,CNAuB,AMAA,ATGvB,CCE0B,CAAC5R,AORA,CNOI,GDCV,CORjB,ANO+B,GQRR9B,CTSS,ISThB,CQcxB,CTVI,CCJmCsO,CDIOjB,CRKrB,GAA2B,GST7B,CTSE,CQLrB,ERKuD,ASTR,CAA3C,CAJyB,ADQ2B,CCHpD,ETQA;AiBMRgG,ACFG,AhBRK,AEIA,AQpBR,AFmBQ,APAArN,AINA,AIfW,AGoBP+L,AbERrS,AFDAU,EAAAA,CmBJqB,CfIjB4F,CeKH,CJNO+L,AfCJ,CkBOD,ACXkB,AnBIhB7R,CkBOD+T,ACXN,ChBCW9Q,AEIA4D,AMDAiJ,AHNAzF,IHOL,ALDJ,EQNI,CHOY,ALDFpK,CIAG,AFCVY,CgBMX,AdPsBS,AINA,AOKE,EJChB,AHNA,AOKkB,CGQLyS,AfVb,AEIA,ADDA,CDHkBzS,ACGAyE,COAC,ERHnB,AQGA,AITO,CZMelC,CHG1B,GGHI,CeUR,AdPmC,CDHCC,ACGAD,CFChC,CAAwB,EEDpB,EDHA,ACGkCmC,OFCtC,EEDI,AFCiC,CAAC;AiBKzC,AhBRI,AFKG,AIDA,AMDA,APAH,AMNG,AFAA,AOKI6F,AbCgCpJ,AFAxC,GINA,CFMwCA,EaDhCoJ,EdGA,CIDC/E,AMDA4I,ADNA,AFAAnJ,EOKI,AbCyB,EDEzBvF,AIDT,AKPSkL,AKKE,CLLD,AKJH,CJUP,AHNA,CHOY,CKPC,CCMCwD,ADNd,AFAcvL,EEAE+H,AVMpB3L,CKCI,AKPiB,CTQb,CAAesB,CUFnB,ADNoBmM,ETQhB,CAAmB5M,ADFpB,EQNsB,CAACV,ARMpBlB,CCEF,AORU,GAAgB,ACGJoB,ETGd,CCEqBe,ADFpB3B,CUNb,CFAmCU,CEACwL,AFApC,ACGgC,CCHK,ADGJf,ECHjC,AVMM,ECEN,ASRyC,ADGf,CAAYC,ATGhB9K,CCEqB,IQLjB,CAAkBsL,MTGhD,YSHmE;ARM3D,AIDJ,AQtBR,AFqBQ,APAJ,AMNQb,AFAJ,AOKI9D,AbAyCvE,AFCpD,CAND,GEKqDA,EQLzCqI,AKKA9D,GVECF,AMDA4I,APAF7J,AINEU,GEAK,AKKA,CLLC4F,CKKC,CPLZ,AOLO,EVYP,AKPI,CACI,AFDMjI,EHOE,CAAhB,CDDJ,AMLgBmK,CCKZ,GAAsBqB,CDLd,CACItB,CFFa,CAAC1N,CAAZ,GEEI,AFFY,GEET,CAACb,CFFaa,ACGJC,CEG/B,AHNA,GEE2B,EDCU,CAACuK,CCDPe,CAAC,EDCD,CAAYd,ECDN4C,GDCN,CAAkBnC,KAAM,KCDxB,GAAuB,CAAvB,GAA2BqC,SAA/B,CAAN,IAAmDhC,CADhE,EAEI3L,kBAAUP,MAFd,EAGImO,UAHJ,EAII5I,KAJJ,EAKI0I,iBALJ,EAMI/B,CANJ,CADJ;ASYZgH,AhBTInP,AFMK,AIDD,AQvBR,AFsBK,APAJ,AMGQ,AFTD,AOKI+H,AbD8B,ECFtC/H,CDEqC,GiBOnC,AJNM+H,CIMLqH,CjBP4D,CGGtDnM,AGPAP,ELEA,CAAC5C,EgBSd,AdJQ,AGPA,ELEK,CgBSIkR,AdJI,AGPA7M,CLED,CYGK,EVEjB,AGPiB,AOKE,CPLDY,IWW1B,CXXqB,CAAW,KAAKtC,KCGC5F,CDHjB,EAAwB,GCGD,CAACuK,CDHK5E,GCGZ,CAAY6E,EDH7B,CAAb,ECG8B,CAAkBU,aAAc;ANA9D,AEKA,AQxBR,ALiBQ,AOPO,AbWP5J,AFED,IEFCA,EFEKzB,GKCAwG,AGPAqD,CLECtG,GDEG,CAACrB,CGGV,CFLY,EEKE,ALDG,CGJF,AEKf,CGPA,ANIA,CAAiBF,AFEG,EQND,CLECM,AKFpB,INIA,EAA0BL,MCFX,CAAkBuB,ADEjC,COD8BrD,MAAM,CAACuK,IAAP,CAAYJ,KND3B,CMCe,CND9B,AMCiDqC,MAAnB,CAA0B,CAACC,GAAD,EAAMrC,KAAN,KAAgB;ANAxEhH,AFMA,AIDA,AQzBR,AFuBI+L,ADGI,AFRA,AOVU,Abcb,AODW,ATEcrP,EWA1BqP,AXA0BrP,Cef1B,AbYA,AFG2B,CGHvBsD,CHGyBxE,ICGpBwB,AIDAkG,AGPAR,CLEC,CAACxC,AQGF,AFFUmJ,ATEgB,CWAzB1N,AXA0BG,ESFd,CEEb,EAAM,AFFUkL,ATEI,CGHzB,AFMA,AORA,CLEe,AFMA1J,CDHyB,CQLvB4G,ARKG,CCGpB,AIDA,AIJ0B,CRKP9G,AQLQwG,CNDPzE,CEKC,AGPA,CHOrB,AGPsBoH,CPQtB,AQLqB,ERKI5I,AORR,CAAS,ACGQ,CCKhBoJ,CPNlB,EMCQ,CDHuBtE,EPQ/B,ASAA,GFRiB,IAAuB,GAAxC;ALGA,AFOA,AIFA,AQ1BR,AFwBQ,ADGA,AFRA,AOKJqL,ANFS,ATCsCnR,EeC/CmR,AfD+CnR,CSHb,ATGc,ESDrC,ATCuCnB,CSHhB,CAEpB,CEEN,CRHC2D,AFOAjC,AIFAiG,AGPAR,AOKF,CAACoL,CLGGhH,AVJ6C,CAAC/K,CWC5C6P,AIAb,CAAY,CdIR,CAAYhO,CEPZ,AOMA,AKHJ,CZHkBqC,AEKd,AGPA,ARI8C,CCK9C,CAAgB9C,CIFC,AMFjB,AHLiB8G,ARI6C,EKI1D,AMHe,CVInB,CEPA,AKFqB,CLEC,AFOAvG,AIDf,AGRe6I,GAAL,CAAS,CLECzH,AEMfsD,GJCZ,COT+BI,IHQxB,CAAcU,AGRJ,GLEK,CAAkBhD,AKFA,GAAxC,EHOiB,MFLjB;AACAH,AFOH,AIDOoD,AQ5BZ,AFyBYzH,ADGP,AFRG,AOMJ,AbHAH,AFAwB,CAArB,GGDCwE,EEMIoD,AMHAzH,EICFqS,CJDK,AHLF5P,CLEC,AQGE4N,CRHDlM,EYIA,GAAG,CZJV,ADCGjD,CMHH,CGKI,CRHY,AYIFgQ,CPNG,CHQG,AMJD,CAEf,CNEkB,CFND5N,CKFCwD,GHQKJ,EGRV,ENGrB,CMHkC6B,AOMpB,AbHU,EaGxB,CZJoB,AEMM,CFNYrG,AEMEgE,AGRF,CAACkD,ELEnB,AKFc,ANGlC,CCD0ClF,CDCTjB,CMHW,ANGV,CMH9B,CLEgB,CAAhB,CEMsB,AHLY,CGKaf,GAAzB,CAA6B,SAA7B,CAFL;AFHjBmC,AEMIqD,AQ7BZ,ALqBQ,AOMJ,AbHInF,ICDA8B,ADCA9B,COTJ,CJcQmF,EUFFnF,CPNG6E,CLEC,CAAC3C,EDCE,CAACvB,ECDV,CAAa,AKFb,AOMW,CZJX,EKFgB,AOMF,CPNd,ANGA,CGKoB,EAAE,EUFF,GVEOwD,QAAL,CAAcR,UAAd,CAAyBhE,GAAzB,CAA6B,EUFvD,OVE0B;AFLzB,AFODC,AILqB,AQ1BzB,AF2BYnC,ADxBc,AFmBlB,AOMJ,AbHC,AOAJ,ATADiB,CSZO,CRkBHkB,CCRA,EGGI,CMCInC,AXFN,CAACkB,CeGGoR,CJDK,AHLFxH,CPSD,AUJIwF,CVIHrP,EcHE,EPNP,CGKI,AICM,CdGN,AUJW,CHLD,CPSD,GUJOF,AICJ,CJDD,AXFvB,CAAwB,EWEQ,KAAK2N,CXFrC,EAAkC7N,GWEtB,EAAiC,KAAKG,CAAL,CXF7C,CeGI,CJDkD,KAAKX,MAA/C,EAHe,CAIf;AVIJ,AIDA,AQ/BR,ALuBY0K,AOMR,AbHH,CAPM,KMIKA,EOMFwH,CVEG5K,EGRI,EAAE,KHQX,AGTc,EOOA,CVEG,EACb,AUHa,GVGV,GUHgB,EVGXjB,QAAL,CAAciB,SADJ,YUFrB;AZJAjD,AFOK,AICG3D,AMJA,AHLA6D,AOMR,EZLAF,GFOM,CICE3D,AGTA6D,CHSC,CUHH4N,CVGK,CMJC,CHLC,EAAEjK,CPQV,AICWxH,CAAL,AMJMmM,CVGA,CEPF,AQIH,AHLO,CHSC,AGTA1E,ELCF,AEMG,AUDH,CJDK,CAAf,CVGH,AORU,AOMM,CJDK,AHLA,CPQApG,IcFC,EPNM,CPQ5B,CAA6BC,GORIlC,KAAvB,CPQ4B,AOVzB,IPU6B,ecF/C;AZJI,AFOIc,AICAD,AQjCZ,AF6BgBhB,AHLJgB,AOMR,MdEQC,AICAD,AGTAA,CHSC,AGTA,CLCD,AQIIhB,AICNyS,CZLG,AEQE,AGTA,EGKI,CVGD,AUHElC,CVGDrP,CEPDqC,AEQEvC,AGTAA,CHSL,AGZO,GHYE,AMJR,CRJR,AQImB,ERJF,AYKF,EVGMwG,CMJGzG,AICN,CJDC,GAAS,CVGxB,CAAwBsB,AcFJ,EVGR,CAAehC,AMJEyP,MVG7B,AICG,EJDgCjO,CICC,CMJhC,EAAqChC,CVGD,IAAI,UUHIQ,GICxD,GJDiD,GAAgB,EAArD;ARHJ,AFOI,AIHS,AMATL,ADAT,AFLKgL,AOMR,ANLG,KJIC,CKAK2D,AFLD3D,ACCC2C,EEIG3N,AICNgF,GZLOzB,AQIE,ADAZ,AFLU,CGKGgN,ADAD,CTGE3O,AORF,CAJG,ELKV,CMAY,CEIR,CRJS,AQIE,CFJA,GNAf,CFOI,AUHgBb,CVGCc,AUHN,CFJM,EEIG,EVGpB,GUHyBiO,AICnBjL,UJDK,GAA2B,AIC5C,EAAN,GJDuDsL,WAA3C,EAAwDtQ,eAAOQ,MAA/D;ARHJ,AFOC,AICL,AQnCR,AF+Ba,ADATe,AFLQ6J,ACCR,ECIA7J,IFLQ6J,ACCJhK,CRKI,AUJA,ENOCF,CAAL,CFRSyC,CMAH,CJQG,AMJE,ADAJ,ADJAgI,CJQP,AKJQoD,EFLM,CCCd,CDDgB,ACCJnD,CNAR,CAAc9G,GOIX,ADJP,CNAI,AMAckH,CNAKjH,AOIJiK,IDJnB,CNAI,GAA2B,AMAJ,CNAvB,AOIG,ADJX,ECIkCL,ADJA,UCIvB,EAAmC5I,KAAnC,EAA0CkJ,WAA1C,EAAuD5B,EAAvD,EAA2D;APHjE,AFOA,AICD,AQpCR,AFgCgBlN,ADAR,AFXc,AOYlBgF,ANLIlF,IAAAA,CNHA,AFMC,AOVD,GGWQE,CNIHgB,AKJAkM,CLIL,CFRO,AQII,ADAX,CCAYqD,AFJJ,CJQC1Q,AIRAE,CCICmN,EAAV,ECAQ,CAAW,KAAKnM,CAAL,CFJnB,CMKQqD,ANLe,CJQP/D,AMJY,KAAKyP,CNIxB,CIRT,CMKJ,CVG6BnP,AUHP,ANLeiN,MEIzB,CICZ,CJDiD/N,CFJ7C,GAA6CoB,MAAM,CAACuK,CJQ3C,GAA+B,AMJYnL,AFJP,CAAYoL,IJQZjE,CMJrC,AFJqC,CAAkBqE,KAAlB,EJQL,CAAexL,AIRgB,CAAvE,KJQS,GAAuD,CAAhE;AFPI,AFOP,AICG,AQrCR,AFiCa,ADAL,AFLH,ACCGP,IAAAA,GENmB,CAWf,CNGC8H,AKJA7G,CAAL,CPJSwC,CMAD,CCICqL,ADJA7O,GNAL,GAAa,GOIjB,CLIA,CFRI,EEQkB,AIRtB,CAAuB,QAAvB,EAAiCqN,SAAjC,CAA2CG,MAA3C,CAAkD,QAAlD;ANCI,AEQA1F,AQtCZ,AHkCQ,AKCJ,ANLC,MJQOA,EUHFuD,CLDGpK,CAAL,CPJSwC,CEQC,CKJDqL,CLIG,AUHJ,GAAG0D,EZLP,AEOkB,CFPJ5N,EOIA,EPJd,CAAmBC,AOIF,EAArB,EKCuB,CZLnB,AYKoBwJ,GZLO,CAA3B,QYKO,CAA0BzC,MAAM,CAAC+G,QAAP,CAAgBtH,MAAhB,CAAuBuH,YAAjD,CAAf;AZJK,AFlC4B,AI0CzB7K,AQvCZ,AHmCQ,AFNJK,AOOA,ANLH,CALM,CDGHA,IHUQL,AGVJ,CAAC9H,COOC4S,CLDG3K,CFNL,EAAM,CEMN,AKCO,CVGK,EAAE,AKJF,AKCFuK,CVCY,AKFtB,WKCsB,CAAC5B,YAAb,CAA0BjF,MAAM,CAAC+G,QAAP,CAAgB3B,MAAhB,CAAuBf,cAAjD,EAAiErE,MAAM,CAACkH,MAAP,CAAcC,WAA/E,CAAd;AZJC,AEQOvM,AQxCZ,AFmCY,ADCJ,AFNA,AOOJ,MVGQA,AUHJ+F,EPPI,CEMCkC,AFNA,CGKG,CNKC,EAAE,AUHJ,CVAe,AGPZhE,CGKG0C,CIEH,CJFF,CIEZ,CLDI,AK9BgC,CPwB5B,AOSR,CJJuB,CDCDsB,EFNE,CAAC,CGKGwB,IHLEvF,EEM1B,QCDmB,GAAsB,CAArC,CHLJ,CGK4C,CHLD;AHWvC7E,AQzCZ,AFoCgB5F,ADCR,AFNI,MHUA4F,EMLI5F,CDCH+O,ELII,AMLE,AHLF3H,CGKGmJ,CNKD,GKJX,ELIgB7J,AMLR,CAAW,ADCJ,AFNX,IAAiB,CGKG3F,ADCxB,AFNI,CGKe,CNKR,CAAcgH,CMLG,CAAC,KAAK5H,KAAf,GAAuB,KAAK2P,UAA5B,GAAyC,KAAKK,WAAzD,EAAsEtQ,eAAOQ,MAA7E;ARHZ,AEI0B,AQrC9B,AFqCgBL,ADCR,AFNIA,AOSRH,KVJI,CGLIG,ELCF6E,AQIM7E,CDCHgP,AFNE,CAACvG,CGKG,CAAC8H,KDCZ,AKGGrP,CJJK,CAAW,AHLf,CEMY,AFNE,CLCtB,GAAsB,AQIMH,ADCxB,CCDmB,AHLIA,CAAL,EGKU,CHLD,IGKMZ,AIIrC,CPToCA,AOSZ,IJJD,CHLQ,EGKc,CHLD,CAApC,EAAuC,AOS/C,CJJkD2P,CIIb7M,CAAC,EPTcjC,CAAL,COSL,EPTc,EGK5C,EAAkDnB,CHLDQ,MAAL,GAAc,CAA9D,IGK6DA,MAAP,GAAgB,EAAlE;ARHR,AESA,AQ3CR,AFsCa,ADCL,AFNIL,AOSJ,ANTD,MDAKA,ACAC6N,CEED,ENQC7F,AKJA8G,AFNE,CLCDhK,AKDE9B,GGKG,GHLP,CLCS,AKDE,ACAC,CNCF+B,EOKd,ADNmB,CNCb,CAAY,AKDEtC,CLEhBuC,AOIe8J,GLInB,AIVyB,GJUA,EGVrB,GLEW,AOIf,CPJgBpL,AYOJT,CAAZ,EAAe,CAAC,GAAGqJ,EZPf,CAAsBrH,IYOX,CAAf,EAA6B8N,MAAM,IAAI,MZPnC,CADc,EAEd/N,WAAW,CAACtB,SAAZ,CAAsBwB,eAAtB,CAFc,EAGdF,WAAW,CAACtB,SAAZ,CAAsByB,qBAAtB,CAHc,EAIdH,WAAW,CAACtB,SAAZ,CAAsB0B,eAAtB,CAJc,CAAZ,EAKHvB,IALG,CAKE,CAAC,CAACwB,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,CAAD,KAAqC;AACzCR,AEIA6C,AMLI7H,ADCR,AFNIA,AOSA,ANTRF,EAAAA,INMQkF,AEIA6C,AGVA7H,EGKIA,CDCHG,AFNE,CAACsI,AOSAsK,ANTJ,CEKO,AFLNhT,CJUK,AMLEwQ,ENKA,AKJZ,EKGI,CZHW,AOAF,CPAGtM,AQDR,AIIQ8O,CVAS,AMJN,AHLf,CEMJ,AFNkB,CAAC,GGKKhS,AIIF,ANT1B,CEKuB,AIIImC,ANTJ,CNMf,AKNoBnC,CLMC,AKNP,CGKU,EHLA,EOSZ,CJJiBZ,AFLrC,EDAqCA,AOS7B,ANTyByN,CNMzB,EAAgCvI,AQDjB,EHLS,AOUnB,CJLgC,EHLA,CAArC,ACAR,CNMQ,CQD0CyK,AHLF,CAAC,ACAJ7O,KDASD,CAAN,ACAG,CAACwK,EEKxC,AHL8C,EGKI3L,AFLjB,CAAY4L,EDAMpL,GCAlB,CAAkB6L,EDAL,GAAc,ACAxE,CDAQ,EGK6D7L,MAAzD;AREJ2E,AEIA8C,AQ5CZ,AFuCa,ADCL,AFNI,AOUI7G,ANVf,CAFM,KNQK+D,AEIA8C,CMtBe,CAkBf,AIII7G,CLJHZ,EFNIiI,GHUG,AUAE,CLJd,AKIekD,CVAD,CFJC,AEEU,CFFTvH,AOAF,CFNV,AOUI,CPVUjE,AOUEyL,CLJpB,EFNI,EAAoB,AOUhB,CZJJ,AYIsBnE,CZJD,KYIjB,GZJJ,AKN6BiB,AOUE,CAA3B,CZJ2BjD,EKNE,CAACkD,GLMlC,EKN6B,CAAW,KAAKpB,QAAL,GAAgB,EAA3B,IAAiC,KAAKV,QAAL,CAAcL,SAAd,CAAwB4B,IAAK,EAA3F;ALOAjD,AEIAuB,AKJJ,AFNIvG,AOUC,MZJDgF,AEIAuB,AGVAvG,GEMCiP,AFNE,CAACpG,CHUC,EAAE,CAHc,GFDV,CAAC5E,AOAhB,GAAiB,CFNb,CAAiB,CAAjB,ELMA,AKNoB,CLMC,AKNrB,EAAuB,CAAvB,EAA0B,CAA1B,CLMA,CKN6B,CLMCsB,AKN9B,EAAgC,CAAhC,ELMA;AACAP,AEIAiD,AQ9CZ,AH0CYlH,AFNA,AOUA,MZJAiE,AEIAiD,AKJAlH,CAAC,EAAE,CLIC,CGVCoJ,CHUC,EKJEpJ,CAAL,EPAQ,CAACkD,AOAA,KAAK9D,EFNjB,CLMA,CAAqB,COAT,GAAa,CADZ,EPCb,EAA8BqF,KAA9B;AACH,AEDwB,AQ1CjC,AFyCYxF,ADEAgB,AFNH,AOUG,KZdE,AESN,AGbA,CLIA,AQQIhB,ADEAgB,CAAC,ECFE,ADEA,CCFCuP,CHJD,GEMKvP,CAAL,AFNI,CGIP,CAAW,CDEC,EFNAyJ,EGII1J,CAAL,ADEMV,GCFG,EIMPkC,CLJD,ECFapC,CDEC,GFNvB,CGIQ,CHJkB,AOUP,CPTzB,AOS0BmH,CJNU,AHJ9B,KGImCoH,AIMtC,CPTG,KGGH,EAA8C,KAAK1N,CAAL,GAAS,KAAKX,MAA5D;ARGP,AEIG,AQhDR,AF0CYL,ADDa,AFFbA,AOSH,ANZF,KCKC,AKAA,CJCIA,AHHAA,ACHC8N,GJYA5F,AMNE,AHHA,CGGCsI,AHHA/H,IHSR,IIZiB,CEMb,AHHA,CAAc,CCHE,IDGG1H,CAAL,CCHQ,EDGC,KAAKZ,KAAL,GAAa,CAApC,EAAuC,KAAKa,CAAL,GAAS,KAAKX,MAAL,GAAc,CAA9D;AHUP,AQjDL,AF2CYL,ADEJ,AFLIA,AOSJ,ANZJ,MEMQA,AHHAA,ECHFsH,CEMK,ADEF1B,AFLE,CGGCkD,AHHA9F,IEKR,ADRQ,EDGJ,CEKS4C,AFLE,ACHJ9F,CDGK,CGGZ,GAAgB,ADEpB,CFLqB6K,ECHF,CAAC5K,CEMK8P,KAArB,EHHW,COSH5M,CAAZ,CPTmCsF,COSpB,CAAC,ANZL,CAAuB,CDGK,CAACa,AOSrBwJ,EPTf,GOSW,EAAW,ANZf,CAAf,EMYiCxH,MAAd,CAAf,EAAsC2H,MAAM,IAAI;AZhD/B,AUDzB,AF4CY/S,ADEJ,AFLIA,AOSA,ANZR,MEMQA,AHHAA,ECHF+N,CEMK,ADEFmB,AFLE,CGGCuB,AHHAhI,AOSAsK,IJNJ,EIMA,EAAYA,ANZJ,CDGR,CAAc,CAAC,ACHJjT,GMYO,CAACoD,CPTCnC,CAAN,EEKlB,ADRuB,CDGK,ACHJhB,ECQI,AKIZ,CLJhB,EFLiCI,KAAL,GAAa,ACH1B,CDGX,ACHkC,EDGM,CAAC,KAAKa,CAAN,GAAU,KAAKX,ECH5C,CAAnB,GDG0D,GAAc,CAAhE;AHSR8H,AQlDJ,AF6CS,ADED,AFLInI,AOSH,ANZLsH,EJWAa,AIXAb,GMUI,CVCA,AGRItH,CHQHA,CIXC,CCQGmP,AFLE,ACHJvB,CJWH,AGRQjF,EHQF,MIXV,CDGQ,CEKJ,AFJQ,CCJOJ,ECQIiG,EFJN9H,ACJM,CAAC8B,KAAL,CAAW,CCQG,AFJrB,ACJmB,CCQG,AFJR0C,GCJSjK,ECQIgH,IAAN,ADRQ,CCQrC,ADRsCuD,CDGlC,EAEI,CCLuB,CAAYC,GDK9B1K,CAAL,CCLuB,CAAkBuG,CDKhC,EAFb,EAGI,CCNuB,GAA2B,CDM7CtG,CAAL,CCNkB,EDMT,ECNgD,EAAlD,CDMOX,GCNiD,EAA3E,CDGQ,EAII,KAAKF,KAAL,GAAa,EAJjB,EAKI,KAAKE,MAAL,GAAc,CALlB;AHSJ,AQnDR,AF8CK,ADEG,AFCIL,AOGP,GAZD,GPSQA,GHEC2H,AKHAyH,AFCE,CAACvG,QHER,GAAiB,CGFb,CHGA,AGHiB,CAAjB,CEDJ,CLIO,AGHiB,CAApB,CEDoBiG,CFCG,CAAvB,CHGQnH,CGHkB,CAA1B,EAA6B,CAA7B,EAAgC,CEDD,AFC/B,CHEa,AKHmB,KAAKM,IAAN,CAAnC;APDD,AEMKG,AQrDZ,AHiDQ,ADTJ,MNOSpD,AEMDoD,AIbJnH,GCSKqK,GDTC,CAACE,INOS,AMPhB,CAAYC,CJaK,CFNE,CEMA,EIbnB,CNOuBtI,AMPLmE,ECSlB,GAAyB,CDTzB,KNOmB,AMPU,CAAjC,CNOG,CMPiC;AJcxBvG,AQtDhB,AF+CI2P,ADGQ3P,AFAA,AOIR,ANbIgN,EEMJ2C,EFNI3C,ECSIhN,CAAC,CLIGA,AUANiS,CVAO,AKJF,CCHH,AHGI,CHIG,AMPNhT,GAAD,ADGQiP,ADTF,CDSGnE,ACTFsC,CJaKrM,AMPN,CNOC,AUAA,GVAS,AUAN,CPJN,CAAYgK,CEAb,CAAehK,ADTtB,CJayByG,AKJlB,ADTc+F,CMaD,CPJhB,CEAsB,CFAC,ECT3B,CAA4B,CCSG4B,CLIX,CAAehP,KAAf,AIbpB,GJa2C,CADxB,AKHO,CAAiBA,KAAjB,GAAyB,CAD1B;APDjC6E,AEOgBhE,AMPRhB,ADGIgB,AFAI,AOIRC,ANbAqG,IEMAtH,AIOAiB,ANbAqG,ECSItG,CCHD,ADGE,CLIGA,AMPJ2H,CNOK,AKJF,CKID,ANbA,CNMH,AEOQ,AUAJ6C,ANbA4B,CNMH1I,CKGSyG,CEADnK,CAAL,AKIP,CVAgBA,AUAJyK,CVAD,AMPX,CAAc,ADGE,ELII,AIbpB,CMaA,ANbiB8B,CMaCyE,CJPCpM,ADGEuJ,AFAb,CAAgBnP,GLHhC,AKGgB,ACTR,CEMA,AFNwB,EEME,IDGV,AKIhB,CJP+Be,ADGEV,CCHjC,CIOiCY,CJPC,GDCT,ECDcD,AIOA,CJPvC,AIOwCwK,EJPE,AFN1C,EMaiC,CAAYC,EJPEtL,GIOd,CAAkB0L,CJPnD,EAAsD,EIOtD,GJP2DxL,MAA3D;ANKmB,AQpD3B,AFgDK,ADGOF,AFAC,AOILc,ANbAqG,IMaArG,ANbAqG,ECSInH,CLDa,GUKX,ANbA,CCSG,AKIFqL,ANbAwC,ECSI,EKIX,CAAYvC,ELJI0D,GKIhB,CAAkB+C,ANblB,OCSW,CAAiB/R,IKI5B,CLPyB,EKOQ,KAAjC;AVCIY,AKJAV,AFAH,AOIDY,ANbAqG,IMaArG,ANbAqG,EJaIvG,AKJAV,CLIC,EAAE,CUAD,ANbA,CMaCmL,ANbA4B,CCSG,ELIErM,AKJA,CLIL,AUAP,CAAY0K,EVAI,CKJC0D,CLFA,AIPjB,CMaA,ANbiBlB,CMaCvC,ENblB,CAAqB,KCST,CAAiBrL,IKI7B,GAAkC,CAAlC,INbA,EAJgC,CAKhC;AJaIW,AQzDZ,AFiDImH,ADD6B,AFK5B,AOIGmE,ANZH,EEIDnE,CFVA,CMkBImE,CLTA,CLSItL,AMRJ,CNQK,AMRJhB,ENQM,AIZJ,CEIH,CIQO,CJRD,ENQMgB,AUAF,CVAH,CUAP,EVAgB,KAAKwG,SAAL,CAAenH,MAAxB,IAAkC,KAAK6G,IAAL,GAAY,GAAZ,GAAkB,GAApD;AAPU,AQlDzB,AFkDQ,ADIA,AKIH,ANZG6G,GMOJ,CNPIA,CJIA,IMAK2C,ADIArB,KDRK,CAACjC,EEIX,CAAcpN,GAAd,GFJA,CCQA,ADRqBiO,GAArB,CAAyB,QAAzB;AJaAjO,AQ3DR,AFmDQ,ADIH,AFDDmK,ACPC,EDODA,EHKInK,GAAG,CAACqI,CMRC+H,OHGK,EGHV,CNQA,AMRe3P,AHGF,GHKK,KAAlB,CAVM,CAWN,KMTA;AEnDR,AFoDK,AHGG,AOKJ4R,ANZH,CAbM,CMyBHA,KAAK,CAAC5N,CPLGiC,IOKT,IPLI,CAAc0E,MAAd,CAAqBhJ,OAArB,CAA6BiJ,KAAK,IAAI;AHMtC,AQ7DR,AHwDIlD,AFAQ,AOKRgK,ELLAhK,AKKAgK,ILLI,CAACnS,ELKIsI,AUAF,CLLH,AFCQ+C,AOIJ+G,ELLE,CKKV,CAAY,CPJK,CAAC9G,CHId,AUAJ,CVAkBtL,CUzDkB,CA2DpC,CVFI,EAAoB,QAAOuI,EGJnB,CAAwBxH,CHID,AGJvB,CHIwByH,EGJI,GHIT,CAAW,CGJGzH,CAAL,GHIOqG,AGJE,KAAKjH,GHIZ,EGJ9B,CHI8C,EAA3B,CGHnBkL,GHGoD,EGH/C,CAACC,EHGmD9D,SAAL,CAAeC,KGHnE,CAAwB1G,CAAxB,GAA4BsK,KAAK,CHGmB,AGHlBC,CHGkDrD,IAAK,EAAjG,EAZM,CAaN,OGJoC,CAAwB9H,KAApD,GAA4D,KAAKY,CADjE,IAEAsK,KAAK,CAACC,iBAAN,CAAwBtK,CAAxB,GAA4B,KAAKA,CAAL,GAAS,KAAKX,MAF1C,IAGAgL,KAAK,CAACC,iBAAN,CAAwBtK,CAAxB,GAA4BqK,KAAK,CAACC,iBAAN,CAAwBjL,MAApD,GAA6D,KAAKW,CAJtE,EAKE;AK7Dd,AFqDIkC,ADIIlD,AFKQqL,AOEZ,EJXAnI,EDIIlD,GAAG,CAAC2I,AFKI0C,CGTL,GAAG,CHSO,CAACE,GELd,CAAc,EFKN,GELW3F,KAAnB,EAA0B,KAAK7E,CAA/B,EAAkC,KAAKC,CAAvC,EAA0C,KAAKb,KAA/C,EAAsD,KAAKE,MAA3D;ALMAL,AQ/DR,AFsDQ,AHSQ,IHARA,GAAG,CAACyI,AMTA,CAAC,IHSQgC,CGTHD,GNSV,CAAc,EMTd,EAAkB,CNSC7C,KGAX,GAAuB,CHAjB,CAAeS,EGArB,WHAM,CAA6BrH,CAA3C,EAA8C,KAAK4G,SAAL,CAAeS,aAAf,CAA6BpH,CAA3E;AACAhB,AQhER,AFuDYgF,ADGJ,AFMQ/D,AOCZ,ANfG,IJcCjB,EIdKkO,CJcF,CAAClL,AKNA,AFMI/B,KENC8N,CLMT,AGAc,CHAH,AGAIvD,IAAP,CHAQ1E,AKNhB,AFMoB2E,EENF,CDRI,EJctB,AGAQ,CAAkBC,ACdD,KEKTtH,CFLe,ODcvB,CGTJ,CAAsB,EHSiB,CAAnC,IGTJ;ANUJpE,AQjER,AFwDS,ADGGA,ADRRF,EAAAA,EJcIE,EKNIA,CLMD,CAACyI,CKNG,CAACE,ADRJ,CAAC5I,MJcL,CAAc,CAAC,AKNX,CACI,ILKY4H,AIdxB,CCSiByH,ADTM,QJcJ,CAAehH,OKN1B,ADRR,ECUY,ADV6BgF,IJctB,CAA6BrM,AKJ/BuK,CLIb,EAA+C,CAAC,AIdpD,CAAmD2C,GAAnD,CJcyDtG,AIdF,QCU3C,ADVZ,CJcoD,AKJjB5G,CLIgCqH,AKN3D,EAGI,KAAKkD,MLGmC,CAA6BtK,CAA7E,SKHQ,CAAuBA,CAH3B,EAII,KAAKsK,iBAAL,CAAuBnL,KAJ3B,EAKI,KAAKmL,iBAAL,CAAuBjL,MAL3B;ALOJL,AKAC,AFDO,AOEZ,ANfH,CAFM,GJgBCA,GAAG,CAACqI,AUCF4K,IPDUhS,IOCF,EPDQ,CHAlB,AGAmBuK,AOCN,GVDK,CGAN,CAAYC,COCL,IPDP,CAAkBC,GHA9B,UGAY,KACAzK,MAAM,CAACuK,IAAP,CAAYG,MAAZ,CAAmBC,MAAnB,CAA0B3K,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA5C,EAAmDC,eAFvD,EAGE;AHDV,AQlER,AFwDQ,ADUH,AFEe7K,AODZjB,SVDK0I,AMVA8B,CHYOvJ,KGZZ,CHYkB,AODdiS,CPCe1H,CGZL,GHYF,CGZZ,AHYwBC,KAAZ,CAAkBI,CHF9B,IGEY,OODZ,GAA+B,QAA/B;AVAA7L,AMVH,AHYY,AOATsS,IVFAtS,AUEAsS,GVFG,CAAC3J,CUEC,CAACR,IAAN,CAAWnI,EVFX,CACI,KAAKkH,GUCT,CVDI,GAAY,KAAKS,SAAL,CAAeiB,YAA3B,GAA0C,KAAKjB,SAAL,CAAe/B,KAD7D,EAEI,KAAK+B,SAAL,CAAe5G,CAFnB,EAGI,KAAK4G,SAAL,CAAe3G,CAHnB,EAII,KAAK2G,SAAL,CAAexH,KAJnB,EAKI,KAAKwH,SAAL,CAAetH,MALnB,EAnBM,CA0BN;AQ1ER,AHmEIiP,AFGS,AOCL/M,ELJJ+M,EKII/M,ELJA,GAAG,IKIM,CAACwG,IAAV;AVIA/I,AQ3ER,AFFmB,ADsEX,AFGC,AOEDsM,IVEAtM,AUFAsM,CPnBA,EHqBG,CAACzD,AKPA,GKKG,CAACzG,CLLC6F,IAAL,EKKJ,CVEA,AKPgB,AKKAkL,CVEC,CAAjB,EAAoB,CAApB,AKPqBrE,CKKC,CVEC,CAAvB,EAA0B,AUFA,CVE1B,EAA6B,CAA7B,EAAgC,AKPhB,CLOhB,AKPiCtC,MAAjB,GAA0B,CAAtC,IAA2C,KAAKuC,OAApD,EAA6D;ALQ7D/O,AQ5ER,AHqEY,AFGP,AOEOmT,IVEJnT,EUFImT,CVED,CAACrK,GKPKb,CKKC,CAACE,ELLP,ELOJ,AUFI,CAAYnI,EVEA,MAAhB,CA5BM,CA6BN,CUHI;AVIP,AQ9EL,AHsEY,AKKH,KAFD,MLHSmP,WAAL,GAAmB,KAAKX,UAAL,CAAgB,KAAKvG,IAArB,CAAnB;AGtEZ,AHuEY,AFERkD,EAAAA,SEFaiE,CFEH,CAACpP,GAAD,EAAM,SEFR,GAAwB,KAAK8O,WAAL,CAAiB,KAAK7G,IAAtB,CAAxB;ALQRc,AQ/EJ,AF4DO,ADYK,AFEJ,AOGA,EVEJA,IAAI,AMnBK4H,EIiBD,CVED,AGLE7F,AOGA7J,ELLIqK,IFET,AOGW,CPHCtK,AOGAwK,CPHZ,CGdD,CAAmB,CIiBb,CPHY,AOGAC,KPHKX,AOGjB,CAAkBoH,CLLnB,GAAyB,CFEZ,CAAYlH,KAA7B,COGA,EAAqC;AVGrC,AQhFR,AF6DI5J,ADYYL,AFERf,AOGIiB,EJjBRG,EHcIpB,EOGIiB,CPHD,CEFKF,AFEJb,CHKC8G,AKPI,EAAE,CFEX,AOGU,CJjBH,AIiBIwE,CJjBH9E,CHcI,CEFIuI,CKKZ,CVEJ,AGLc,AOGExD,IVEE,AMnBX,CHcYtL,AOGf,CJjBc,AIiBI+R,CLLX,CAAenR,CLOHkG,AKPZ,CFEG,EEFgB,CFEH,EAAG,CHK9B,CKPmCkI,CKK/B,GAAiC,IPHrC,AOGI,GLL0B,CAAiBhP,KAAjB,GAAyB,CAD1B;ALS7B,AQjFR,AF8DQ,ADYQa,AFERhB,AOGI,IPHJA,GAAG,CEFKgB,AFEJ8H,CHKC9H,AMnBA0F,ADYI,CLOT,CKPW,GLOD,EKPM1F,CCZhB,ADYW,AFEX,EHKegG,CMnBCN,ADYI,AFEJ,KEFSyI,EFEzB,CHKA,AMnBA,QDYoB,CAAiB9O,MAFR;AGxErC,AF+DK,ADYWF,AFERH,AOGC,IPHDA,GAAG,CEFKG,AFEJ4L,KEFS,EAAE,EFEf,GEFoBoD,AFEJ,QAAhB,GEFe,CAAiBhP,KAHH;ALW7B,AKPQE,AFERL,IAAAA,GAAG,CHKC,AKPIK,AFEJ2L,KHKKhL,CAAL,AKPU,EAAE,AFEhB,CHKa,AGLAuH,IEFQ4G,AFEJ,CHKC3H,AGLAgB,KAAL,CAAW,GHKX,CAAenI,AKPZ,CAAiBA,AFEJyK,KHKzB,CGLoB,CAAYlG,EHKEhE,GGLd,GAAoB,KAAKkK,IHKjD,EAA+C,AGLH,CAAYG,UAA3C,CAAb,EAAqE,KAAKlK,CAAL,GAAS,KAAKZ,KAAL,GAAa,CAA3F,EAA8F,KAAK2K,MAAL,CAAY9J,CAA1G;AHMI,AMnBR4P,ADOiC,AKU7B,EJjBJA,KDOQ,CKUAjF,GVEK3K,CAAL,EMnBI,AIiBE,CVEGJ,AMnBJoP,AIiBE6C,MAAP,CAAcO,OJjBV,EAAiBvC,AIiBrB,EVEmB,EUFQwB,CJjBvB,ENmBoB7K,AMnBI,EIiBI,CAACkK,MVEd,CAAerR,MAAlC,CUF2B,EAA/B,EAAuD;AVGnD,AMnBJ,ADYC,AFCD,AOIIY,MAAAA,EPJA,EGbE,CNmBG0F,CUFC,CPJDmE,AOIEU,IAAP,CAAYC,CPJZ,CAAYzK,CHMZ,AGNA,EOIA,CVEkB,AGNF,AOIE6K,CPJtB,EAAuB,CHMnB,CUFA,GAA0B,CAA1B;AVGA,AMpBI1L,ADaX,AFCO,AOIA,MJlBIA,KNoBC6G,AMpBH,AHcG8D,MAAL,CAAYC,EHMZ,GAAiB,AGNjB,GHMA,AGNoB,KAApB;AHOH,AMrBc1K,AHed,AOIA,MJnBcA,MAAT;AAAiBuF,ADc3B2F,AFEC,EEFDA,ICd2B3F,EDcrB,GCdI,ADcD;ALSL,AMvB8BiK,ADe9B,AKMA,MJrB8BA,ENuB1B,AKRA,AKMA5O,GJrBE,ENuBGwB,AKRAwF,CKMC,CAACuD,ELNP,EKMA,CLNY,AKMAC,CLNZ,CLQA,CAAe9I,EKRE,AKMjB,CAAkBkJ,CVEtB,EAAyB,CKRCkD,CKMtB,KAA4B,CLNhC,AKMI,ELN+B,EKME9N,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBuG,YAAlB,KAAmC/Q,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AVG7F,AMxBiCiE,ADgBjC,AFCRxH,AOKQ,EPLRA,IGjByCwH,INwB7B,AGPJ,AOKI7O,CLNCgH,AFCJjI,GAAD,CHOSe,AKRT,CLQI,AMxBF,AHiBImD,AOKI,CAACsH,EVEE,CAAb,AGPA,COKI,CVEY,AGPJ,AOKIC,KAAZ,CAAkB8D,YAAlB,IAAkCnE,MAAM,CAACoB,MAA7C,EAAqD;AVGjD,AMzByCsE,ADiB7C,AFCJ,AOKQ,MJvByCA,IHkB3CvK,CEDG4I,CKMG7C,CVECvL,CAAL,CGPG,GHOO,AGPJ,COKK,CAACyL,ELNhB,CLQmBzF,AGPJL,EEDI,CKMX,ILNgB8H,AKME,CPLhB,AOKN,CVEA,AGPoBnI,COKK,OLNV,CAAgB,AFCzB,CAAwBnE,GAAxB,CED8B+F,AFCF/D,IEDnB,AFCT,CEDV,AFCJ;AHQQ,AM1BF,ADkBF,AKMQoI,QJxBqD,EIwBrDA,CLNH8C,ELQIhI,AM1ByDV,IIwBnD,GAAG+L,CVEd,AM1BR,IN0ByB,EKRrB,GLQ0B1L,AKRF,GKMO,CAACsF,CLNHyC,ILQzB,OKRoB,CAAiB,AKMvB,CACN7N,ILPkCgH,EKO5B,CAACuD,CLPK,CAAxB,EKOY,CAAYG,MAAZ,CAAmBC,MAAnB,CAA0B,CAA1B,EAA6BE,eADvB,EAENvJ,SAFM,EAGN6I,MAHM,CAAV;AVGP,AM1BL,ADkBI,AFAJ,AOUS,QPVL7E,EGlBEwK,CDkBGzF,EFAT,EAAW,CGlBC,GAAG,EAAf,ODkBI,GAAyB;ALS5B,AM1BD,ADkBQvK,AFAJf,AOUC,KVPL,CGHIA,EEAIe,CAAC,AFAF,CGlBD0N,AHkBE9F,CHQD,AKRI,ILQA,CKRKsG,EClBF,CHkBV,CHQYxM,AGPR,CGnBStC,IDkBN,AFCEuG,CGnBS,ADkBI3F,CAAf,ELQA,AM1BciP,CN0BCtN,AKRI,GFCtB,CAAckD,CHOf,AKR4BuJ,ELQF,EGR7B,EAEI5I,EGpBS,GAAyBuK,ADkBZ,AFEjB,CEFkC3Q,AFEjCY,CAFV,EAGIwF,EEHsB,GAAyB,AFG1C,CEJgB,AFIfvF,CGrBuC,AHkBjD,EAIIuF,EGtBiDyJ,GHsB5C,CAAC7P,KAJV,EAKIoG,GGvB+D,EHuB1D,CGvB6D,AHuB5DlG,CGvBuC,CAArD,IHkBI,EAMK,KAAKU,CAAL,IAAU,KAAKgG,SAAL,GAAiB,CANhC,EAOK,KAAK/F,CAAL,IAAU,KAAKgG,SAAL,GAAiB,CAPhC,EAQI,KAAK7G,KART,EASI,KAAKE,MATT;AHSA,AM1BJ,ADkBQW,AFUP,QEVOA,CAAC,CLQD,AM1BF0N,CDkBK,ILQE3N,CAAL,AM1BI,ADkBIC,CAAL,ELQMnB,AM1BF,CAACA,ADkBI,KAAKsP,SLQDhP,CM1BDA,CDkBH,CAAiBE,ELQpB,CM1BD,EN0BgB,CM1BDoO,ADgBF,ILUQ9G,IM1BtB,IAA4B,CN0BX,AM1BhC,CN0B+CxH,KAA3C,EAAkD;AAC9C,AKRAA,AFUX,AODO,QLTIA,EKSA,CAACc,EVDIF,AKRA,CLQL,CKRO,EKSA,CVDG,AUCFyK,ELTI2D,EKSX,CVDcpI,AUCF0E,KAAZ,CAAkBsG,ELTZ,CLQP,AKRwB5R,KAHH,EKYzB,EAAmC;AVA/B,AM1BR,ADkBQE,AKSAY,QLTAZ,AKSAY,CJ3BH,IN0BQmG,AM1BJmF,CAAC,ADkBI,AKSA,CAACf,CLTC,CClBH,CAAb,CI2BQ,CJ3BQe,AI2BId,CVDZ,AM1BS,ADkBI0D,GClBDa,CN0BK,AUCjB,CAAkB+B,IVDIhL,EKRd,CAAiB1G,GKSzB,EJ3BR,CN0BQ,AUC+B,CJ3BHkM,CAAC,EAArC,AI2BQ,EJ3BiC;AN2BpC,AM1BD,ADayB,AFcjCrJ,AOAYkI,EPAZlI,KEdQ,CKcIkI,CPAL,GG3BO2E,AH2BJ,EOAQ,CAAC3N,GJ3BC,GAAGmK,CAAC,AI2BZ,CAAelB,EJ3BAwF,GI2BK,EJ3BxB,EI2B4B;AVA/B,AM1BG,ADkBH,AFSD5P,AOAY,IPAZA,CHNO,AKbP,KFmBM,CHDC,AKRA,AFSAuK,CG3BGwF,EI2BM3F,CPAhB,CAAYI,CG3BG,EI2BM,CJ3BH,AI2BIuD,CPAtB,CAAkB1H,EG3BIsI,IH2BtB,AOAY,CJ3BM,CACVrD,AI0BwB,CJ3Bd,CH2BU,CGzBpBmC,AHyBR,MGzBc,GAAG,CAACvO,KAAK,IAAIoM,CAAC,KAAKyD,cAAN,GAAuB,CAAvB,GAA2Bc,WAA/B,CAAN,IAAqDvE,CAFpD,EAGV,CAHU,EAIVpM,KAJU,EAKVE,MALU,EAMVuF,KANU,EAOViK,KAPU,EAQVC,UARU,EASVC,MATU,EAUVC,cAVU,CAAd;AN2BA,AMfAe,ADOA,AFSJ9P,AOAgBoK,IPAhBpK,EGhBI8P,INeI,AGCF,CETG9I,AFSFuD,CGhBG,AIgBMH,CJhBLoB,ENeEpF,AKRT,AFSJ,CAAYoE,CGhBR,AIgBiB,CJhBLuF,ADOA,AKSMvB,CLTL,CLQb,AKRA,CFSJ,CHDoB,AGCFxD,CGhBd,INeqB7E,KUCT,GVDI,GAAgB,CAAhB,CGCpB,IAAwC,CAAxC;AHAC,AMfA,ADOG,AFSJnG,AOAgBoK,IPAhBpK,MAAM,CETG8N,AFSFvD,COASH,GPAhB,CAAYI,COAS,CLTjB,AKSkBuD,GLTH,AFSnB,CAAkBtD,IETd,AKSY,GAAiB,KAAjB,CPAhB,IAAmC,CAAnC;AERC,AFSD,AOAa,SPARZ,MAAL,CAAYG,UAAZ,GAAyB,IAAIhK,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBnE,MAAlB,GAA2B,GAAxD;AHDA,AMdA,ADOH,AFSGrG,AOAS,IPATA,IHFI,CUHI,CPKF,CGhBC8P,AHgBAvF,EHFE/I,EGET,CAAYgJ,CGhBZ,IHgBA,CHFI,AGEcS,CHFCtJ,IGEnB,GHFA,CGE2B2F,CHFC,GGEG,CAACC,KAAL,CAAW,KAAKsC,MAAL,CAAYlG,KAAZ,GAAoB,KAAKkG,MAAL,CAAYG,UAA3C,CAA3B;AHDI,AMdP,AIgBQ,UVFG,KAAKtE,UAAT,EAAqB;AACjB,AKRZzD,AFSI,AOCC,ELVLA,GKTI,GPkBIjC,CETD,EKUI,CLVD,CLQO+F,CGCH,CAACwE,AOCAvK,IPDP,CAAYwK,COCC,CVFT,AUEUD,GVFO,AGCrB,CHDsB,AGCJlE,AOCX,CAAYmE,GVFf,EGCJ,AOCO,CAAkBI,EPDE5K,GOCpB,GPD0B,CAACuK,COCC,CAA5B,EPDoB,CAAYC,COCCxK,IPDb,CAAkBkL,COCC,CAACX,IAAP,CAAYC,KAAZ,CPD5C,AOC8DuG,EPDE,UOCpB,KAAmC/Q,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AVDhG,AM7CU,ADqClB,AFSI5K,AOCA+R,MPDA/R,AOCA+R,GLVC1D,GFSK,CHDG3I,AKRb,AFSW6E,EOCE,EPDT,CAAYC,KHDR,AGCJ,CAAkBU,EHDI,KAAlB,MGCJ,GAAkClL,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBnE,MAApD;AHAC,AKRR,AFSI,AOCG8D,MAAAA,MAAM,CAAChJ,OAAP,CAAeiJ,KAAK,IAAI;AVD3B,AUEOA,QAAAA,KAAK,CAACiE,IAAN;AVDX,AKTDnC,AFSInI,AOEK,ELXTmI,KKSQ,EAFoG,CAKpG,CLZC,GAAG,eFSI/I,SAAZ,CAAsB,QAAtB;AGhBD,ADQCnD,IAAAA,ECRKgQ,IDQC,CAACzF,IAAP,CAAYC,KAAZ,CCRqB,ADQH8D,GCRM,SDQxB,GCRoC,CDQF,CAAlC;ALSJjH,AMhBA,ADQI,AFQA,AOGIrH,EVHRqH,IUGQrH,EJnBFyF,CDQGqI,AFQAvE,CHAD,CAACxK,CUGK,CAACwL,CVHP,CGAJ,CHAUtH,AMhBA,ADQV,CKWI,CPHU,AOGEkH,CJnBH,ADQE,CLQX,EAAY,AGAhB,CERA,CKWI,CJnBe,EImBMA,MAArB,mBJnB4B,OAAb,CAAvB;ANiBI,AMhBJ1E,ADQI5G,AFQA,AOGIwM,EJnBR5F,EDQI5G,EKWIwM,EVHA,CGACxB,CGhBD,CAAClF,CDQG,CLQCe,AKRA5G,AKWE,EPHX,CGhBJ,AHgBgBgL,AOGE0H,GJnBD,EHgBb,EHAA,CGAoB,CHAC,AMhBF,CDQnB,CAAwB,CFQxB,COG2B,CAACpG,aAAd,CAA4BpL,KJnBbyF,CImBmB,CLXD,AKWE8E,IAAP,CLXU0B,AKWEvB,CJnBjB,CAAC9B,ADQiB,IAAvD,AKW0C,CAAmB+B,CLXD4D,KKWlB,CJnBvB,AImBiD,CJnBxE,AImB8C,ELX1C,AKWuE1D,GLXC,EAAxE,UKWc,EAA0EvJ,SAA1E,EAAqF6I,MAArF,CAAV;AVFA,AMhBR,ADQC,AFQG,AOGC,KARM,IJXJ,AHgBEN,EOGE,CVHGvE,CMhBHoK,EHgBP,AOGW1P,CPHCD,CHAG,AGAf,GHAkB,AGAF,COGC,CAACwK,GVHKhE,AMhBpB,AHgBkBxG,CGhBD0F,AHgBpB,AOGW,CAAY+E,KAAZ,CAAkBI,CVHX,AMhBf,CNgB8BpE,AMhBrC,GImBe,KAA4B,CAA5B,IAAiCxG,GVH1B,CAAgCiB,EUGA,CVHhC,AUGiCsJ,CVHGtH,GUGV,CVH1B,AUGsCuH,CVHpD,IUGwC,CAAkBuG,YAAlB,KAAmC/Q,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AJlB/G,AHgBO,AOGImH,CJvBL,KIuBKA,GPHCtI,MAAL,AOGa,GPHC;AHAV,AKRR+E,AFQoB1O,AOIZqK,ELZRqE,IFQoB1O,AOIZqK,CPJa,EAAE,CHAX7E,EUIE,CAACnE,CPJasE,CHApB,CKRM,CLQK,EKRF,CKYT,CAAe2E,CPJA,CAAc9I,GOIT,IAAI,EPJT,CAAwBoF,SAAxB,CAAkC5G,CAAvC;AHCNf,AKRRF,AFOwDkB,AOKhDqK,ILZRvL,EFOwDkB,CAAC,CHCjDhB,AUIAqL,CPLmD,EHChD,CAAC1C,AKRJ,CAAC5I,AKYI,CPLmD2G,AOKlD4I,IAAN,GVJA,CACI,AGF+C,CAAc/M,GEPzE,CLSiBiF,AKTO,KFOmC,CAAwBG,GHEvE,CAAeqB,KGFgC,CAAkChI,KHCrF,EAEIuF,CKVmC,ILU9B,CAACxF,AKVkCmM,CLQ5C,CKR+C,CLW3C,GKXZ,ELWiBhG,AKX2CkG,ILWhD,GAAY7G,EKXxB,CAAsE0H,ELWzC,CAACjN,AKX9B,CLWwB,AKXkD,GLWxCuF,KAAK,AKXvC,CLWwClG,MAA5B,GAAqCkG,KAAK,CAACvF,CAH/C,EAIIuF,KAAK,CAACpG,KAJV,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AKlBR,AFMiB,AOMT,KPNL,EHAI,AUIA,MVQO;AACHL,AGZR,AOMIsM,MAAAA,EVMItM,EGZF4G,CHYK,CAAC+B,CUND,GPNC,AOME8J,GPNC,EHYP,CACI,EGbQ1R,CAAL,EHaEyG,EGbQ,AOME,CAAC6E,IPNE3B,EHalB,CAAe1B,GGbF,CAAYjI,CAAZ,COMX,CAA4BE,CPND,GHYjC,EAEIsF,AGdkCG,AOME,CAAC8E,IVQhC,AURyB,CVQxBzK,AURoC4K,CVM9C,CGZiC,CHe7B,AGf2CpJ,GOMb,CAAmBqJ,CVS5C1E,IAAL,AGf6B,CAAwBS,AOMvB,CAA0B,CVS5CpB,AUTkB,EAA6BuF,GVS1C,CAAC9K,CAAN,AGfiB,CAAkCb,EHezCoG,GGfO,EHeF,CAAClG,AGf2C,CAApE,AOMD,CPNd,COMwFkC,GVS5E,GAAqCgE,GUTnC,EVSwC,AUT6C6E,CVS5CpK,CAH/C,EAIIuF,EUVE,CAAV,EVUa,CAACpG,KAJV,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AK7BTgP,AFOI,AOMC,ELbLA,GKOW,KPADxI,COMC,IAAI5F,CPNC,EEPA,CFOG,EEPA,AKaE,CAACuK,EPNExK,CAAL,COMJ,CAAYyK,EPNE,GOMd,CAAkBI,CPNCnB,IOMnB,EPNc,CAAY1J,CAAZ,COMc,CAA5B,CPN8B,GAA1B,AOM6BC,CPN5C,KOMkD,CAACuK,IAAP,CAAYC,KAAZ,CAAkBuG,YAAlB,KAAmC/Q,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AViBvG,AK7BD6D,AFOA,AOMIsD,ILbJtD,CLEA,CUWIsD,GPNCrI,EHsBE,AK7BA,CAAC6C,GKaK,KPNb,CEPA,EFOmBjF,EEPG,EFOC,CAACY,KAAL,CAAWvC,MAAX,EAAmBC,MAAnB,CAAnB;AHuBI,AUhBAuE,MAAAA,MVgBM7E,AUhBA,CAACnE,IVgBI,GAAG,AUhBd,CAAeiJ,IVgBI7D,CUhBC,IAAI,IVgBV,CAAeE,gBAAf,CAAgCxF,GAAhC,CAAoC,QAApC,CAAd;AACAlC,AGvBJ,AOOQqL,MVgBJrL,EGvBAiB,AOOIoK,CVgBD,CAAC1C,GUhBK,CPPH,AOOI2G,CPPH9D,GOOH,CVgBJ,AGvBA,CHwBI,AGxBQC,KHwBHjE,AGxBT,CAAkBkE,QHwBd,CAAe1C,IGxBnB,KAAoC/H,EHuBpC,EAEIsF,EGzBsC,CAACiF,EHyBlC,CAACzK,CAFV,AGvBoC,CAAY4K,CH0B5C,KAAKzE,AG1B2B,CAAmB0E,GH0BnD,GAAYrF,AG1BoB,CAA0BtF,IH0BzC,CAACD,CAAN,AG1BoD,CAACwK,EH0B3CjF,EG1BoC,CAAYkF,EH0B3C,CAACpL,EG1B8B,CAAkBwL,GH0B5E,EG1BgC,CH0BKtF,CG1B8CuF,IH0BzC,CAAC9K,CAH/C,EAIIuF,KAAK,CAACpG,CG3Bd,EAA4G,EHuBxG,EAKIoG,KAAK,CAAClG,MALV,EAMI,KAAKU,CANT,EAOI,KAAKC,CAPT,EAQI,KAAKwG,SAAL,CAAerH,KARnB,EASI,KAAKqH,SAAL,CAAenH,MATnB;AAWH,AGjCGY,AOOC,MPPDA,COKA,KPLM,CAACuK,IAAP,CAAYC,KEND,AFMX,CAAkBI,IENFqB,CFMhB,CENmB;ALwC1B,AGjCI,AOOGZ,MAAAA,OAAO,GAAGmG,WLbK,EKaQ,CAACpG,ELbJ4C,SAAL,CAAelO,CAAf,AKaL,CAA4BE,ELbJ,EAAG,EKaO,CAACuK,IAAP,CAAYG,ILbF,EKaV,CAAmBC,ELbJqD,IKaf,CAA0B,CAA1B,EAA6BnD,CLbnB,CAAe9K,CAAf,GAAmB,GAAI,MKa7D,EAA0EuB,SAA1E,EAAqF6I,MAArF,CAAV;APNP,AOOI,KANM,MAMA,IAAInK,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAAlB,KAA4B,CAA5B,IAAiC5K,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBuG,YAAlB,KAAmC/Q,MAAM,CAACuK,IAAP,CAAYC,KAAZ,CAAkBI,KAA1F,EAAiG;AV0B5G5C,AUzBQ+J,EVyBR/J,IUzBQ+J,KVyBC,CAACvS,GUzBO,IVyBR,EAAU,iCKtC+B,KAAKyM,EAAG;ALuCtD,AG1JY,AOiIRjM,MAAAA,EVyBA,IUzBM,CVyBD2G,AUzBE4D,IAAP,CAAYC,KAAZ,CAAkBwG,GVyBlB,CAAoBpK,IUzBpB,EVyBA,CUzB6B,GVyBC,CUzB9B,GVyBJ,EAAwC;AACpC,AUzBA5G,MAAAA,IVyBI,EUzBE,CAACuK,EVyBE5D,EUzBT,CAAYwD,MAAZ,GAAqBA,EVyBjB,CAAoB7E,GUzBxB,EVyBI,IAA6B,KAAKqB,cAAL,CAAoBE,QAArD,EAA+D;AAC3D,AUzBP,SLtBD,IL+CaF,cAAL,CAAoBrB,KAApB,GAA4B,CAA5B;AACA,AKtCX,aLsCgBqB,cAAL,CAAoBC,MAApB,GAA6B,KAA7B;AACH,AGnCN,AOUCuD,IAAAA,EPVKgB,CHgCD,GUtBE,CAAChK,EVyBI,KUzBX,CPVD,AOUgBiJ,CPVI,IOUC,IAAI;AV0BhB,AKnIG,AFgGfjK,AOUQiK,EPVRjK,IOUQiK,KAAK,CAAClD,CVyBGP,AGnCN,CAAClB,EOUJ,CAAW1G,KPVR,EAAW,GHmCV,CAAoBuG,AUzBxB,KVyBI;AACA9F,AGnCR,AOUC,KAFD,GV2BQA,CGnCHiG,MHmCU,CAACoC,CGnChB,GAAgBpC,KHmCR,GAAoB,AGnC5B,wBHmCQ;AACAjG,AGnCX,AOWG8B,IAAAA,IVwBQ9B,KUxBC,CAAC0H,CVwBK,CAACe,EUxBhB,CAAelJ,KVwBP,CAAiB,CAAjB,EAAoB,CAApB,CUxBR,CVwB+BH,CU9FZ,CAwEnB,aVsBsCM,KAA9B,EAAqCN,eAAOQ,MAA5C;AACAI,QAAAA,OAAO,CAACgI,SAAR,CAAkB,KAAKd,SAAL,CAAeS,aAAf,CAA6BrH,CAA/C,EAAkD,KAAK4G,SAAL,CAAeS,aAAf,CAA6BpH,CAA/E;AACAP,AKzCT,AFKH4L,AOaI5L,EPbJ4L,IELSsD,ELyCGlP,OAAO,AGpCN,CHoCOuC,AGpCN8I,IOaFhD,EVuBA,AKzCa,CLyCE,EKzCC,GLyCIhC,CUvB5B,EPbS,COaW,CVuBZ,AGpCmBvE,IELS,KFK3B,EAA6B6I,KOatC,CPbS,AO5DU,CA0EnB,CPd8C;AHqCtC3K,AKzCZ,AFKI,QHoCQA,AKzCNiG,CFKGA,MHoCU,CAAC+B,AKzCN,CFKV,CAAclG,CELD,MLyCL,AKzCW,CLyCO,CAAC,AGpC3B,GAA0BA,EHoCMoF,OGpChC,EHoC2B,CAAeS,UKzCV,GLyCL,CAA6BrH,CAAhD,EAAmD,AKzCxC,CLyCyC,AKzChE,KLyCqE4G,SAAL,CAAeS,aAAf,CAA6BpH,CAAjF;AACAP,AKzCZiG,AFKI,AOaAjG,ELlBJiG,MLyCYjG,CGpCHiG,CELD,CAACd,ILyCU,CAACyC,AKzCpB,CFKI,CAAc+C,CELD,CKkBLlC,IPbR,CELmB,ELyCX,AGpCekC,COavB,CAAiB,CVuBa,AUvB9B,EAAoB,CPbpB,AOaA,EAAuB7K,MVuBf,CAPG,CAQH,KUxBoBJ,CLlBCuG,IKkB7B,EAAmCnG,ELlBE,CAACsJ,UKkBExJ,ELlBrB,CAAvB,GKkBI;ALjBJqG,AFKI,EELJA,MFKQ4F,EELA,CAACgC,IFKM,GAAG,EAAd,QELJ,GAA6B,EAA7B;AL0CY7N,AKzCZqE,AKkBIvC,ELlBJuC,EKkBIvC,IVuBQ9B,CKzCL,CAACsE,GAAR,AKkBa,CLlBD,AKkBEkE,CVuBK,AKxCf,CLwCgBN,OUvBhB,CAAoBlI,CVuBZ,CACI,KAAKmH,QKzCPlB,AKiBV,EA7EmB,CA8EnB,GVuBY,CAAoBd,CKzCd,CAACkJ,GLwCX,EAEI,KAAKnH,CK1CP,CAAqB,CAArB,CAAV,CADQ,EAER,ELyCY,CAAe5G,CAAf,GAAmB,KAAK4G,SAAL,CAAexH,EKzCpCuG,GLuCF,EAGI,GK1CM,CAACoI,CL0CFnH,SAAL,CAAe3G,AK1CjB,CL0CE,AK1CmB,CAArB,CAAV,CAFQ,CL4CwB,CKzChC,ILyCqCkG,IAAL,GAAY,CAAZ,GAAgB,GAApC,CAHJ,EAII,GK1CFR,EL0COiB,MK1CC,CAACmH,EL0CP,CAAe3O,KAJnB,EAKI,CK3CF,CAAqB,CAArB,CAAV,CL2CiBwH,AK9CT,EAIR,OL0CY,CAAetH,MAAf,GAAwB,CAL5B,MKrCEqG,QAAQ,CAACoI,WAAT,CAAqB,CAArB,CAAV,CAJQ,CAAZ,EAKGjL,IALH,CAKQ,MAAMuH,MAAN,IAAgB;AL2CZ3K,AK1CRiG,AFDA,IECAA,IL0CQjG,CG3CH,GECG,CAAC6N,AFDA/B,CAAC,CH2CK,CAAC1D,CG3CH,CAAb,EAAgB0D,CAAC,GAAGT,IH2CZ,CAAqB,CAArB,AK1CR,EL0CgC,CAAxB,AK1CqB,EL0CM,CAA3B,EAA8B,CAA9B,AK1C2BV,AFDnC,EH2CyC,AG3CJmB,CH2C7B,AG3C8B,EH2CM,AG3C5C,CH2CQ,AK1CR,CFD0C;AH4CrC,AK1CR,AFDO,AOcJqG,GLpBJ,CKoBIA,KAAK,CAACxQ,CPdGsE,MOcT,CAAc2M,CPdV,CAAc9I,EOcA,IAAI,EPdlB,GAAyB;AH4C5B,AK1CL,AFDYxJ,AOcJ,QPdIA,CECL,AFDM,COcD,CPdG,AOcFsS,ELbFlF,EKaM,CAAC3D,MAAV,EAAkB,CLbnB,CAAiB9D,QAAjB,CAAP,SFDkC,CAAC,GAApB,EAAyB7G,eAAOM,KAAP,GAAe,GAAxC,CADkB;AH6ChC,AK1CJ,AFDea,AOcA,CL1BT,OFYSA,CAAC,EAAE,COcC,CAACqS,IAAI,CAACnD,QAAN,IAAkBmD,IAAI,CAACtD,MAAL,GPdA,CAAC,AOccsC,GPdlC,EAAyB,AOcc,CPdvC,AOcwCX,cAAN,EAArC,EAA6D;APhBxC,AOiBjB2B,OPjBR,GOiBQA,IAAI,CAACnD,QAAL,GAAgB,IAAhB;AV6BhBxH,AG1CQ,AOcK,EV4BbA,UG1CcT,IAAI,GAAG,GH0CD,GAAG,2BG1CiB,EAAnB,EAAuB,EAAvB,CAAb;AH2CJ,AG1CI,QH0CA,GG1CKvB,EH0CAsB,MG1CL,CAAc7H,KAAd,GAAsB8H,EH0CtB,CAAuBJ,CG1CvB,KH0CJ,EAAmC;AAC/B,AG1CA,AOaIwL,QAAAA,EV6BA,CG1CC3M,COaG,CAACgK,EV6BA1I,IG1CT,CAAc3H,COaV,CAAcL,IPblB,GAAuBiI,GH0CnB,CAAuB1B,AG1C3B,AOaI,CPpBkC,CAStC,GHwCI,IAAgC,KAAKyB,iBAAL,CAAuBF,QAA3D,EAAqE;AACjE,AU7BAuL,QAAAA,IAAI,CV6BCrL,AU7BAoI,SAAL,CAAe3P,OV6Bf,CAAuB8F,KAAvB,EU7BA,CV6B+B,CAA/B;AACA,AGzCJ,AOYC,OAND,KPNM8E,CHyCGrD,AU7BF,IPZI,GAAGoD,MAAM,CAAC,GHyCjB,CAAuBvD,MAAvB,GAAgC,KAAhC,eGzCoC,CAAnB,EAAsBuD,MAAM,CAACoB,MAAP,GAAgB,CAAtC,CAAD,CAApB;AH0CC,AGzCD,AOYI6G,OV0BJ,CU1BIA,GPZC3M,COYG,CV6BD,AU7BEgK,MPZT,CAAclM,COYV,CAAcxE,SPZlB,EOYI,CPZwB;AH0CxB,AGzCAe,AOYH,QPZGA,CAAC,EAAEsK,EHyCErD,GGzCG,CAACjH,CAAN,GAAUsK,KAAK,CAAClL,GHyCnB,CAAuBoG,CGzCV,GAAc,CHyC3B,AG1CwB;AH2CxB,AGzCAvF,AOYP,KAVD,EA/EmB,CP6EXA,AOcR,CPdS,EAAEqK,EHyCE1D,GGzCG,CAAC3G,KHyCT,CAAeD,CAAf,GAAmB,KAAK4G,SAAL,CAAe5G,CAAf,GAAmB,KAAKiH,iBAAL,CAAuBC,IAAvB,GAA8B,KAAKD,iBAAL,CAAuBzB,KAA3F;AACH,AG5C2B,OAA5B;AH6CH,AGzCG+F,AOaJtM,MPbIsM,OAAO,CAACG,EOaRyG,EPbA,CAAa,IAAI5I,MAAJ,CAAW,KAAK5D,KOajC,GPbiB,AOac,CPb3B,SOaJ;AV6BH,AGzCI;AOaD1G,gBAAI2I,SAAJ,CAAcpI,YAAd,EAAoB,CAApB,EAAuB,CAAvB;AV6BJyC,AGzCI,EHyCJA,MAAM,CAACF,EGzCIwJ,KHyCL,EAAUvJ,AGzCZ,OHyCE,EAAmB;AACrB,AGzCH,AOYGsP,IAAAA,KAAK,CAACf,cAAN;AV8BA;AACA,AGrEmB,AOwCnB,QAAI,CV6BCxK,AU7BA7F,KV6BL,CU7BW,CAACuK,CV8BRjD,GU9BC,CV8BG,AU9BSkD,CV8BRtC,IU9BJ,CV8BD,AU9BmB8I,CV8BR,KAAKjR,CAAL,CU9Bf,EV8BwB,AU9BS,KV8BJ2G,SAAL,CAAetH,MAAf,GAAwB,CAAjC,GAAqC0C,OAAhD,EAAyD,KAAKhC,CAAL,GAAS,KAAK4G,SAAL,CAAexH,KAAf,GAAuB,CAAhC,GAAoC2C,OAA7F,IACAyF,IAAI,CAACa,EAFT;AU5BInI,MAAAA,MAAM,CAACqS,qBAAP,CAA6BL,QAA7B;AV+BJ,AU9BC,KAFD,GVgCI,GU9BG,EV8BEnM,KAAL,GAAa,GAAb,IAAoB,KAAKA,KAAL,GAAa,GAArC,EAA0C;AACtC,AU9BA,WV8BKI,IAAL,GAAY,IAAZ;AACH,AG7CF,AOeE,KV4BD,CG3CKwF,KH6CE,YG7Ce,GAAG,YAAY;AH8CjC,AG7CR,AOeC,GArGD,KPsFMhG,GH6COQ,IAAL,CG7CM,EH6CM,CG7CH,IH6CT,EG7Ce,2BAAa,QAAb,CAAvB;AH8CK,AG7CLR,EAAAA,QAAQ,CAACd,KAAT,GAAiB,MAAM,wBAAUc,QAAQ,CAACmD,YAAnB,CAAvB;AH8CC,AG7CDnD,AOeA,EPfAA,OOeO,CPfC,CAACwE,IOeI,OPfb,GAAuB,MAAM,wBAAUxE,QAAQ,CAACiG,cAAnB,CAA7B;AACA,AOeI,QPfEtG,SAAS,GAAG,IAAI/E,GAAJ,EAAlB;AH6CA4B,AG5CAwD,AOeIzF,EV6BJiC,AG5CAwD,EOeIzF,KV6BG,CG5CC,AOeE,CPfDqF,AOeEgN,CV6BD,KG5CV,CAAgBlR,OAAhB,CAAwBmE,KAAK,COezB,CAA6B0M,EPfA,MOe7B;AV8BAjO,AG5CAqB,AOeH,GAHD,CPZIA,SAAS,CAAC1E,GAAV,CAAc4E,KAAK,CAACrC,IAApB,CH4CYE,CG5CcmC,KAAK,CAACC,EH4ChC,CAAsB,CG5CtB,QH4CA;AG3CH,AOeJ,CA1KM,EPyJH;AH8CI,AG3CJE,EAAAA,OH2CSkB,CG3CD,CAACvB,SAAT,GH2CI,AG3CiBA,CH2CGwB,MAApB,EG3CJ,CH2CiC,IAA7B;AACA,AG3CJ,SH2CSG,AG3CF,IAAIoE,aH2CP,AG3CG,CH2CoBvE,AG3CFnB,MH2CrB,EG3CG,CH2C6B,AG3CpC,IH2CI;AACH,AG3CJ,CAVM;;AHsDHwB,EAAAA,KAAK,GAAG;AACJ,AG3CRpI,QAAQ,CAAC8M,gBAAT,CAA0B,IH2CJ,GG3CtB,CH2CQ,CG3C2BxK,OAAnC,CAA2C,UAAUyK,YAAV,EAAwB;AH4C3D,AG3CJ,MAAIA,YAAY,CAACtJ,KAAjB,EAAwB,CH2CT,IAAX;AACH,AG3CGsJ,IAAAA,YAAY,CAACtJ,KAAb,GAAqB,KAArB;AACH,GAFD,MAEO;AHrKY,AGsKfsJ,IAAAA,YAAY,CAACtJ,KAAb,GAAqB,IAArB;AACH;AACJ,CAND;;AHgDO,MAAM8F,aAAa,GAAG,YAAY;AACrC,QAAM3C,QAAQ,GAAG,MAAM,2BAAa,WAAb,CAAvB;AACAA,EAAAA,QAAQ,CAACc,SAAT,GAAqB,EACjB,GAAGd,QAAQ,CAACc,SADK;AAEjBwB,IAAAA,WAAW,EAAE,MAAM,wBAAUtC,QAAQ,CAACc,SAAT,CAAmB8B,cAA7B;AAFF,GAArB;AAIA5C,EAAAA,QAAQ,CAACiB,SAAT,GAAqB,EACjB,GAAGjB,QAAQ,CAACiB,SADK;AAEjB/B,IAAAA,KAAK,EAAE,MAAM,wBAAUc,QAAQ,CAACiB,SAAT,CAAmB4B,QAA7B,CAFI;AAGjBX,IAAAA,YAAY,EAAE,MAAM,wBAAUlC,QAAQ,CAACiB,SAAT,CAAmB6B,eAA7B;AAHH,GAArB;AAKA9C,EAAAA,QAAQ,CAACqB,UAAT,GAAsB,MAAM,wBAAUrB,QAAQ,CAAC+C,aAAnB,CAA5B;AACA/C,EAAAA,QAAQ,CAACR,UAAT,GAAsB,6BAAeQ,QAAQ,CAACgD,oBAAxB,CAAtB;AACA,SAAO,IAAIjD,SAAJ,CAAcC,QAAd,CAAP;AACH,CAdM","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const canvas = document.querySelector('canvas')\r\nexport const ctx = canvas.getContext('2d')\r\nctx.font = '30px Anton'\r\ncanvas.width = innerWidth\r\ncanvas.height = innerHeight\r\n\r\nexport const mask = document.createElement('canvas')\r\nexport const maskCtx = mask.getContext('2d')\r\nmask.width = innerWidth\r\nmask.height = innerHeight\r\n\r\nexport const groundPositionX = 0\r\n\r\nexport const groundHeight = 15\r\n\r\nexport let groundY = canvas.height - groundHeight\r\n\r\nconst resizeCanvas = () => {\r\n    canvas.width = innerWidth\r\n    canvas.height = innerHeight\r\n    mask.width = innerWidth\r\n    mask.height = innerHeight\r\n    groundY = canvas.height - groundHeight\r\n}\r\n\r\nexport const canvasCenter = { x: canvas.width / 2, y: canvas.height / 2 }\r\n\r\nwindow.addEventListener('resize', resizeCanvas)\r\n","export default class KeyboardHandler {\r\n    constructor() {\r\n        // Holds the current state of a given key\r\n        this.keyStates = new Map()\r\n\r\n        // Holds the callback functions for a key code\r\n        this.keyMap = new Map()\r\n    }\r\n\r\n    addMapping(code, callback) {\r\n        this.keyMap.set(code, callback)\r\n    }\r\n\r\n    handleEvent(event) {\r\n        const { code } = event\r\n\r\n        if (!this.keyMap.has(code)) {\r\n            return\r\n        }\r\n\r\n        event.preventDefault()\r\n\r\n        const keyState = event.type === 'keydown' ? true : false\r\n\r\n        if (this.keyStates.get(code) === keyState) {\r\n            return\r\n        }\r\n\r\n        this.keyStates.set(code, keyState)\r\n\r\n        this.keyMap.get(code)(keyState)\r\n    }\r\n\r\n    listenTo(window) {\r\n        ;['keydown', 'keyup'].forEach(eventName => {\r\n            window.addEventListener(eventName, event => {\r\n                this.handleEvent(event)\r\n            })\r\n        })\r\n    }\r\n}\r\n","import KeyboardHandler from './KeyboardHandler'\r\nimport { canvas } from '/src/shared/canvas'\r\n\r\nexport const setUpKeyboard = character => {\r\n    const keyboard = new KeyboardHandler()\r\n\r\n    keyboard.addMapping('KeyD', keyState => {\r\n        character.direction.right = keyState\r\n    })\r\n\r\n    keyboard.addMapping('KeyA', keyState => {\r\n        character.direction.left = keyState\r\n    })\r\n\r\n    keyboard.addMapping('Space', keyState => {\r\n        character.direction.jumping = keyState\r\n    })\r\n\r\n    keyboard.listenTo(window)\r\n}\r\n\r\nexport const setUpMouse = character => {\r\n    canvas.addEventListener('mousemove', ({ clientX, clientY }) => {\r\n        character.rotate(clientX, clientY)\r\n    })\r\n    canvas.addEventListener('click', e => {\r\n        character.onClick()\r\n    })\r\n}\r\n","import gunshotSrc from '/static/sounds/ShotgunQuieter.mp3'\r\nimport splashSrc from '/static/sounds/Splash.mp3'\r\nimport glassShatterSrc from '/static/sounds/GlassShatter.mp3'\r\nimport musicSrc from '/static/sounds/reggae.mp3'\r\n\r\nexport class AudioPlayer {\r\n    constructor() {\r\n        this.audioContext = new AudioContext()\r\n        this.audioBuffers = new Map()\r\n        this.muted = false\r\n        this.gainNode = this.audioContext.createGain()\r\n    }\r\n    loadAudio(src) {\r\n        return fetch(src)\r\n            .then(response => response.arrayBuffer())\r\n            .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))\r\n    }\r\n    addAudio(name, buffer) {\r\n        this.audioBuffers.set(name, buffer)\r\n    }\r\n    playAudio(name) {\r\n        const source = this.audioContext.createBufferSource()\r\n        source.connect(this.gainNode)\r\n        this.gainNode.connect(this.audioContext.destination)\r\n        source.buffer = this.audioBuffers.get(name)\r\n        source.start(0)\r\n    }\r\n    toggleMuteAudio() {\r\n        if (!this.muted) {\r\n            this.muted = true\r\n            this.gainNode.gain.value = 0\r\n        } else {\r\n            this.muted = false\r\n            this.gainNode.gain.value = 1\r\n        }\r\n    }\r\n    async loadAllSounds() {\r\n        await Promise.all([\r\n            audioPlayer.loadAudio(gunshotSrc),\r\n            audioPlayer.loadAudio(splashSrc),\r\n            audioPlayer.loadAudio(glassShatterSrc),\r\n            audioPlayer.loadAudio(musicSrc)\r\n        ]).then(([gunshot, splash, glass, music]) => {\r\n            audioPlayer.addAudio('gunshot', gunshot)\r\n            audioPlayer.addAudio('splash', splash)\r\n            audioPlayer.addAudio('glass', glass)\r\n            audioPlayer.addAudio('music', music)\r\n        })\r\n    }\r\n}\r\n\r\nexport const audioPlayer = new AudioPlayer()\r\naudioPlayer.toggleMuteAudio()\r\n","export function loadImage(url) {\r\n    return new Promise(resolve => {\r\n        const image = new Image()\r\n        image.addEventListener('load', () => {\r\n            resolve(image)\r\n        })\r\n        image.src = url\r\n    })\r\n}\r\n\r\nexport function loadManifest(name) {\r\n    return fetch(`./manifests/${name}.json`).then(res => res.json())\r\n}\r\n\r\nexport function loadAnimations(animations) {\r\n    const animationsMap = new Map()\r\n    animations.forEach(animation => {\r\n        const spriteMap = new Map()\r\n        animation.frames.forEach(frame => {\r\n            spriteMap.set(frame.name, frame.rect)\r\n        })\r\n        animationsMap.set(animation.name, spriteMap)\r\n    })\r\n    return animationsMap\r\n}\r\n","import { canvas } from '/src/shared/canvas'\r\nimport { groundHeight } from '/src/shared/canvas'\r\nimport { setUpKeyboard, setUpMouse } from '../input'\r\nimport { audioPlayer } from '../AudioPlayer'\r\nimport { loadImage, loadManifest, loadAnimations } from './loaders'\r\nimport { groundY } from '/src/shared/canvas'\r\n\r\nexport class Character {\r\n    constructor(manifest) {\r\n        this.manifest = manifest\r\n        this.direction = {\r\n            left: false,\r\n            right: false,\r\n            jumping: false\r\n        }\r\n        this.isOnGround = true\r\n        this.deltaX = 0\r\n        this.deltaY = 0\r\n        this.angle = 0\r\n        this.velocityX = 6\r\n        this.velocityY = 0\r\n        this.gravity = 0.6\r\n        this.flip = false\r\n        this.shot = false\r\n        this.distance = 0\r\n        this.ready = true\r\n        this.streak = 0\r\n        this.highestStreak = 0\r\n        this.lowerBody = {\r\n            ...this.manifest.lowerBody,\r\n            runningAnimation: this.manifest.animations.get('running'),\r\n            jumpingAnimation: this.manifest.animations.get('jumping')\r\n        }\r\n        this.upperBody = {\r\n            ...this.manifest.upperBody,\r\n            x: this.x - 30,\r\n            y: this.y - this.lowerBody.height + 70\r\n        }\r\n        this.x = 0\r\n        this.y = canvas.height - groundHeight - this.lowerBody.height + 5\r\n        this.flashAnimation = {\r\n            active: false,\r\n            duration: 3,\r\n            frame: 0,\r\n            image: this.manifest.flashImage\r\n        }\r\n        this.shootingAnimation = {\r\n            active: false,\r\n            duration: 4,\r\n            frame: 0,\r\n            size: 5\r\n        }\r\n        this.setUp()\r\n    }\r\n    draw(ctx) {\r\n        this.upperBody = {\r\n            ...this.upperBody,\r\n            rotationPoint: {\r\n                x: this.x + this.lowerBody.width / 2,\r\n                y: this.y + 25\r\n            },\r\n            x: this.x - 25,\r\n            y: this.y - this.lowerBody.height + (this.flip ? 160 : 100)\r\n        }\r\n        ctx.strokeStyle = 'red'\r\n        //ctx.strokeRect(this.x, this.y, this.lowerBody.width, this.lowerBody.height)\r\n        this.getFrame(ctx, `walk-${Math.floor(this.distance / 20) % this.lowerBody.runningAnimation.size}`)\r\n        //this.getFrame(ctx, 'walk-1')\r\n        ctx.translate(this.upperBody.rotationPoint.x, this.upperBody.rotationPoint.y)\r\n        ctx.rotate(this.angle)\r\n        ctx.translate(-this.upperBody.rotationPoint.x, -this.upperBody.rotationPoint.y)\r\n        ctx.strokeStyle = 'limegreen'\r\n        this.runShootingAnimation()\r\n        ctx.drawImage(\r\n            this.flip ? this.upperBody.imageFlipped : this.upperBody.image,\r\n            this.upperBody.x,\r\n            this.upperBody.y,\r\n            this.upperBody.width,\r\n            this.upperBody.height\r\n        )\r\n        //ctx.strokeRect(this.upperBody.x, this.upperBody.y, this.upperBody.width, this.upperBody.height)\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n        ctx.fillStyle = 'blue'\r\n        //d ctx.fillRect(this.upperBody.rotationPoint.x - 5, this.upperBody.rotationPoint.y - 5, 10, 10)\r\n    }\r\n    move() {\r\n        this.velocityY += this.gravity\r\n        this.y += this.velocityY\r\n\r\n        if (this.y + this.lowerBody.height >= groundY) {\r\n            this.y = groundY - this.lowerBody.height\r\n            this.isOnGround = true\r\n            this.velocityY = 0.0\r\n        }\r\n\r\n        if (this.direction.left) {\r\n            if (this.x > 0) {\r\n                this.x -= this.velocityX\r\n                this.distance += this.velocityX\r\n            }\r\n        } else if (this.direction.right) {\r\n            if (this.x < canvas.width - this.upperBody.width) {\r\n                this.x += this.velocityX\r\n                this.distance += this.velocityX\r\n            }\r\n        } else {\r\n            if (this.ready) this.distance = 0\r\n        }\r\n        if (this.direction.jumping) {\r\n            if (this.isOnGround) {\r\n                this.velocityY = -12.0\r\n                this.isOnGround = false\r\n            }\r\n        }\r\n    }\r\n    getFrame(ctx, name) {\r\n        if (this.isOnGround) {\r\n            const frame = this.lowerBody.runningAnimation.get(name)\r\n            if (frame) {\r\n                ctx.drawImage(\r\n                    this.lowerBody.spriteSheet,\r\n                    frame.x,\r\n                    this.flip ? frame.y + frame.height : frame.y,\r\n                    frame.width,\r\n                    frame.height,\r\n                    this.x,\r\n                    this.y,\r\n                    this.lowerBody.width,\r\n                    this.lowerBody.height\r\n                )\r\n            } else {\r\n                ctx.drawImage(\r\n                    this.lowerBody.spriteSheet,\r\n                    frame.x,\r\n                    this.flip ? frame.y + frame.height : frame.y,\r\n                    frame.width,\r\n                    frame.height,\r\n                    this.x,\r\n                    this.y,\r\n                    this.lowerBody.width,\r\n                    this.lowerBody.height\r\n                )\r\n            }\r\n        } else {\r\n            const frame = this.lowerBody.jumpingAnimation.get('jump-0')\r\n            ctx.drawImage(\r\n                this.lowerBody.spriteSheet,\r\n                frame.x,\r\n                this.flip ? frame.y + frame.height : frame.y,\r\n                frame.width,\r\n                frame.height,\r\n                this.x,\r\n                this.y,\r\n                this.lowerBody.width,\r\n                this.lowerBody.height\r\n            )\r\n        }\r\n    }\r\n    drawFlash(maskCtx) {\r\n        if (this.flashAnimation.active == true) {\r\n            if (this.flashAnimation.frame >= this.flashAnimation.duration) {\r\n                this.flashAnimation.frame = 0\r\n                this.flashAnimation.active = false\r\n            } else {\r\n                this.flashAnimation.frame++\r\n                maskCtx.fillStyle = 'rgba(249, 191, 0, 0.1)'\r\n                maskCtx.fillRect(0, 0, canvas.width, canvas.height)\r\n                maskCtx.translate(this.upperBody.rotationPoint.x, this.upperBody.rotationPoint.y)\r\n                maskCtx.rotate(this.angle)\r\n                maskCtx.translate(-this.upperBody.rotationPoint.x, -this.upperBody.rotationPoint.y)\r\n                maskCtx.strokeStyle = 'limegreen'\r\n                //ctx.strokeRect(this.upperBody.x, this.upperBody.y, this.upperBody.width, this.upperBody.height)\r\n                maskCtx.drawImage(\r\n                    this.flashAnimation.image,\r\n                    this.upperBody.x + this.upperBody.width,\r\n                    this.upperBody.y + (this.flip ? 0 : 100),\r\n                    this.upperBody.width,\r\n                    this.upperBody.height / 2\r\n                )\r\n                maskCtx.setTransform(1, 0, 0, 1, 0, 0)\r\n            }\r\n        }\r\n    }\r\n    runShootingAnimation() {\r\n        if (this.shootingAnimation.active) {\r\n            if (this.shootingAnimation.frame >= this.shootingAnimation.duration) {\r\n                this.shootingAnimation.frame = 0\r\n                this.shootingAnimation.active = false\r\n            } else {\r\n                this.shootingAnimation.frame++\r\n                this.upperBody.x = this.upperBody.x - this.shootingAnimation.size * this.shootingAnimation.frame\r\n            }\r\n        }\r\n    }\r\n    rotate(clientX, clientY) {\r\n        //const deltaX = this.x + this.upperBody.width / 2 - clientX\r\n        //const deltaY = this.y + this.upperBody.height / 2 - clientY\r\n        this.angle =\r\n            Math.atan2(this.y + this.upperBody.height / 2 - clientY, this.x + this.upperBody.width / 2 - clientX) +\r\n            Math.PI\r\n        if (this.angle > 1.5 && this.angle < 4.7) {\r\n            this.flip = true\r\n        } else {\r\n            this.flip = false\r\n        }\r\n    }\r\n    onClick() {\r\n        audioPlayer.playAudio('gunshot')\r\n        this.flashAnimation.active = true\r\n        this.shootingAnimation.active = true\r\n    }\r\n    setUp() {\r\n        setUpKeyboard(this)\r\n        setUpMouse(this)\r\n    }\r\n}\r\n\r\nexport const loadCharacter = async () => {\r\n    const manifest = await loadManifest('character')\r\n    manifest.lowerBody = {\r\n        ...manifest.lowerBody,\r\n        spriteSheet: await loadImage(manifest.lowerBody.spriteSheetURL)\r\n    }\r\n    manifest.upperBody = {\r\n        ...manifest.upperBody,\r\n        image: await loadImage(manifest.upperBody.imageURL),\r\n        imageFlipped: await loadImage(manifest.upperBody.flippedImageURL)\r\n    }\r\n    manifest.flashImage = await loadImage(manifest.flashImageURL)\r\n    manifest.animations = loadAnimations(manifest.animationsToBeLoaded)\r\n    return new Character(manifest)\r\n}\r\n","import { canvas } from '/src/shared/canvas'\r\nimport { loadImage, loadManifest } from '/src/classes/loaders'\r\n\r\nexport class Scene {\r\n    constructor(manifest) {\r\n        this.manifest = manifest\r\n    }\r\n    draw(ctx) {\r\n        ctx.drawImage(this.manifest.image, 0, 0, canvas.width, canvas.height)\r\n    }\r\n}\r\n\r\nexport const loadScene = async () => {\r\n    const manifest = await loadManifest('scene')\r\n    manifest.image = await loadImage(manifest.mainImageURL)\r\n    return new Scene(manifest)\r\n}\r\n","export function getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max))\r\n}\r\n\r\nexport function randomIntFromRange(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport function checkCollision(obj1, obj2) {\r\n    if (\r\n        obj1.x < obj2.x + obj2.width &&\r\n        obj1.x + obj1.width > obj2.x &&\r\n        obj1.y < obj2.y + obj2.height &&\r\n        obj1.y + obj1.height > obj2.y\r\n    ) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n","import { canvas, canvasCenter } from '/src/shared/canvas'\r\nimport { randomIntFromRange } from '/src/shared/helpers'\r\nimport { audioPlayer } from '../AudioPlayer'\r\nimport { loadImage, loadManifest } from './loaders'\r\n\r\nexport class Spider {\r\n    constructor(manifest) {\r\n        const { destination, position, width, height } = manifest\r\n        this.manifest = manifest\r\n        this.height = width\r\n        this.width = height\r\n        this.x = position.x\r\n        this.y = position.y\r\n        this.isShot = false\r\n        this.hasKilledAPlant = false\r\n        this.killer = {}\r\n        this.deltaX = destination.x - this.x\r\n        this.deltaY = destination.y - this.y\r\n        this.angle = Math.atan2(this.deltaY, this.deltaX)\r\n        this.splashAngle = 0\r\n        this.velocityX = Math.cos(this.angle) * 1.0\r\n        this.velocityY = Math.sin(this.angle) * 1.0\r\n        this.direction = this.angle - Math.PI / 2\r\n        this.distance = 0\r\n        this.points = {\r\n            shown: false,\r\n            value: Math.floor(1000 / this.width),\r\n            y: this.y,\r\n            speed: 2,\r\n            multiplier: 1\r\n        }\r\n    }\r\n    draw(ctx) {\r\n        if (!this.isShot && !this.hasKilledAPlant) {\r\n            this.distance += 2\r\n            ctx.translate(this.x + this.width / 2, this.y + this.height / 2)\r\n            ctx.rotate(this.direction)\r\n            ctx.translate(-this.x - this.width / 2, -this.y - this.height / 2)\r\n            this.getFrame(ctx, `spider-${Math.floor(this.distance / 20) % this.manifest.spriteMap.size}`)\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n            this.checkCollision()\r\n        } else if (this.hasKilledAPlant) {\r\n        } else {\r\n            ctx.translate(this.x + this.width / 2, this.y + this.height / 2)\r\n            ctx.rotate(-this.splashAngle + Math.PI)\r\n            ctx.translate(-this.x - this.width / 2, -this.y - this.height / 2)\r\n            ctx.drawImage(\r\n                this.manifest.splashImage,\r\n                this.x - 10,\r\n                this.y - this.height,\r\n                this.width + 20,\r\n                this.height * 2\r\n            )\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n            if (this.points.shown) {\r\n                this.drawPoints(ctx)\r\n            }\r\n        }\r\n    }\r\n    checkCollision() {\r\n        this.manifest.plants.forEach(plant => {\r\n            if (\r\n                plant.plantBoundingRect.x < this.x + this.width &&\r\n                plant.plantBoundingRect.x + plant.plantBoundingRect.width > this.x &&\r\n                plant.plantBoundingRect.y < this.y + this.height &&\r\n                plant.plantBoundingRect.y + plant.plantBoundingRect.height > this.y\r\n            ) {\r\n                plant.shrink()\r\n                this.hasKilledAPlant = true\r\n                window.game.state.spidersKilled += 1\r\n                if (\r\n                    window.game.state.spidersKilled ===\r\n                    window.game.config.levels[window.game.state.level].numberOfSpiders\r\n                ) {\r\n                    window.game.state.level++\r\n                }\r\n            }\r\n        })\r\n    }\r\n    drawPoints(ctx) {\r\n        this.points.y -= this.points.speed\r\n        ctx.font = `${this.width - 10}px Anton`\r\n        ctx.fillStyle = 'white'\r\n        ctx.textAlign = 'center'\r\n        ctx.fillText(Math.floor(this.points.value * this.points.multiplier), this.x + this.width / 2, this.points.y)\r\n        if (this.points.y < 0) {\r\n            this.points.shown = false\r\n        }\r\n    }\r\n    getFrame(ctx, name) {\r\n        const frame = this.manifest.spriteMap.get(name)\r\n        if (frame) {\r\n            ctx.drawImage(\r\n                this.manifest.image,\r\n                frame.x,\r\n                frame.y,\r\n                frame.width,\r\n                frame.height,\r\n                (this.x += this.velocityX * 1),\r\n                (this.y += this.velocityY * 1),\r\n                this.width,\r\n                this.height\r\n            )\r\n        }\r\n    }\r\n    onClick() {\r\n        window.game.state.streak += 1\r\n        window.game.state.spidersKilledTotal += 1\r\n        window.game.state.spidersKilled += 1\r\n        this.points.multiplier = 1 + window.game.state.streak * 0.1\r\n        window.game.state.score += Math.floor(this.points.value * this.points.multiplier)\r\n        if (window.game.state.streak > window.game.state.biggestStreak) {\r\n            window.game.state.biggestStreak = window.game.state.streak\r\n        }\r\n        audioPlayer.playAudio('splash')\r\n        this.isShot = true\r\n        this.points.shown = true\r\n        this.points.y = this.y\r\n        this.killer = { x: this.manifest.character.upperBody.x, y: this.manifest.character.upperBody.y }\r\n        const deltaX = this.x - (this.killer.x + this.manifest.character.upperBody.width / 2)\r\n        const deltaY = this.y - (this.killer.y + 100)\r\n        this.splashAngle = Math.atan2(deltaX, deltaY)\r\n        if (window.game.state.spidersKilled === window.game.config.levels[window.game.state.level].numberOfSpiders) {\r\n            window.game.state.level++\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpiderFactory {\r\n    constructor(manifest) {\r\n        this.manifest = manifest\r\n    }\r\n    createSpiders(numberOfSpiders, character, plants) {\r\n        this.manifest.character = character\r\n        this.manifest.plants = plants\r\n        let spiders = []\r\n        for (let i = 0; i < numberOfSpiders; i++) {\r\n            this.manifest.position = {\r\n                x: randomIntFromRange(-200, canvas.width + 200),\r\n                y: randomIntFromRange(-200, 0)\r\n            }\r\n            const size = randomIntFromRange(25, 80)\r\n            this.manifest.width = size\r\n            this.manifest.height = size\r\n\r\n            //spider will pick a random plant and attack it\r\n            const plant = plants[randomIntFromRange(0, plants.length - 1)]\r\n            this.manifest.destination = {\r\n                x: plant.x + plant.width / 2,\r\n                y: plant.y\r\n            }\r\n            spiders.push(new Spider(this.manifest))\r\n        }\r\n        return spiders\r\n    }\r\n}\r\n\r\nexport const loadSpiderFactory = async () => {\r\n    const manifest = await loadManifest('spider')\r\n    manifest.image = await loadImage(manifest.mainImageURL)\r\n    manifest.splashImage = await loadImage(manifest.splashImageURL)\r\n    const spriteMap = new Map()\r\n    manifest.frames.forEach(frame => {\r\n        spriteMap.set(frame.name, frame.rect)\r\n    })\r\n    manifest.spriteMap = spriteMap\r\n    return new SpiderFactory(manifest)\r\n}\r\n\r\ndocument.querySelectorAll('audio').forEach(function (audioElement) {\r\n    if (audioElement.muted) {\r\n        audioElement.muted = false\r\n    } else {\r\n        audioElement.muted = true\r\n    }\r\n})\r\n","import { audioPlayer } from '../AudioPlayer'\r\n\r\n// file for interaction between html elements and canvas\r\nexport const addEventListeners = plants => {\r\n    document.querySelectorAll('.seedButton').forEach(el => {\r\n        el.addEventListener('click', ({ target }) => {\r\n            plants[target.dataset.id].plantSeed()\r\n        })\r\n    })\r\n    document.querySelector('#mute-button').addEventListener('click', function () {\r\n        this.classList.toggle('mute')\r\n        audioPlayer.toggleMuteAudio()\r\n    })\r\n}\r\n\r\nexport const showGameOver = () => {\r\n    document.querySelector('#gameOverScreen').classList.remove('hidden')\r\n    document.querySelector('#gameOverScreen').innerHTML += `\r\n        <div>\r\n            <h2>Spiders killed: ${window.game.state.spidersKilledTotal}</h2>\r\n            <h2>Points from spiders: ${window.game.state.score}</h2>\r\n            <h2>Highest killstreak: ${window.game.state.biggestStreak}</h2>\r\n            <h2>Points from plants: ${window.game.plants.reduce((acc, plant) => {\r\n                return acc + plant.size * 1000\r\n            }, 0)}</h2>\r\n        </div>\r\n    `\r\n}\r\n\r\nexport const updateLevel = () => {\r\n    if (window.game.state.level >= 0) {\r\n        document.querySelector('#level').innerText = window.game.state.level + 1\r\n        document.querySelector('#level').classList.remove('hidden')\r\n    }\r\n}\r\n\r\nexport const updateScore = () => {\r\n    document.querySelector('#score').innerText = window.game.state.score\r\n}\r\n\r\nexport const updateStreak = () => {\r\n    const streak = document.querySelector('#streak')\r\n    const streakCont = document.querySelector('#streak-container')\r\n    streak.innerText = Math.floor((1 + window.game.state.streak * 0.1) * 10) / 10\r\n    if (window.game.state.streak !== 0) {\r\n        streakCont.classList.remove('hidden')\r\n        streak.classList.remove('streak-animation')\r\n        streak.offsetWidth\r\n        streak.classList.add('streak-animation')\r\n        //streak.style.color = '#' + (((1 << 24) * Math.random()) | 0).toString(16)\r\n    } else {\r\n        streakCont.classList.add('hidden')\r\n    }\r\n}\r\n\r\nexport const hideLoadingScreen = () => {\r\n    document.querySelector('#loadingScreen').classList.add('hidden')\r\n}\r\n","import { groundY } from '/src/shared/canvas'\r\nimport { canvas } from '/src/shared/canvas'\r\nimport { addEventListeners } from '/src/shared/UI'\r\nimport { loadImage, loadManifest } from '/src/classes/loaders'\r\n\r\nexport class PlantFactory {\r\n    constructor(manifest) {\r\n        this.manifest = manifest\r\n    }\r\n    createPlants(numberOfPlants) {\r\n        const { width, height, image, loadedPlantImages, potMargin, plantSizes } = this.manifest\r\n        const plants = []\r\n        const widthSum = width * numberOfPlants + potMargin * (numberOfPlants - 1)\r\n        const offset = (canvas.width - widthSum) / 2\r\n        //plantSizes.reduce((acc, b) => acc + b.width, 0)\r\n\r\n        for (let i = 0; i < numberOfPlants; i++) {\r\n            plants.push(\r\n                new Plant(\r\n                    offset + (width + (i === numberOfPlants ? 0 : potMargin)) * i,\r\n                    groundY - height,\r\n                    plantSizes,\r\n                    image,\r\n                    loadedPlantImages,\r\n                    i\r\n                )\r\n            )\r\n        }\r\n        addEventListeners(plants)\r\n        return plants\r\n    }\r\n}\r\n\r\nexport class Plant {\r\n    constructor(positionX, positionY, plantSizes, image, plantImages, id) {\r\n        this.id = id\r\n        this.x = positionX\r\n        this.y = positionY - 15\r\n        this.size = 0\r\n        this.plantSizes = plantSizes\r\n        this.planted = false\r\n        this.showSeed = true\r\n        this.plantImages = plantImages\r\n        this.width = 170\r\n        this.height = 120\r\n        this.potCenter = {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2\r\n        }\r\n        this.image = image\r\n        this.timeToShowSeedButton = 1\r\n        this.activePlant = plantSizes[this.size]\r\n        this.activePlantImage = plantImages[this.size]\r\n        this.plantBoundingRect = {\r\n            x: this.potCenter.x - this.activePlant.width / 2,\r\n            y: this.y - this.activePlant.height,\r\n            width: this.activePlant.width,\r\n            height: this.activePlant.height\r\n        }\r\n        this.createSeedButton()\r\n    }\r\n    draw(ctx) {\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\r\n        if (this.planted) {\r\n            ctx.drawImage(\r\n                this.activePlantImage,\r\n                this.plantBoundingRect.x,\r\n                this.plantBoundingRect.y,\r\n                this.plantBoundingRect.width,\r\n                this.plantBoundingRect.height\r\n            )\r\n        }\r\n    }\r\n    grow() {\r\n        if (this.size < this.plantImages.length - 1 && this.planted) {\r\n            this.size++\r\n            this.activePlant = this.plantSizes[this.size]\r\n            this.activePlantImage = this.plantImages[this.size]\r\n            this.plantBoundingRect = {\r\n                x: this.potCenter.x - this.activePlant.width / 2,\r\n                y: this.y - this.activePlant.height,\r\n                width: this.activePlant.width,\r\n                height: this.activePlant.height\r\n            }\r\n        }\r\n    }\r\n    shrink() {\r\n        if (this.size > 0 && this.planted) {\r\n            this.size--\r\n            this.activePlant = this.plantSizes[this.size]\r\n            this.activePlantImage = this.plantImages[this.size]\r\n            this.plantBoundingRect = {\r\n                x: this.potCenter.x - this.activePlant.width / 2,\r\n                y: this.y - this.activePlant.height,\r\n                width: this.activePlant.width,\r\n                height: this.activePlant.height\r\n            }\r\n        } else {\r\n            this.size = -1\r\n            this.planted = false\r\n        }\r\n    }\r\n    onClick() {\r\n        this.grow()\r\n    }\r\n    plantSeed() {\r\n        window.game.state.seedsPlanted += 1\r\n        this.planted = true\r\n        document.querySelector(`.seedButton[data-id=\"${this.id}\"]`).outerHTML = ''\r\n    }\r\n    showSeedButton() {\r\n        document.querySelector(`.seedButton[data-id=\"${this.id}\"]`).classList.add('active')\r\n    }\r\n    createSeedButton() {\r\n        overlay.innerHTML += `\r\n        <div \r\n            class=\"seedButton\"\r\n            data-id=\"${this.id}\"\r\n            style=\"left: ${this.potCenter.x - 40}px; top: ${this.potCenter.y - 160}px;\" \r\n        >\r\n            <div class=\"seedButton__image\" data-id=\"${this.id}\">\r\n            </div>\r\n        </div>\r\n        `\r\n    }\r\n}\r\n\r\nexport const loadPlantFactory = async () => {\r\n    const manifest = await loadManifest('plant')\r\n    manifest.image = await loadImage(manifest.mainImageURL)\r\n    manifest.loadedPlantImages = []\r\n    Promise.all([\r\n        loadImage(manifest.plantImages[0]),\r\n        loadImage(manifest.plantImages[1]),\r\n        loadImage(manifest.plantImages[2]),\r\n        loadImage(manifest.plantImages[3])\r\n    ]).then(async plants => {\r\n        manifest.loadedPlantImages = await plants\r\n    })\r\n    return new PlantFactory(manifest)\r\n}\r\n","import { canvas, maskCtx } from '/src/shared/canvas'\r\nimport { audioPlayer } from '../AudioPlayer'\r\nimport { loadImage, loadManifest } from './loaders'\r\n\r\nexport class Light {\r\n    constructor(id, positionX, positionY, width, height, image, color, lightWidth, turnOn, numberOfLights) {\r\n        this.id = id\r\n        this.width = width\r\n        this.height = height\r\n        this.x = positionX\r\n        this.y = positionY\r\n        this.lampCenter = {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2\r\n        }\r\n        this.turnedOn = false\r\n        this.color = color\r\n        this.lightWidth = lightWidth\r\n        this.image = image\r\n        this.offset = 10\r\n        this.isShot = false\r\n        this.perspective = 40\r\n        this.turnOn = turnOn\r\n        this.numberOfLights = numberOfLights\r\n    }\r\n    drawLight(ctx) {\r\n        if (this.turnedOn) {\r\n            ctx.beginPath()\r\n            //top left\r\n            ctx.moveTo(this.x + this.offset, this.y + this.height)\r\n            //bottom left\r\n            if (this.id == 0) {\r\n                ctx.lineTo(this.x - this.lightWidth, canvas.height - 65)\r\n                ctx.lineTo(this.x - this.lightWidth - this.perspective, canvas.height)\r\n            } else {\r\n                ctx.lineTo(this.x - this.lightWidth, canvas.height)\r\n            }\r\n            //bottom right\r\n            if (this.id == this.numberOfLights - 1) {\r\n                ctx.lineTo(this.x + +this.width + this.lightWidth + this.perspective, canvas.height)\r\n                ctx.lineTo(this.x + this.width + this.lightWidth, canvas.height - 65)\r\n            } else {\r\n                ctx.lineTo(this.x + this.width + this.lightWidth, canvas.height)\r\n            }\r\n            //top right\r\n            ctx.lineTo(this.x + this.width - this.offset, this.y + this.height)\r\n            ctx.closePath()\r\n            ctx.fillStyle = this.color\r\n            ctx.fill()\r\n        }\r\n    }\r\n    drawBody(ctx) {\r\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\r\n    }\r\n    draw(ctx) {\r\n        this.drawBody(ctx)\r\n        this.drawLight(maskCtx)\r\n    }\r\n    onClick() {\r\n        if (!this.isShot) {\r\n            audioPlayer.playAudio('glass')\r\n        }\r\n        this.isShot = true\r\n    }\r\n}\r\n\r\nexport class LightFactory {\r\n    constructor(manifest) {\r\n        this.manifest = manifest\r\n    }\r\n\r\n    createLights(numberOfLights, delay) {\r\n        const { width, height, image, color, lightWidth, lightMargin } = this.manifest\r\n        const lights = []\r\n        const widthSum = width * numberOfLights + lightMargin * (numberOfLights - 1)\r\n        const offset = (canvas.width - widthSum) / 2\r\n\r\n        for (let i = 0; i < numberOfLights; i++) {\r\n            const turnOn = i + delay\r\n            const light = new Light(\r\n                i,\r\n                offset + (width + (i === numberOfLights ? 0 : lightMargin)) * i,\r\n                0,\r\n                width,\r\n                height,\r\n                image,\r\n                color,\r\n                lightWidth,\r\n                turnOn,\r\n                numberOfLights\r\n            )\r\n            lights.push(light)\r\n        }\r\n\r\n        return lights\r\n    }\r\n}\r\n\r\nexport const loadLightFactory = async () => {\r\n    const manifest = await loadManifest('light')\r\n    manifest.image = await loadImage(manifest.mainImageURL)\r\n    return new LightFactory(manifest)\r\n}\r\n","export class Timer {\r\n    constructor() {\r\n        this.startTime = 0\r\n        this.timeElapsed = 0\r\n    }\r\n    start() {\r\n        this.startTime = new Date()\r\n    }\r\n    logTimeElapsed() {\r\n        let timeDiff = (new Date() - this.startTime) / 1000\r\n        let seconds = Math.round(timeDiff)\r\n        if (this.timeElapsed != seconds) {\r\n            this.timeElapsed = seconds\r\n            //console.log(this.timeElapsed)\r\n        }\r\n    }\r\n    getTimeElapsed() {\r\n        return this.timeElapsed\r\n    }\r\n}\r\n","export * from './character'\r\nexport * from './scene'\r\nexport * from './spider'\r\nexport * from './plant'\r\nexport * from './light'\r\nexport * from './loaders'\r\nexport * from './timer'\r\n","export const checkTarget = ({ clientX, clientY }, targets, callback) => {\r\n    callback(\r\n        targets.find(\r\n            target =>\r\n                !target.isShot &&\r\n                clientX > target.x &&\r\n                clientX < target.x + target.width &&\r\n                clientY > target.y &&\r\n                clientY < target.y + target.height\r\n        )\r\n    )\r\n}\r\n","import { ctx, canvas, mask, maskCtx } from '/src/shared/canvas'\r\nimport { loadCharacter, loadScene, loadLightFactory, loadSpiderFactory, loadPlantFactory, Timer } from './classes'\r\nimport { randomIntFromRange } from '/src/shared/helpers'\r\nimport { showGameOver, updateLevel, hideLoadingScreen, updateScore } from '/src/shared/UI'\r\nimport { audioPlayer } from './AudioPlayer'\r\n\r\nimport { checkTarget } from '/src/clickHandler'\r\nimport { updateStreak } from '/src/shared/UI'\r\n\r\nexport const GameLoop = async config => {\r\n    window.game = {\r\n        config: config,\r\n        state: {\r\n            seedsPlanted: 0,\r\n            seedsShown: false,\r\n            spidersKilled: 0,\r\n            spidersKilledTotal: 0,\r\n            level: -1,\r\n            currentLevel: -1,\r\n            gameOver: false,\r\n            levelUpdated: false,\r\n            score: 0,\r\n            streak: 0,\r\n            biggestStreak: 0\r\n        }\r\n    }\r\n    console.log('1')\r\n\r\n    const timer = new Timer()\r\n    const character = await loadCharacter()\r\n    const scene = await loadScene()\r\n    const plantFactory = await loadPlantFactory()\r\n    const lightFactory = await loadLightFactory()\r\n    const spiderFactory = await loadSpiderFactory()\r\n    await audioPlayer.loadAllSounds()\r\n\r\n    audioPlayer.playAudio('music')\r\n\r\n    const plants = plantFactory.createPlants(config.settings.plants.numberOfPots)\r\n    const lamps = lightFactory.createLights(config.settings.lights.numberOfLights, config.timing.startLights)\r\n    let spiders = []\r\n\r\n    //character.epicEntrance().then(() => {})\r\n\r\n    canvas.addEventListener('mousedown', e => {\r\n        checkTarget(e, [...spiders], entity => {\r\n            if (entity) entity.onClick()\r\n            else {\r\n                window.game.state.streak = 0\r\n            }\r\n            updateScore()\r\n            updateStreak(character.streak)\r\n        })\r\n        checkTarget(e, [...lamps, ...plants], entity => {\r\n            if (entity) entity.onClick()\r\n        })\r\n    })\r\n\r\n    const nextLevel = () => {\r\n        window.game.state.currentLevel = window.game.state.level\r\n        window.game.state.levelUpdated = false\r\n        window.game.state.spidersKilled = 0\r\n        spiders = []\r\n    }\r\n\r\n    timer.start()\r\n    console.log('2')\r\n\r\n    // forcing loading screen to see the amazingness\r\n    //setTimeout(() => hideLoadingScreen(), 2000)\r\n    hideLoadingScreen()\r\n\r\n    const gameLoop = () => {\r\n        ctx.globalCompositeOperation = 'normal'\r\n\r\n        scene.draw(ctx)\r\n\r\n        character.move()\r\n\r\n        spiders.forEach(spider => {\r\n            spider.draw(ctx)\r\n        })\r\n\r\n        if (!window.game.state.levelUpdated) {\r\n            window.game.state.levelUpdated = true\r\n            updateLevel()\r\n        }\r\n\r\n        if (config.timing.showSeeds == timer.getTimeElapsed()) {\r\n            window.game.state.level = 0\r\n            updateLevel()\r\n        }\r\n\r\n        if (window.game.state.level === 0 && window.game.state.currentLevel !== window.game.state.level) {\r\n            if (window.game.state.seedsPlanted == plants.length) {\r\n                if (spiders.length == 0) {\r\n                    spiders = spiderFactory.createSpiders(\r\n                        window.game.config.levels[0].numberOfSpiders,\r\n                        character,\r\n                        plants\r\n                    )\r\n                }\r\n            }\r\n            if (!window.game.state.seedsShown) {\r\n                window.game.state.seedsShown = true\r\n                plants.forEach(plant => {\r\n                    if (plant.showSeed) {\r\n                        plant.showSeedButton()\r\n                        plant.showSeed = false\r\n                    }\r\n                })\r\n            }\r\n        } else if (window.game.state.level === 1 && window.game.state.currentLevel !== window.game.state.level) {\r\n            nextLevel()\r\n            plants.forEach(plant => {\r\n                plant.grow()\r\n            })\r\n            //window.game.state.gameOver = true\r\n            window.game.plants = plants\r\n            spiders = spiderFactory.createSpiders(window.game.config.levels[1].numberOfSpiders, character, plants)\r\n        } else if (window.game.state.level === 2 && window.game.state.currentLevel !== window.game.state.level) {\r\n            nextLevel()\r\n            plants.forEach(plant => {\r\n                plant.grow()\r\n            })\r\n            spiders = spiderFactory.createSpiders(window.game.config.levels[2].numberOfSpiders, character, plants)\r\n        } else if (window.game.state.level === 3 && window.game.state.currentLevel !== window.game.state.level) {\r\n            nextLevel()\r\n            plants.forEach(plant => {\r\n                plant.grow()\r\n            })\r\n            spiders = spiderFactory.createSpiders(window.game.config.levels[3].numberOfSpiders, character, plants)\r\n        } else if (window.game.state.level === 4 && window.game.state.currentLevel !== window.game.state.level) {\r\n            nextLevel()\r\n            window.game.state.gameOver = true\r\n            window.game.plants = plants\r\n        }\r\n\r\n        plants.forEach(plant => {\r\n            plant.draw(ctx)\r\n        })\r\n\r\n        character.draw(ctx)\r\n\r\n        // drawing a black mask over the whole screen\r\n        maskCtx.fillStyle = 'rgb(68, 68, 68)'\r\n        //maskCtx.fillStyle = \"rgb(45, 45, 45)\";\r\n        maskCtx.fillRect(0, 0, mask.width, mask.height)\r\n\r\n        character.drawFlash(maskCtx)\r\n        // adding \"white\" light onto the mask\r\n        lamps.forEach(lamp => {\r\n            if (!lamp.isShot) {\r\n                if (!lamp.turnedOn && lamp.turnOn == timer.getTimeElapsed()) {\r\n                    lamp.turnedOn = true\r\n                }\r\n                lamp.drawBody(ctx)\r\n                lamp.drawLight(maskCtx)\r\n            } else {\r\n                lamp.drawBody(ctx)\r\n            }\r\n        })\r\n\r\n        // multiply the mask with the underlying canvas\r\n        ctx.globalCompositeOperation = 'multiply'\r\n        ctx.drawImage(mask, 0, 0)\r\n        timer.logTimeElapsed()\r\n\r\n        if (!window.game.state.gameOver) {\r\n            window.requestAnimationFrame(gameLoop)\r\n        } else {\r\n            showGameOver()\r\n        }\r\n    }\r\n\r\n    return () => {\r\n        //setInterval(gameLoop, 1000 / 60)\r\n        window.requestAnimationFrame(gameLoop)\r\n    }\r\n}\r\n","module.exports = {\r\n    \"name\": \"Plants and Spiders\",\r\n    \"settings\" : {\r\n        \"plants\": {\r\n            \"numberOfPots\": 3\r\n        },\r\n        \"lights\": {\r\n            \"numberOfLights\": 3\r\n        }\r\n    },\r\n    \"timing\": {\r\n        \"showSeeds\": 5,\r\n        \"startLights\": 2,\r\n        \"delayBetweenLights\": 1\r\n    },\r\n    \"levels\": [\r\n        { \r\n            \"id\": 0,\r\n            \"numberOfSpiders\": 30\r\n        },\r\n        { \r\n            \"id\": 1,\r\n            \"numberOfSpiders\": 15\r\n        },\r\n        { \r\n            \"id\": 2,\r\n            \"numberOfSpiders\": 20\r\n        },\r\n        { \r\n            \"id\": 3,\r\n            \"numberOfSpiders\": 25\r\n        }\r\n    ]\r\n};","import { GameLoop } from './gameLoop'\r\nimport config from '/static/manifests/gameConfig.json'\r\nimport './styles/style.scss'\r\n\r\nconst titleScreen = document.querySelector('#titleScreen')\r\nconst tutorialScreen = document.querySelector('#tutorialScreen')\r\ntitleScreen.addEventListener('click', () => {\r\n    titleScreen.classList.add('hidden')\r\n\r\n    tutorialScreen.addEventListener('click', () => {\r\n        tutorialScreen.classList.add('hidden')\r\n\r\n        GameLoop(config).then(startGame => {\r\n            console.log('All systems are go!')\r\n            startGame()\r\n        })\r\n    })\r\n})\r\n\r\n/*features:\r\n- walk up to a plant to grow\r\n- shadows undercharacters\r\n- \r\n*/\r\n\r\n/* \r\n    GAME IDEA:\r\n    - player starts with planting plants\r\n    - spiders are coming towards your plants and want to eat them\r\n    - protect plants against spiders by shooting them\r\n    - plants grow every round\r\n    - spider touching a plant will cause the plant losing one growth cycle thus becoming smaller\r\n    - there will be more spiders and they will be faster or smaller each round (making them harder to hit)\r\n    - each spider picks one of the plants to attack at the beginning of his journey\r\n    - you get points subtracted every time you miss a shot\r\n    - collect plants at the end after 4 rounds, your score depends on how much of your plants is left\r\n    - best achievable score is when all plants are fully grown after 4 rounds and you have missed no shots\r\n*/\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}